import*as l from"three";import{Color as V,SphereGeometry as je,MeshBasicMaterial as He,Mesh as Ie,Vector3 as w,MathUtils as ii,Texture as pe,RepeatWrapping as fe,Vector2 as ne,ShaderMaterial as ni,DoubleSide as oi,UniformsLib as be,Curve as Dt,Vector4 as D,Raycaster as Y,Plane as et,EquirectangularReflectionMapping as si,NearestFilter as ri,Group as ai}from"three";import{OrbitControls as we,TransformControls as ve,LineGeometry as Pe,LineMaterial as li,Line2 as ci,EXRLoader as hi,EffectComposer as di,RenderPass as ui,OutputPass as mi,OBJExporter as gi,STLExporter as pi,GLTFExporter as fi}from"three/examples/jsm/Addons.js";import{TextureElement as G,Vec2Element as oe,ButtonSelectElement as Ve,SliderElement as L,LaceElement as bi,TextElement as it,Vec3Element as k,ColorElement as F,LabelElement as U,BooleanElement as zt,TextSelectElement as Nt,SeperatorElement as kt,ButtonElement as Ce,NumberSelectElement as wi,Lace as vi}from"lacery";import{registerIconLibrary as Pi}from"@shoelace-style/shoelace";class se{data;width;height;texture;columnConnectionVisuals;rowConnectionVisuals;connectionParentMesh=null;connectionMaterial;constructor(t=4,e=4,i=1.25){this.width=t,this.height=e,this.data=new Float32Array(this.width*this.height*4),this.texture=new l.DataTexture(this.data,this.width,this.height,l.RGBAFormat,l.FloatType),this.texture.minFilter=this.texture.magFilter=l.NearestFilter,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0,this.connectionMaterial=new l.LineBasicMaterial({color:R(),depthTest:!1,transparent:!0}),this.columnConnectionVisuals=[];for(let n=0;n<this.width;n++){const s=new l.BufferGeometry().setFromPoints(this.getColumn(n)),r=new l.Line(s,this.connectionMaterial);r.renderOrder=1e3,r.castShadow=!0,this.columnConnectionVisuals.push(r)}this.rowConnectionVisuals=[];for(let n=0;n<this.height;n++){const s=new l.BufferGeometry().setFromPoints(this.getRow(n)),r=new l.Line(s,this.connectionMaterial);r.renderOrder=1e3,r.castShadow=!0,this.rowConnectionVisuals.push(r)}}getTexture(){return this.texture}getWidth(){return this.width}getHeight(){return this.height}toString(){let t=`DynamicVec3Grid: ${this.width}x${this.height}
`;for(let e=0;e<this.height;e++){for(let i=0;i<this.width;i++){const n=(e*this.width+i)*4;t+=`(${this.data[n].toFixed(2)}, ${this.data[n+1].toFixed(2)}, ${this.data[n+2].toFixed(2)}, ${this.data[n+3].toFixed(2)}) `}t+=`
`}return t}addVisuals(t){if(this.connectionParentMesh===null){this.connectionParentMesh=t;for(let e=0;e<this.width;e++)this.columnConnectionVisuals[e].visible=!1,t.add(this.columnConnectionVisuals[e]);for(let e=0;e<this.height;e++)this.rowConnectionVisuals[e].visible=!1,t.add(this.rowConnectionVisuals[e])}}showVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!0;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!0}hideVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!1;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!1}getPoint4(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new l.Vector4(this.data[i],this.data[i+1],this.data[i+2],this.data[i+3])}getPoint(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new l.Vector3(this.data[i],this.data[i+1],this.data[i+2])}getPoints4(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const n=(e*this.width+i)*4;t.push(new l.Vector4(this.data[n],this.data[n+1],this.data[n+2],this.data[n+3]))}return t}getPoints(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const n=(e*this.width+i)*4;t.push(new l.Vector3(this.data[n],this.data[n+1],this.data[n+2]))}return t}setPoint4(t,e,i){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const n=(t*this.width+e)*4;this.data[n]=i.x,this.data[n+1]=i.y,this.data[n+2]=i.z,this.data[n+3]=i.w,this.texture.needsUpdate=!0;const s=new l.BufferGeometry().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=s;const r=new l.BufferGeometry().setFromPoints(this.getRow(t));this.rowConnectionVisuals[t].geometry.dispose(),this.rowConnectionVisuals[t].geometry=r}setPoint(t,e,i){this.setPoint4(t,e,new l.Vector4(i.x,i.y,i.z,1))}getColumn4(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const n=(i*this.width+t)*4;e.push(new l.Vector4(this.data[n],this.data[n+1],this.data[n+2],this.data[n+3]))}return e}getColumn(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const n=(i*this.width+t)*4;e.push(new l.Vector3(this.data[n],this.data[n+1],this.data[n+2]))}return e}getRow4(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const n=(t*this.width+i)*4;e.push(new l.Vector4(this.data[n],this.data[n+1],this.data[n+2],this.data[n+3]))}return e}getRow(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const n=(t*this.width+i)*4;e.push(new l.Vector3(this.data[n],this.data[n+1],this.data[n+2]))}return e}addColumn(t,e=!1){this.resizeBuffer(this.width+1,this.height),e&&this.shiftColumnRight();const i=e?0:this.width-1,n=e?1:this.width-2,s=new l.BufferGeometry().setFromPoints(this.getColumn(i)),r=new l.Line(s,this.connectionMaterial);r.renderOrder=1e3,r.castShadow=!0,e?this.columnConnectionVisuals.unshift(r):this.columnConnectionVisuals.push(r),this.connectionParentMesh?.add(this.columnConnectionVisuals[i]);const h=this.getColumn(n);for(let c=0;c<this.height;c++){const d=h[c].clone().sub(t);this.setPoint(c,i,d)}}removeColumn(t=!1){if(!(this.width<=2)){t&&this.shiftColumnLeft(),this.resizeBuffer(this.width-1,this.height),t?(this.connectionParentMesh?.remove(this.columnConnectionVisuals[0]),this.columnConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.columnConnectionVisuals[this.width]),this.columnConnectionVisuals.pop());for(let e=0;e<this.height;e++){const i=new l.BufferGeometry().setFromPoints(this.getRow(e));this.rowConnectionVisuals[e].geometry.dispose(),this.rowConnectionVisuals[e].geometry=i}}}addRow(t,e=!1){this.resizeBuffer(this.width,this.height+1),e&&this.shiftRowDown();const i=e?0:this.height-1,n=e?1:this.height-2,s=new l.BufferGeometry().setFromPoints(this.getRow(i)),r=new l.Line(s,this.connectionMaterial);r.renderOrder=1e3,r.castShadow=!0,e?this.rowConnectionVisuals.unshift(r):this.rowConnectionVisuals.push(r),this.connectionParentMesh?.add(this.rowConnectionVisuals[i]);const h=this.getRow(n);for(let c=0;c<this.width;c++){const d=h[c].clone().sub(t);this.setPoint(i,c,d)}}removeRow(t=!1){if(!(this.height<=2)){t&&this.shiftRowUp(),this.resizeBuffer(this.width,this.height-1),t?(this.connectionParentMesh?.remove(this.rowConnectionVisuals[0]),this.rowConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.rowConnectionVisuals[this.height]),this.rowConnectionVisuals.pop());for(let e=0;e<this.width;e++){const i=new l.BufferGeometry().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=i}}}shiftColumnRight(){for(let t=0;t<this.height;t++)for(let e=this.width-1;e>0;e--){const i=(t*this.width+e)*4,n=(t*this.width+(e-1))*4;this.data.set(this.data.slice(n,n+4),i)}}shiftColumnLeft(){for(let t=0;t<this.height;t++)for(let e=0;e<this.width-1;e++){const i=(t*this.width+e)*4,n=(t*this.width+(e+1))*4;this.data.set(this.data.slice(n,n+4),i)}}shiftRowDown(){for(let t=this.height-1;t>0;t--)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,n=((t-1)*this.width+e)*4;this.data.set(this.data.slice(n,n+4),i)}}shiftRowUp(){for(let t=0;t<this.height-1;t++)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,n=((t+1)*this.width+e)*4;this.data.set(this.data.slice(n,n+4),i)}}resizeBuffer(t,e){const i=new Float32Array(t*e*4);for(let n=0;n<this.height&&!(n>=e);n++)for(let s=0;s<this.width&&!(s>=t);s++){const r=(n*this.width+s)*4,h=(n*t+s)*4;i.set(this.data.slice(r,r+4),h)}this.width=t,this.height=e,this.data=i,this.texture.dispose(),this.texture=new l.DataTexture(this.data,t,e,l.RGBAFormat,l.FloatType),this.texture.minFilter=this.texture.magFilter=l.NearestFilter,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0}}const y={allEvents:new Map,generalEvents:new Map,viewportEvents:new Map,inspectorEvents:new Map,hierarchyEvents:new Map,subscribe(o,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}i.has(o)||i.set(o,[]),i.get(o).push(e)},unsubscribe(o,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(o)){const n=i.get(o).indexOf(e);n!==-1&&i.get(o).splice(n,1)}},notify(o,t,e){let i;switch(t){case"all":{for(const n of[this.allEvents,this.generalEvents,this.viewportEvents,this.inspectorEvents,this.hierarchyEvents])if(n.has(o))for(const s of n.get(o))s(e);return}case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(o))for(const n of i.get(o))n(e);if(this.allEvents.has(o))for(const n of this.allEvents.get(o))n(e)}};var C=(o=>(o.ALL="all",o.GENERAL="general",o.VIEWPORT="viewport",o.INSPECTOR="inspector",o.HIERARCHY="hierarchy",o))(C||{});class a{static app;static scene;static pCamera;static oCamera;static renderer;static effectComposer;static orbitControls;static oOrbitControls;static transformControls;static oTransformControls;static ambientLight;static directionalLight;static grid;static plane;static tooltip;static objectManager;static creationManager;static selectionManager;static editManager;static effectManager;static ioManager;static interactionsManager;static exportManager;static inspector;static hierarchy;static toolbar;static controls;static sceneProxy;static isOrbitingBool=!1;static isDraggingBool=!1;static is2D=!1;static isDarkMode=!1;static dimension2D(){return this.is2D}static switchDimension(){this.is2D?(this.is2D=!1,this.oTransformControls.detach(),this.orbitControls.enabled=!0,this.oOrbitControls.enabled=!1,this.directionalLight.position.set(10,25,0),this.directionalLight.target.position.set(0,0,0)):(this.is2D=!0,this.transformControls.detach(),this.orbitControls.enabled=!1,this.oOrbitControls.enabled=!0,this.directionalLight.position.set(0,100,0),this.directionalLight.target.position.set(0,0,0)),a.getEffectManager().setupRenderPass(),a.getSelectionManager().doResetSelectedEditHandle(),y.notify("dimensionSwitched",C.ALL,this.is2D)}static darkMode(){return this.isDarkMode}static setMode(t=!1){t?(this.isDarkMode=!0,this.app.classList.remove("sl-theme-light"),this.app.classList.add("sl-theme-dark")):(this.isDarkMode=!1,this.app.classList.add("sl-theme-light"),this.app.classList.remove("sl-theme-dark")),a.getScene().background=new V(Qt()),a.getIOManager().setFlagCache("darkMode",this.isDarkMode),y.notify("modeSwitched",C.ALL,this.isDarkMode)}static getApp(){return this.app}static setApp(t){this.app=t}static getScene(){return this.scene}static getCamera(){return this.is2D?this.oCamera:this.pCamera}static getPerspectiveCamera(){return this.is2D?null:this.pCamera}static getRenderer(){return this.renderer}static getOrbitControls(){return this.is2D?this.oOrbitControls:this.orbitControls}static onOrbitControlsChange(t){this.orbitControls.addEventListener("change",()=>{this.is2D||t()}),this.oOrbitControls.addEventListener("change",()=>{this.is2D&&t()})}static onTransformControlsChange(t){this.transformControls.addEventListener("change",()=>{this.is2D||t()}),this.oTransformControls.addEventListener("change",()=>{this.is2D&&t()})}static onControlsChange(t){this.onOrbitControlsChange(t),this.onTransformControlsChange(t),y.subscribe("dimensionSwitched",C.ALL,()=>{t()})}static noScroll(){this.orbitControls.enableZoom=!1,this.oOrbitControls.enableZoom=!1}static scroll(){this.orbitControls.enableZoom=!0,this.oOrbitControls.enableZoom=!0}static getTransformControls(){return this.is2D?this.oTransformControls:this.transformControls}static getAmbientLight(){return this.ambientLight}static getDirectionalLight(){return this.directionalLight}static setupScene(t,e,i,n,s,r,h,c,d,u){this.scene=t,this.pCamera=e,this.oCamera=i,this.renderer=n,this.orbitControls=s,this.orbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.orbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.oOrbitControls=r,this.oOrbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.oOrbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.transformControls=h,this.transformControls.addEventListener("dragging-changed",m=>{this.orbitControls.enabled=!m.value,this.isDraggingBool=m.value}),this.scene.add(this.transformControls.getHelper()),this.oTransformControls=c,this.oTransformControls.addEventListener("dragging-changed",m=>{this.oOrbitControls.enabled=!m.value,this.isDraggingBool=m.value}),this.scene.add(this.oTransformControls.getHelper()),this.ambientLight=d,this.directionalLight=u}static getEffectComposer(){return this.effectComposer}static setEffectComposer(t){this.effectComposer=t}static getGrid(){return this.grid}static getPlane(){return this.plane}static setupGrid(t,e){this.grid=t,this.plane=e}static getTooltip(){return this.tooltip}static setTooltip(t){this.tooltip=t}static getObjectManager(){return this.objectManager}static setObjectManager(t){this.objectManager=t}static getCreationManager(){return this.creationManager}static setCreationManager(t){this.creationManager=t}static getSelectionManager(){return this.selectionManager}static setSelectionManager(t){this.selectionManager=t}static getEditManager(){return this.editManager}static setEditManager(t){this.editManager=t}static getEffectManager(){return this.effectManager}static setEffectManager(t){this.effectManager=t}static getIOManager(){return this.ioManager}static setIOManager(t){this.ioManager=t}static getInteractionsManager(){return this.interactionsManager}static setInteractionsManager(t){this.interactionsManager=t}static getExportManager(){return this.exportManager}static setExportManager(t){this.exportManager=t}static getInspector(){return this.inspector}static setInspector(t){this.inspector=t}static getHierarchy(){return this.hierarchy}static setHierarchy(t){this.hierarchy=t}static getToolbar(){return this.toolbar}static setToolbar(t){this.toolbar=t}static getControls(){return this.controls}static setControls(t){this.controls=t}static getSceneProxy(){return this.sceneProxy}static setSceneProxy(t){this.sceneProxy=t}static isOrbiting(){return this.isOrbitingBool}static isDragging(){return this.isDraggingBool}static getDefaultImage(){const t=new Image;t.width=1,t.height=1;const e=document.createElement("canvas");e.width=1,e.height=1;const i=e.getContext("2d");return i&&(i.fillStyle="#FFFFFF",i.fillRect(0,0,1,1),t.src=e.toDataURL()),t}}const _=async(o,t)=>{const e=`textures/${o}/${t}`,i=await fetch(e);if(!i.ok)return null;const n=await i.blob();return n.size===0||n.type==="text/html"?null:n};class Le{parentObject;index;radius;mesh;material;constructor(t,e,i=.2){this.parentObject=t,this.index=e,this.radius=i;const n=new je(this.radius);this.material=new He({color:Tt(),depthTest:!1,transparent:!0}),this.mesh=new Ie(n,this.material),this.mesh.castShadow=!0,this.mesh.renderOrder=1001,this.adjustScale(),a.onControlsChange(this.adjustScale.bind(this)),y.subscribe("modeSwitched",C.ALL,()=>{this.material.color.set(Tt())})}getMesh(){return this.mesh}getParentObject(){return this.parentObject}getIndex(){return this.index}getPosition(){return this.mesh.position.clone()}getWorldPosition(){return this.mesh.getWorldPosition(new w)}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}highlight(){this.material.color.set(q())}resetHighlight(){this.material.color.set(Tt())}select(){this.material.color.set(R())}resetSelect(){this.material.color.set(Tt())}hide(){this.mesh.visible=!1}show(){this.mesh.visible=!0}getActive(){return this.mesh.visible}adjustScale(){if(a.dimension2D()){this.mesh.scale.set(1,1,1);return}const t=this.mesh.position.distanceTo(a.getCamera().position),i=Math.abs(t)/10,n=Math.max(1,Math.min(i,20));this.mesh.scale.set(n,n,n)}}class ${name;mesh;uuid;type;export;color=new V(0);editHandles;constructor(t,e,i=new w(0,0,0)){this.name=t,this.mesh=e,this.mesh.position.set(i.x,i.y,i.z),this.mesh.castShadow=!0,this.mesh.frustumCulled=!1,this.uuid=ii.generateUUID(),this.type="VisualObject",this.export=null,this.editHandles=new Map}getName(){return this.name}setName(t){this.name=t}getColor(){return this.color.clone()}setColor(t){this.color.set(t)}getUUID(){return this.uuid}getType(){return this.type}getExport(){return this.export}getMesh(){return this.mesh}getPosition(){const t=new w;return t.copy(this.mesh.position),t}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}move(t,e,i){var n=this.getPosition();n&&(n.x+=t,n.y+=e,n.z+=i,this.setPosition(n))}moveX(t){this.move(t,0,0)}moveY(t){this.move(0,t,0)}moveZ(t){this.move(0,0,t)}edit(){return console.warn("VisualObject: Edit not implemented!"),()=>{console.error("VisualObject: Edit not implemented!")}}createEditHandle(t,e=.2){const i=new Le(this,t,e);this.editHandles.set(t,i),a.getObjectManager().addEditHandle(i)}hasEditHandle(t){return this.editHandles.has(t)}setEditHandlePosition(t,e){if(!this.editHandles.has(t)){console.error("VisualObject:setEditHandlePosition: Edit handle not found!");return}const i=this.editHandles.get(t);i&&i.setPosition(e)}getEditHandlePosition(t){if(!this.editHandles.has(t))return console.error("VisualObject:getEditHandlePosition: Edit handle not found!"),null;const e=this.editHandles.get(t);return e?e.getPosition():null}removeEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:removeEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&(a.getObjectManager().removeEditHandle(e),this.editHandles.delete(t))}removeEditHandles(){this.editHandles.forEach((t,e)=>{a.getObjectManager().removeEditHandle(t)}),this.editHandles.clear()}hideEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:hideEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.hide()}showEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:showEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.show()}hideEditHandles(){this.editHandles.forEach((t,e)=>{t.hide()})}showEditHandles(){this.editHandles.forEach((t,e)=>{t.show()})}unedit(){console.warn("VisualObject: Unedit not implemented!")}}function Ci(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float binomial(int n, int k){
        if(k > n) return 0.0;
        if(k == 0 || k == n) return 1.0;
        float res = 1.0;
        for(int i = 0; i < k; i++){
            res *= float(n - i) / float(i + 1);
        }
        return res;
    }

    float bernstein(int n, int i, float t){
        return binomial(n, i) * pow(t, float(i)) * pow(1.0 - t, float(n - i));
    }

    // Derivative of the Bernstein polynomial with respect to t
    float bernsteinDerivative(int n, int i, float t) {
        if (i == 0) return -float(n) * bernstein(n - 1, i, t);
        if (i == n) return float(n) * bernstein(n - 1, i - 1, t);
        return float(n) * (bernstein(n - 1, i - 1, t) - bernstein(n - 1, i, t));
    }

    vec3 getControlPoint(int i, int j){
        vec2 texCoord = vec2(float(i) / float(controlPointsWidth - 1), float(j) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0001, 0.9999);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 bezierPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        for(int i = 0; i < controlPointsWidth; i++){
            float bernsteinU = bernstein(controlPointsWidth - 1, i, u);
            float bernsteinUDerivative = bernsteinDerivative(controlPointsWidth - 1, i, u);
            for(int j = 0; j < controlPointsHeight; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float bernsteinV = bernstein(controlPointsHeight - 1, j, v);
                float bernsteinVDerivative = bernsteinDerivative(controlPointsHeight - 1, j, v);
                bezierPoint += controlPoint * bernsteinU * bernsteinV;
                tangentU += controlPoint * bernsteinUDerivative * bernsteinV;
                tangentV += controlPoint * bernsteinU * bernsteinVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(bezierPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(bezierPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function X(o,t,e){if(o.length!==t*e)throw console.error("Invalid points array length:",o.length,"Expected:",t*e,t,e),new Error("Points array length must match width * height");const i=new l.BufferGeometry,n=[],s=[];for(const r of o)n.push(r.x,r.y,r.z);for(let r=0;r<e-1;r++)for(let h=0;h<t-1;h++){const c=r*t+h,d=c+1,u=c+t,m=u+1;s.push(c,u,d),s.push(d,u,m)}return i.setAttribute("position",new l.Float32BufferAttribute(n,3)),i.setIndex(s),i.computeVertexNormals(),i}const ht={};function yi(o,t){if(t===0||t===o)return 1;if(ht[o]&&ht[o][t])return ht[o][t];for(var e=1,i=1;i<=t;i++)e*=(o-i+1)/i;return ht[o]||(ht[o]={}),ht[o][t]=e,e}function Te(o,t,e){return new l.Vector3(Kt(o.x,t.x,e),Kt(o.y,t.y,e),Kt(o.z,t.z,e))}function Mi(o,t,e){return Te(o.position,t.position,e)}function Kt(o,t,e){return o+(t-o)*e}function Be(o,t,e,i,n){return i+(o-t)*(n-i)/(e-t)}function W(o,t,e){return(o<0||t<0||t>o)&&console.log("berstein: Invalid arguments for n or i: ",o,t),(e<0||e>1)&&console.log("berstein: Invalid arguments for t: ",e),yi(o,t)*Math.pow(e,t)*Math.pow(1-e,o-t)}function ye(o,t,e){return(o<0||t<0||t>o)&&console.log("bersteinDerivative: Invalid arguments for n or i: ",o,t),(e<0||e>1)&&console.log("bersteinDerivative: Invalid arguments for t: ",e),t===0?-o*W(o-1,t,e):t===o?o*W(o-1,t-1,e):o*(W(o-1,t-1,e)-W(o-1,t,e))}function $t(o,t,e){const i=[];for(let n=0;n<e;n++){const s=n/(e-1);for(let r=0;r<t;r++){const h=r/(t-1);i.push(xi(o,h,s))}}return i}function xi(o,t,e){const i=new w(0,0,0);for(let n=0;n<o.getWidth();n++){const s=W(o.getWidth()-1,n,t);for(let r=0;r<o.getHeight();r++){const h=o.getPoint(r,n),c=W(o.getHeight()-1,r,e);i.add(h.clone().multiplyScalar(s*c))}}return i}class Ue{uniforms;constructor(){this.uniforms=new Map}add(t){const e=this.uniforms.get(t.getName());if(e&&e.getType()===t.getType()){e.value=t.value;return}this.uniforms.set(t.getName(),t)}has(t){return this.uniforms.has(t)}get(t){return this.uniforms.get(t)}getAll(){return Array.from(this.uniforms.values())}mergeFrom(t){t.getAll().forEach(e=>{this.add(e)})}getTHREEUniforms(){const t={};return this.uniforms.forEach(e=>{t[e.getName()]={value:e.value}}),t}}class re{uniforms;enviroment;updateCallback=void 0;constructor(){this.uniforms=new Ue,this.enviroment=!1}getUniforms(){return this.uniforms}setUpdateCallback(t){this.updateCallback=t}removeUpdateCallback(){this.updateCallback=void 0}}class Wt{name;type;value;constructor(t,e,i){this.name=t,this.type=e,this.value=i}getName(){return this.name}getType(){return this.type}}class vt extends Wt{constructor(t,e){super(t,1,e)}}class J extends Wt{constructor(t,e){super(t,2,e)}}class ae extends Wt{constructor(t,e){super(t,3,e)}}class K extends Wt{blob;image;constructor(t,e){const i=new pe;i.wrapS=i.wrapT=fe,super(t,7,i),e!==null?(this.image=new Image,this.image.src=URL.createObjectURL(e),this.image.onload=()=>{i.image=this.image,i.needsUpdate=!0}):(this.image=null,this.value.image=a.getDefaultImage(),i.needsUpdate=!0),this.blob=e}update(){this.image!==null&&this.image.src&&URL.revokeObjectURL(this.image.src),this.value.dispose();const t=new pe;t.wrapS=t.wrapT=fe,this.value=t,this.blob!==null?(this.image===null&&(this.image=new Image),this.image.src=URL.createObjectURL(this.blob),this.image.onload=()=>{this.value.image=this.image,this.value.needsUpdate=!0}):(this.image=null,this.value.image=a.getDefaultImage(),this.value.needsUpdate=!0)}}class Re extends re{tiling;useMainTexture;mainTexture;mainElement;constructor(){super(),this.tiling=new ae("tiling",new ne(1,1)),this.useMainTexture=new J("useMainTexture",!1),this.mainTexture=new K("mainTexture",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture);const t=new G("Texture",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t}getName(){return"Diffuse"}getFragmentShader(){return Ei()}buildUI(t){const e=new oe("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y]}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1]}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.mainElement.updateBlob()}}function Ei(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 color = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Calculate the normal
            vec3 normal = normalize(vNormal);

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor;
            vec3 diffuse = diff * lightColor;

            vec3 finalColor = (ambient + diffuse) * color;

            // Final output
            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}class Ft extends re{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;shininess;useNormalMap;normalMap;normalStrength;useAOMap;aoMap;mainElement;roughnessElement;normalElement;aoElement;constructor(){super(),this.tiling=new ae("tiling",new ne(1,1)),this.useMainTexture=new J("useMainTexture",!1),this.mainTexture=new K("mainTexture",null),this.useRoughnessMap=new J("useRoughnessMap",!1),this.roughnessMap=new K("roughnessMap",null),this.shininess=new vt("shininess",.5),this.useNormalMap=new J("useNormalMap",!1),this.normalMap=new K("normalMap",null),this.normalStrength=new vt("normalStrength",1),this.useAOMap=new J("useAOMap",!1),this.aoMap=new K("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.shininess),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new G("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new G("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new G("Normal",this.normalMap,"blob");i.onChange(()=>{this.useNormalMap.value=i.hasTexture(),this.normalMap.update()}),this.normalElement=i;const n=new G("Ambient Occlusion",this.aoMap,"blob");n.onChange(()=>{this.useAOMap.value=n.hasTexture(),this.aoMap.update()}),this.aoElement=n}getName(){return"Blinn-Phong"}getFragmentShader(){return Si()}buildUI(t){t.add(new Ve("Load a preset...",{rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark",onyx:"Onyx"},this.presetSelect.bind(this),{previews:["textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg","textures/onyx/albedo.jpg"],previewSize:64}));const e=new oe("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new L("Shininess",this.shininess,"value",{min:.01,max:1,step:.01})),t.add(this.normalElement),t.add(new L("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],shininess:this.shininess.value,normalStrength:this.normalStrength.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.shininess.value=t.shininess,this.normalStrength.value=t.normalStrength}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,n,s,r]=await Promise.all([_(t,e.albedo),_(t,e.ambientocclusion),_(t,e.normal),_(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=r,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.normalMap.blob=s,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=n,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function Si(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float shininess;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Get the normal (one minus as a weird fix beacause the vertex shader flips the sides)
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            // Calculate the ambient occlusion
            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the view direction
            vec3 viewDir = normalize(vViewPosition);

            // Calculate the half vector
            vec3 halfDir = normalize(lightDir + viewDir);

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the specular part
            float spec = pow(max(dot(halfDir, normal), 0.0), 200.0 * shininess);

            // Calculate the roughness
            float roughness = useRoughnessMap ? texture2D(roughnessMap, uv).r : 0.0;
            spec *= (1.0 - roughness);

            // Calculate the Blinn-Phong components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor * ao;
            vec3 diffuse = diff * lightColor;
            vec3 specular = spec * lightColor;

            vec3 blinnPhong = (ambient + diffuse + specular) * albedo;

            // Final output
            gl_FragColor = vec4(blinnPhong, 1.0);
        }
    `}class Oi extends re{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;roughness;useNormalMap;normalMap;normalStrength;useMetallicMap;metallicMap;metallic;useAOMap;aoMap;mainElement;roughnessElement;metallicElement;normalElement;aoElement;constructor(){super(),this.enviroment=!0,this.tiling=new ae("tiling",new ne(1,1)),this.useMainTexture=new J("useMainTexture",!1),this.mainTexture=new K("mainTexture",null),this.useRoughnessMap=new J("useRoughnessMap",!1),this.roughnessMap=new K("roughnessMap",null),this.roughness=new vt("roughness",.5),this.useMetallicMap=new J("useMetallicMap",!1),this.metallicMap=new K("metallicMap",null),this.metallic=new vt("metallic",.5),this.useNormalMap=new J("useNormalMap",!1),this.normalMap=new K("normalMap",null),this.normalStrength=new vt("normalStrength",1),this.useAOMap=new J("useAOMap",!1),this.aoMap=new K("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.roughness),this.uniforms.add(this.useMetallicMap),this.uniforms.add(this.metallicMap),this.uniforms.add(this.metallic),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new G("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new G("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new G("Metallic",this.metallicMap,"blob");i.onChange(()=>{this.useMetallicMap.value=i.hasTexture(),this.metallicMap.update()}),this.metallicElement=i;const n=new G("Normal",this.normalMap,"blob");n.onChange(()=>{this.useNormalMap.value=n.hasTexture(),this.normalMap.update()}),this.normalElement=n;const s=new G("Ambient Occlusion",this.aoMap,"blob");s.onChange(()=>{this.useAOMap.value=s.hasTexture(),this.aoMap.update()}),this.aoElement=s}getName(){return"PBR"}getFragmentShader(){return ji()}buildUI(t){t.add(new Ve("Load a preset...",{metal:"Metal",rustymetal:"Rusty Metal",facade:"Facade",onyx:"Onyx",rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark"},this.presetSelect.bind(this),{previews:["textures/metal/albedo.jpg","textures/rustymetal/albedo.jpg","textures/facade/albedo.jpg","textures/onyx/albedo.jpg","textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg"],previewSize:64}));const e=new oe("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new L("Roughness",this.roughness,"value",{min:.04,max:1,step:.01})),t.add(this.metallicElement),t.add(new L("Metallic Strength",this.metallic,"value",{min:0,max:1,step:.01})),t.add(this.normalElement),t.add(new L("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],roughness:this.roughness.value,normalStrength:this.normalStrength.value,metallic:this.metallic.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.roughness.value=t.roughness,this.normalStrength.value=t.normalStrength,this.metallic.value=t.metallic}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.metallicMap.blob=null,this.metallicMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",metallic:"metallic.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,n,s,r,h]=await Promise.all([_(t,e.albedo),_(t,e.ambientocclusion),_(t,e.metallic),_(t,e.normal),_(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=h,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.metallicMap.blob=s,this.useMetallicMap.value=!0,this.metallicMap.update(),this.normalMap.blob=r,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=n,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function ji(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float roughness;

        uniform bool useMetallicMap;
        uniform sampler2D metallicMap;
        uniform float metallic;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        uniform sampler2D envMap;
        uniform float envMapIntensity;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>

        vec3 getEnvColor(){
            vec3 envReflect = reflect(normalize(vPosition - cameraPosition), vWorldNormal);

            vec2 uv = vec2(atan(envReflect.z, envReflect.x) / (2.0 * PI) + 0.5, 
                   asin(envReflect.y) / PI + 0.5);
    
            vec3 envColor = texture2D(envMap, uv).rgb;

            return envColor;
        }

        vec3 fresnelSchlick(vec3 F0, float VdotH){
            return F0 + (1.0 - F0) * pow(1.0 - VdotH, 5.0);
        }

        float GSchlick(float dot, float k){
            return dot / (dot * (1.0 - k) + k);
        }

        float DGGX(float NdotH, float roughness){
            float alpha = roughness * roughness;
            float a2 = alpha * alpha;
            float inDenom = NdotH * NdotH * (a2 - 1.0) + 1.0;
            return a2 / (PI * inDenom * inDenom);
        }

        float SmithGGX(float NdotV, float NdotL, float roughness){
            float roughness1 = roughness + 1.0;
            float k = roughness1 * roughness1 / 8.0;
            return GSchlick(NdotV, k) * GSchlick(NdotL, k);
        }

        void main() {
            vec2 uv = vUV * tiling;

            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;
            
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            float rough = useRoughnessMap ? texture2D(roughnessMap, uv).r * roughness : roughness;

            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            float metal = useMetallicMap ? texture2D(metallicMap, uv).r * metallic : metallic;

            vec3 lightColor = directionalLights[0].color;
            vec3 ambientColor = ambientLightColor;
            vec3 envColor = getEnvColor();

            vec3 ambient = ambientColor * albedo * ao;

            vec3 N = normal;
            vec3 L = directionalLights[0].direction;
            vec3 V = normalize(vViewPosition);
            vec3 H = normalize(L + V);

            float NdotL = max(dot(N, L), 0.0);
            float NdotV = max(dot(N, V), 0.0);
            float NdotH = max(dot(N, H), 0.0);
            float VdotH = max(dot(V, H), 0.0);

            vec3 F0 = mix(vec3(0.04), albedo, metal);
            vec3 F = fresnelSchlick(F0, VdotH);
            float D = DGGX(NdotH, rough);
            float G = SmithGGX(NdotV, NdotL, rough);

            float denom = 4.0 * NdotV * NdotL + 0.001;
            vec3 specular = (D * F * G) / denom;

            vec3 kS = F;
            vec3 kD = (1.0 - kS) * (1.0 - metal);
            vec3 diffuse = kD * albedo / PI;

            vec3 Lo = (diffuse + specular) * lightColor * NdotL;

            vec3 reflection = envColor * F * envMapIntensity;

            vec3 finalColor = Lo + ambient + reflection * (1.0 - rough) * metal;

            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}function Ct(){return{Diffuse:{name:"Diffuse",create:()=>new Re},"Blinn-Phong":{name:"Blinn-Phong",create:()=>new Ft},PBR:{name:"PBR",create:()=>new Oi}}}class le{vertexShader;controlPoints;color;shadingModel;uniformSet;material;group=void 0;constructor(t,e,i,n,s={}){this.vertexShader=t,this.controlPoints=e,this.color=i.clone(),this.shadingModel=n,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet=new Ue,this.uniformSet.mergeFrom(n.getUniforms()),this.material=new ni({vertexShader:this.vertexShader,fragmentShader:this.shadingModel.getFragmentShader(),uniforms:{...this.getUniforms(),...this.getEnviromentUniforms(),...be.common,...be.lights,...s},side:oi,lights:!0}),y.subscribe("enviromentChanged",C.ALL,this.updateEnviroment.bind(this)),y.subscribe("enviromentIntensityChanged",C.ALL,this.updateEnviromentIntensity.bind(this))}update(){this.updateUniforms()}updateControlPoints(){this.material.uniforms.controlPointsTexture.value=this.controlPoints.getTexture(),this.material.uniforms.controlPointsWidth.value=this.controlPoints.getWidth(),this.material.uniforms.controlPointsHeight.value=this.controlPoints.getHeight()}getMaterial(){return this.material}setColor(t){this.color.set(t),this.material.uniforms.color.value.set(t)}setShadingModel(t){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.shadingModel=t,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet.mergeFrom(t.getUniforms()),this.material.fragmentShader=t.getFragmentShader(),this.updateUniforms(),this.updateEnviroment(),this.material.needsUpdate=!0,this.group!==void 0&&(this.group.reset(),this.shadingModel.buildUI(this.group))}getShadingModelName(){return this.shadingModel.getName()}getShadingModelJSON(){return this.shadingModel.toJSON()}buildUI(t){this.group=t,this.group.onChange(this.updateUniforms.bind(this)),this.shadingModel.buildUI(this.group)}setCustomUniform(t,e){this.material.uniforms[t]?this.material.uniforms[t].value=e:this.material.uniforms[t]={value:e}}dispose(){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.material.dispose()}updateUniforms(){const t=this.getUniforms();for(const e in t)this.material.uniforms[e]&&this.material.uniforms[e].value!==t[e].value?this.material.uniforms[e].value=t[e].value:this.material.uniforms[e]=t[e]}updateEnviroment(){this.shadingModel.enviroment&&(this.material.uniforms.envMap.value=a.getScene().environment,this.material.uniforms.envMapIntensity.value=a.getScene().environmentIntensity)}updateEnviromentIntensity(){this.shadingModel.enviroment&&(this.material.uniforms.envMapIntensity.value=a.getScene().environmentIntensity)}getUniforms(){const t=this.shadingModel.getUniforms().getTHREEUniforms();return t.controlPointsTexture={value:this.controlPoints.getTexture()},t.controlPointsWidth={value:this.controlPoints.getWidth()},t.controlPointsHeight={value:this.controlPoints.getHeight()},t.color={value:this.color},t}getEnviromentUniforms(){return{envMap:{value:null},envMapIntensity:{value:1}}}}var De=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o[o.SHADING=2]="SHADING",o))(De||{});class st extends ${mode;controlPoints;geometry;material;collisionGeometry;collisionMesh;radius=.1;reflectivity=0;constructor(t,e,i,n,s=new l.Color(0),r=new l.Vector3(0,0,0),h=1,c=new Ft){const d=new se(i,n);for(let f=0;f<i;f++)for(let P=0;P<n;P++){const v=f+P*i;d.setPoint(P,f,e[v])}const u=new l.PlaneGeometry(0,0,100,100),m=new le(Ci(),d,s,c),g=new l.Mesh(u,m.getMaterial());super(t,g,r),this.controlPoints=d,this.geometry=u,this.material=m,this.mode=h,this.color=s,this.type="BezierPatchObject",this.export=this.exportMesh.bind(this);for(let f=0;f<i;f++)for(let P=0;P<n;P++){const v=f+P*i;this.createEditHandle(v,this.radius),this.setEditHandlePosition(v,e[v])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const p=this.controlPoints.getWidth()+1,b=this.controlPoints.getHeight()+1;this.collisionGeometry=X($t(this.controlPoints,b,p),b,p),this.collisionMesh=new l.Mesh(this.collisionGeometry,new l.MeshBasicMaterial({transparent:!0,opacity:0,visible:!1,side:l.DoubleSide})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),color:this.color.getHex(),mode:this.mode,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(d=>new l.Vector3(d.x,d.y,d.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(De[s]===void 0)throw new Error("Invalid BezierPatchObjectMode mode");const h=Ct()[t.shadingModel.name].create();h.fromJSON(t.shadingModel.params);const c=new st(t.name,e,t.controlPointsWidth,t.controlPointsHeight,i,n,s,h);return c.setReflectivity(t.reflectivity),c}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const n=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth(),r=i.clone().sub(e),h=new l.Vector3(0,r.y,r.z),c=new l.Vector3(r.x,r.y,0);n===0&&s===0?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===0&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===this.controlPoints.getHeight()-1&&s===0?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):n===this.controlPoints.getHeight()-1&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):this.addControlPointRowCol(n,s,r);for(let d=0;d<this.controlPoints.getWidth();d++)for(let u=0;u<this.controlPoints.getHeight();u++){const m=d+u*this.controlPoints.getWidth();this.setEditHandlePosition(m,this.controlPoints.getPoint(u,d))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var n=0,s=0;t===0?(this.controlPoints.addRow(i,!0),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(this.controlPoints.addColumn(i,!1),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let r=0;r<n;r++)this.createEditHandle(s+r,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=2||this.controlPoints.getHeight()<=2||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let n=0;n<this.controlPoints.getWidth();n++)for(let s=0;s<this.controlPoints.getHeight();s++){const r=n+s*this.controlPoints.getWidth();this.setEditHandlePosition(r,this.controlPoints.getPoint(s,n))}this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,n=0;t===0?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let s=0;s<i;s++)this.removeEditHandle(n+s)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,n,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(q())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=X($t(this.controlPoints,t,e),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=$t(this.controlPoints,100,100),e=X(t,100,100),i=new l.MeshStandardMaterial({color:this.color,side:l.DoubleSide}),n=new l.Mesh(e,i);return n.position.copy(this.mesh.position),n.rotation.copy(this.mesh.rotation),n.scale.copy(this.mesh.scale),n}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function Hi(){return[-5,10,5]}function Ii(){return[0,100,0]}function Vi(){return 15528177}function Li(){return 3092528}function Qt(){return a.darkMode()?Li():Vi()}function q(){return 15105570}function R(){return 15158332}function Tt(){return a.darkMode()?11321297:3426654}function Ut(o){const t=[1752220,3066993,3447003,10181046,3426654,15844367,13849600,15158332];return t[o%t.length]}function St(o,t){var e=new w;return e.set(o.x+(o.x-t.x),o.y-(o.y-t.y),o.z+(o.z-t.z)),e}function ze(o){switch(o){case"LinearCurveObject":return{name:"waypoints",lucide:!0};case"BezierCurveObject":return{name:"bezier2",lucide:!1};case"BezierSplineObject":return{name:"bezier",lucide:!1};case"UniformBSplineObject":return{name:"spline",lucide:!0};case"UniformRationBSplineObject":return{name:"diameter",lucide:!0};case"BezierPatchObject":return{name:"grid-2x2",lucide:!0};case"UniformBSplineSurfaceObject":return{name:"grid-3x3",lucide:!0};case"UniformRationalBSplineSurfaceObject":return{name:"ratio",lucide:!0};default:return{name:"circle-help",lucide:!0}}}const Ti=`32
3 3
1.4 0.0 2.4
1.4 -0.784 2.4
0.784 -1.4 2.4
0.0 -1.4 2.4
1.3375 0.0 2.53125
1.3375 -0.749 2.53125
0.749 -1.3375 2.53125
0.0 -1.3375 2.53125
1.4375 0.0 2.53125
1.4375 -0.805 2.53125
0.805 -1.4375 2.53125
0.0 -1.4375 2.53125
1.5 0.0 2.4
1.5 -0.84 2.4
0.84 -1.5 2.4
0.0 -1.5 2.4
3 3
0.0 -1.4 2.4
-0.784 -1.4 2.4
-1.4 -0.784 2.4
-1.4 0.0 2.4
0.0 -1.3375 2.53125
-0.749 -1.3375 2.53125
-1.3375 -0.749 2.53125
-1.3375 0.0 2.53125
0.0 -1.4375 2.53125
-0.805 -1.4375 2.53125
-1.4375 -0.805 2.53125
-1.4375 0.0 2.53125
0.0 -1.5 2.4
-0.84 -1.5 2.4
-1.5 -0.84 2.4
-1.5 0.0 2.4
3 3
-1.4 0.0 2.4
-1.4 0.784 2.4
-0.784 1.4 2.4
0.0 1.4 2.4
-1.3375 0.0 2.53125
-1.3375 0.749 2.53125
-0.749 1.3375 2.53125
0.0 1.3375 2.53125
-1.4375 0.0 2.53125
-1.4375 0.805 2.53125
-0.805 1.4375 2.53125
0.0 1.4375 2.53125
-1.5 0.0 2.4
-1.5 0.84 2.4
-0.84 1.5 2.4
0.0 1.5 2.4
3 3
0.0 1.4 2.4
0.784 1.4 2.4
1.4 0.784 2.4
1.4 0.0 2.4
0.0 1.3375 2.53125
0.749 1.3375 2.53125
1.3375 0.749 2.53125
1.3375 0.0 2.53125
0.0 1.4375 2.53125
0.805 1.4375 2.53125
1.4375 0.805 2.53125
1.4375 0.0 2.53125
0.0 1.5 2.4
0.84 1.5 2.4
1.5 0.84 2.4
1.5 0.0 2.4
3 3
1.5 0.0 2.4
1.5 -0.84 2.4
0.84 -1.5 2.4
0.0 -1.5 2.4
1.75 0.0 1.875
1.75 -0.98 1.875
0.98 -1.75 1.875
0.0 -1.75 1.875
2.0 0.0 1.35
2.0 -1.12 1.35
1.12 -2.0 1.35
0.0 -2.0 1.35
2.0 0.0 0.9
2.0 -1.12 0.9
1.12 -2.0 0.9
0.0 -2.0 0.9
3 3
0.0 -1.5 2.4
-0.84 -1.5 2.4
-1.5 -0.84 2.4
-1.5 0.0 2.4
0.0 -1.75 1.875
-0.98 -1.75 1.875
-1.75 -0.98 1.875
-1.75 0.0 1.875
0.0 -2.0 1.35
-1.12 -2.0 1.35
-2.0 -1.12 1.35
-2.0 0.0 1.35
0.0 -2.0 0.9
-1.12 -2.0 0.9
-2.0 -1.12 0.9
-2.0 0.0 0.9
3 3
-1.5 0.0 2.4
-1.5 0.84 2.4
-0.84 1.5 2.4
0.0 1.5 2.4
-1.75 0.0 1.875
-1.75 0.98 1.875
-0.98 1.75 1.875
0.0 1.75 1.875
-2.0 0.0 1.35
-2.0 1.12 1.35
-1.12 2.0 1.35
0.0 2.0 1.35
-2.0 0.0 0.9
-2.0 1.12 0.9
-1.12 2.0 0.9
0.0 2.0 0.9
3 3
0.0 1.5 2.4
0.84 1.5 2.4
1.5 0.84 2.4
1.5 0.0 2.4
0.0 1.75 1.875
0.98 1.75 1.875
1.75 0.98 1.875
1.75 0.0 1.875
0.0 2.0 1.35
1.12 2.0 1.35
2.0 1.12 1.35
2.0 0.0 1.35
0.0 2.0 0.9
1.12 2.0 0.9
2.0 1.12 0.9
2.0 0.0 0.9
3 3
2.0 0.0 0.9
2.0 -1.12 0.9
1.12 -2.0 0.9
0.0 -2.0 0.9
2.0 0.0 0.45
2.0 -1.12 0.45
1.12 -2.0 0.45
0.0 -2.0 0.45
1.5 0.0 0.225
1.5 -0.84 0.225
0.84 -1.5 0.225
0.0 -1.5 0.225
1.5 0.0 0.15
1.5 -0.84 0.15
0.84 -1.5 0.15
0.0 -1.5 0.15
3 3
0.0 -2.0 0.9
-1.12 -2.0 0.9
-2.0 -1.12 0.9
-2.0 0.0 0.9
0.0 -2.0 0.45
-1.12 -2.0 0.45
-2.0 -1.12 0.45
-2.0 0.0 0.45
0.0 -1.5 0.225
-0.84 -1.5 0.225
-1.5 -0.84 0.225
-1.5 0.0 0.225
0.0 -1.5 0.15
-0.84 -1.5 0.15
-1.5 -0.84 0.15
-1.5 0.0 0.15
3 3
-2.0 0.0 0.9
-2.0 1.12 0.9
-1.12 2.0 0.9
0.0 2.0 0.9
-2.0 0.0 0.45
-2.0 1.12 0.45
-1.12 2.0 0.45
0.0 2.0 0.45
-1.5 0.0 0.225
-1.5 0.84 0.225
-0.84 1.5 0.225
0.0 1.5 0.225
-1.5 0.0 0.15
-1.5 0.84 0.15
-0.84 1.5 0.15
0.0 1.5 0.15
3 3
0.0 2.0 0.9
1.12 2.0 0.9
2.0 1.12 0.9
2.0 0.0 0.9
0.0 2.0 0.45
1.12 2.0 0.45
2.0 1.12 0.45
2.0 0.0 0.45
0.0 1.5 0.225
0.84 1.5 0.225
1.5 0.84 0.225
1.5 0.0 0.225
0.0 1.5 0.15
0.84 1.5 0.15
1.5 0.84 0.15
1.5 0.0 0.15
3 3
-1.6 0.0 2.025
-1.6 -0.3 2.025
-1.5 -0.3 2.25
-1.5 0.0 2.25
-2.3 0.0 2.025
-2.3 -0.3 2.025
-2.5 -0.3 2.25
-2.5 0.0 2.25
-2.7 0.0 2.025
-2.7 -0.3 2.025
-3.0 -0.3 2.25
-3.0 0.0 2.25
-2.7 0.0 1.8
-2.7 -0.3 1.8
-3.0 -0.3 1.8
-3.0 0.0 1.8
3 3
-1.5 0.0 2.25
-1.5 0.3 2.25
-1.6 0.3 2.025
-1.6 0.0 2.025
-2.5 0.0 2.25
-2.5 0.3 2.25
-2.3 0.3 2.025
-2.3 0.0 2.025
-3.0 0.0 2.25
-3.0 0.3 2.25
-2.7 0.3 2.025
-2.7 0.0 2.025
-3.0 0.0 1.8
-3.0 0.3 1.8
-2.7 0.3 1.8
-2.7 0.0 1.8
3 3
-2.7 0.0 1.8
-2.7 -0.3 1.8
-3.0 -0.3 1.8
-3.0 0.0 1.8
-2.7 0.0 1.575
-2.7 -0.3 1.575
-3.0 -0.3 1.35
-3.0 0.0 1.35
-2.5 0.0 1.125
-2.5 -0.3 1.125
-2.65 -0.3 0.9375
-2.65 0.0 0.9375
-2.0 0.0 0.9
-2.0 -0.3 0.9
-1.9 -0.3 0.6
-1.9 0.0 0.6
3 3
-3.0 0.0 1.8
-3.0 0.3 1.8
-2.7 0.3 1.8
-2.7 0.0 1.8
-3.0 0.0 1.35
-3.0 0.3 1.35
-2.7 0.3 1.575
-2.7 0.0 1.575
-2.65 0.0 0.9375
-2.65 0.3 0.9375
-2.5 0.3 1.125
-2.5 0.0 1.125
-1.9 0.0 0.6
-1.9 0.3 0.6
-2.0 0.3 0.9
-2.0 0.0 0.9
3 3
1.7 0.0 1.425
1.7 -0.66 1.425
1.7 -0.66 0.6
1.7 0.0 0.6
2.6 0.0 1.425
2.6 -0.66 1.425
3.1 -0.66 0.825
3.1 0.0 0.825
2.3 0.0 2.1
2.3 -0.25 2.1
2.4 -0.25 2.025
2.4 0.0 2.025
2.7 0.0 2.4
2.7 -0.25 2.4
3.3 -0.25 2.4
3.3 0.0 2.4
3 3
1.7 0.0 0.6
1.7 0.66 0.6
1.7 0.66 1.425
1.7 0.0 1.425
3.1 0.0 0.825
3.1 0.66 0.825
2.6 0.66 1.425
2.6 0.0 1.425
2.4 0.0 2.025
2.4 0.25 2.025
2.3 0.25 2.1
2.3 0.0 2.1
3.3 0.0 2.4
3.3 0.25 2.4
2.7 0.25 2.4
2.7 0.0 2.4
3 3
2.7 0.0 2.4
2.7 -0.25 2.4
3.3 -0.25 2.4
3.3 0.0 2.4
2.8 0.0 2.475
2.8 -0.25 2.475
3.525 -0.25 2.49375
3.525 0.0 2.49375
2.9 0.0 2.475
2.9 -0.15 2.475
3.45 -0.15 2.5125
3.45 0.0 2.5125
2.8 0.0 2.4
2.8 -0.15 2.4
3.2 -0.15 2.4
3.2 0.0 2.4
3 3
3.3 0.0 2.4
3.3 0.25 2.4
2.7 0.25 2.4
2.7 0.0 2.4
3.525 0.0 2.49375
3.525 0.25 2.49375
2.8 0.25 2.475
2.8 0.0 2.475
3.45 0.0 2.5125
3.45 0.15 2.5125
2.9 0.15 2.475
2.9 0.0 2.475
3.2 0.0 2.4
3.2 0.15 2.4
2.8 0.15 2.4
2.8 0.0 2.4
3 3
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.8 0.0 3.15
0.8 -0.45 3.15
0.45 -0.8 3.15
0.0 -0.8 3.15
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.2 0.0 2.7
0.2 -0.112 2.7
0.112 -0.2 2.7
0.0 -0.2 2.7
3 3
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 -0.8 3.15
-0.45 -0.8 3.15
-0.8 -0.45 3.15
-0.8 0.0 3.15
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 -0.2 2.7
-0.112 -0.2 2.7
-0.2 -0.112 2.7
-0.2 0.0 2.7
3 3
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
-0.8 0.0 3.15
-0.8 0.45 3.15
-0.45 0.8 3.15
0.0 0.8 3.15
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
-0.2 0.0 2.7
-0.2 0.112 2.7
-0.112 0.2 2.7
0.0 0.2 2.7
3 3
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.0 3.15
0.0 0.8 3.15
0.45 0.8 3.15
0.8 0.45 3.15
0.8 0.0 3.15
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.0 2.85
0.0 0.2 2.7
0.112 0.2 2.7
0.2 0.112 2.7
0.2 0.0 2.7
3 3
0.2 0.0 2.7
0.2 -0.112 2.7
0.112 -0.2 2.7
0.0 -0.2 2.7
0.4 0.0 2.55
0.4 -0.224 2.55
0.224 -0.4 2.55
0.0 -0.4 2.55
1.3 0.0 2.55
1.3 -0.728 2.55
0.728 -1.3 2.55
0.0 -1.3 2.55
1.3 0.0 2.4
1.3 -0.728 2.4
0.728 -1.3 2.4
0.0 -1.3 2.4
3 3
0.0 -0.2 2.7
-0.112 -0.2 2.7
-0.2 -0.112 2.7
-0.2 0.0 2.7
0.0 -0.4 2.55
-0.224 -0.4 2.55
-0.4 -0.224 2.55
-0.4 0.0 2.55
0.0 -1.3 2.55
-0.728 -1.3 2.55
-1.3 -0.728 2.55
-1.3 0.0 2.55
0.0 -1.3 2.4
-0.728 -1.3 2.4
-1.3 -0.728 2.4
-1.3 0.0 2.4
3 3
-0.2 0.0 2.7
-0.2 0.112 2.7
-0.112 0.2 2.7
0.0 0.2 2.7
-0.4 0.0 2.55
-0.4 0.224 2.55
-0.224 0.4 2.55
0.0 0.4 2.55
-1.3 0.0 2.55
-1.3 0.728 2.55
-0.728 1.3 2.55
0.0 1.3 2.55
-1.3 0.0 2.4
-1.3 0.728 2.4
-0.728 1.3 2.4
0.0 1.3 2.4
3 3
0.0 0.2 2.7
0.112 0.2 2.7
0.2 0.112 2.7
0.2 0.0 2.7
0.0 0.4 2.55
0.224 0.4 2.55
0.4 0.224 2.55
0.4 0.0 2.55
0.0 1.3 2.55
0.728 1.3 2.55
1.3 0.728 2.55
1.3 0.0 2.55
0.0 1.3 2.4
0.728 1.3 2.4
1.3 0.728 2.4
1.3 0.0 2.4
3 3
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
1.425 0.0 0.0
1.425 0.798 0.0
0.798 1.425 0.0
0.0 1.425 0.0
1.5 0.0 0.075
1.5 0.84 0.075
0.84 1.5 0.075
0.0 1.5 0.075
1.5 0.0 0.15
1.5 0.84 0.15
0.84 1.5 0.15
0.0 1.5 0.15
3 3
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 1.425 0.0
-0.798 1.425 0.0
-1.425 0.798 0.0
-1.425 0.0 0.0
0.0 1.5 0.075
-0.84 1.5 0.075
-1.5 0.84 0.075
-1.5 0.0 0.075
0.0 1.5 0.15
-0.84 1.5 0.15
-1.5 0.84 0.15
-1.5 0.0 0.15
3 3
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
-1.425 0.0 0.0
-1.425 -0.798 0.0
-0.798 -1.425 0.0
0.0 -1.425 0.0
-1.5 0.0 0.075
-1.5 -0.84 0.075
-0.84 -1.5 0.075
0.0 -1.5 0.075
-1.5 0.0 0.15
-1.5 -0.84 0.15
-0.84 -1.5 0.15
0.0 -1.5 0.15
3 3
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 0.0 0.0
0.0 -1.425 0.0
0.798 -1.425 0.0
1.425 -0.798 0.0
1.425 0.0 0.0
0.0 -1.5 0.075
0.84 -1.5 0.075
1.5 -0.84 0.075
1.5 0.0 0.075
0.0 -1.5 0.15
0.84 -1.5 0.15
1.5 -0.84 0.15
1.5 0.0 0.15`;function Me(o,t){const e=Ti.split(`
`),i=parseInt(e[0]);var n=1;for(let s=0;s<i;s++){const r=e[n++].split(" "),h=parseInt(r[0]),c=parseInt(r[1]),d=[];for(let g=0;g<=h;g++)for(let p=0;p<=c;p++){const b=e[n++].split(" "),f=new w(parseFloat(b[0]),parseFloat(b[2]),parseFloat(b[1]));f.multiplyScalar(o),d.push(f)}const u=t?Ut(s):8359053,m=new st(`Teapot ${s+1}`,d,h+1,c+1,new V(u));a.getObjectManager().addObject(m)}}function Bi(o){const t=new l.Scene;t.background=new l.Color(255);const e=new l.PerspectiveCamera(75,o.clientWidth/o.clientHeight,.1,1e3);e.position.set(...Hi());const i=100,n=new l.OrthographicCamera(o.clientWidth/-100,o.clientWidth/i,o.clientHeight/i,o.clientHeight/-100,.1,1e3);n.position.set(...Ii());const s=new l.WebGLRenderer;s.setSize(o.clientWidth,o.clientHeight),s.setPixelRatio(window.devicePixelRatio),s.shadowMap.enabled=!0,o.appendChild(s.domElement);const r=new we(e,s.domElement);r.enableDamping=!0,r.dampingFactor=.25;const h=new we(n,s.domElement);h.enableDamping=!0,h.dampingFactor=.25,h.enableRotate=!1,h.mouseButtons={LEFT:l.MOUSE.PAN,MIDDLE:l.MOUSE.DOLLY,RIGHT:l.MOUSE.PAN};const c=new ve(e,s.domElement);c.setTranslationSnap(.01),c.addEventListener("objectChange",()=>y.notify("transformMoved",C.VIEWPORT));const d=new ve(n,s.domElement);d.setTranslationSnap(.01),d.addEventListener("objectChange",()=>y.notify("transformMoved",C.VIEWPORT)),d.showY=!1;const u=new l.AmbientLight(15790320,.2);t.add(u);const m=new l.DirectionalLight(16777215,1);m.position.set(15,20,0),m.castShadow=!0,m.shadow.mapSize.width=2048,m.shadow.mapSize.height=2048,m.shadow.camera.far=50,m.shadow.camera.near=.5,m.shadow.camera.left=-10,m.shadow.camera.right=10,m.shadow.camera.top=10,m.shadow.camera.bottom=-10,t.add(m),window.addEventListener("resize",()=>zi(o,e,n,i,s)),window.addEventListener("beforeunload",()=>a.getIOManager().saveSceneToCache()),a.setupScene(t,e,n,s,r,h,c,d,u,m);const g=document.createElement("div");g.style.position="absolute",g.style.bottom="1rem",g.style.right="23%",g.style.display="flex",g.style.flexDirection="column",g.style.alignItems="center",g.style.gap="0.5rem";const p=document.createElement("img");p.src="/icons/eth.svg",p.style.width="5rem",p.style.opacity="0.6",p.style.cursor="pointer",p.onclick=()=>window.open("https://inf.ethz.ch/","_blank"),g.appendChild(p);const b=document.createElement("img");b.src="/icons/cgl.svg",b.style.width="8rem",b.style.cursor="pointer",b.onclick=()=>window.open("https://www.cgl.ethz.ch/","_blank"),g.appendChild(b);const f=document.createElement("p");f.innerText="Made by Simon Wadsack",f.style.fontSize="0.7rem",f.style.color="var(--sl-color-neutral-400)",f.style.cursor="pointer",f.onclick=()=>window.open("https://github.com/SimonWadsack/","_blank"),g.appendChild(f),o.appendChild(g)}function Ui(){const o=new l.GridHelper(20,40);o.material.opacity=.75,o.material.transparent=!0,o.position.set(0,-.5,0);const t=new l.PlaneGeometry(20,20);t.rotateX(-Math.PI/2);const e=new l.ShadowMaterial({color:0,opacity:.2}),i=new l.Mesh(t,e);i.receiveShadow=!0,i.position.set(0,-.51,0),a.getScene().add(o),a.getScene().add(i),a.setupGrid(o,i)}function Ri(o){const t=document.createElement("div");t.style.position="absolute",t.style.backgroundColor="var(--sl-color-neutral-100)",t.style.color="var(--sl-input-color)",t.style.fontFamily="var(--sl-font-sans)",t.style.fontSize="var(--sl-font-size-small)",t.style.padding="0.5em",t.style.borderRadius="var(--sl-border-radius-small)",t.style.border="solid",t.style.borderWidth="1px",t.style.borderColor="var(--sl-color-neutral-300)",t.style.pointerEvents="none",t.style.display="none",t.style.zIndex="1000",t.innerText="TEST",o.appendChild(t),a.setTooltip(t)}function Di(){const o=a.getIOManager().getFlagCache("darkMode");a.setMode(o)}function zi(o,t,e,i,n){t.aspect=o.clientWidth/o.clientHeight,t.updateProjectionMatrix(),e.left=o.clientWidth/-100,e.right=o.clientWidth/i,e.top=o.clientHeight/i,e.bottom=o.clientHeight/-100,e.updateProjectionMatrix(),n.setSize(o.clientWidth,o.clientHeight)}class Ni{objects;meshLookup;editHandleLookup;constructor(){this.objects=new Map,this.meshLookup=new Map,this.editHandleLookup=new Map}addObject(t){const e=t.getMesh();if(!e){console.error(`addObject: Object with id ${t.getUUID()} has no mesh!`);return}a.getScene().add(e),this.objects.set(t.getUUID(),t),this.meshLookup.set(e,t),y.notify("objectAdded",C.GENERAL,t)}addEditHandle(t){const i=t.getParentObject().getMesh();if(!i){console.error("addEditHandle: Parent has no mesh!");return}const n=t.getMesh();i.add(n),this.editHandleLookup.set(n,t),y.notify("editHandleAdded",C.GENERAL,t)}getObjectByUUID(t){return this.objects.has(t)?this.objects.get(t):(console.error(`getObjectById: Object with uuid ${t} not found!`),null)}selectable(t){return t.userData.collision&&t.userData.object?!0:this.meshLookup.has(t)}isEditHandle(t){if(this.editHandleLookup.has(t)){const e=this.editHandleLookup.get(t);if(e&&e.getActive())return!0}return!1}isVisualObject(t){return t.userData.collision&&t.userData.object?!0:this.meshLookup.has(t)}getVisualObjectByMesh(t){return this.meshLookup.has(t)?this.meshLookup.get(t):t.userData.collision&&t.userData.object?t.userData.object:(console.error(`getVisualObjectByMesh: Object with mesh ${t} not found!`),null)}getEditHandleByMesh(t){return this.editHandleLookup.has(t)?this.editHandleLookup.get(t):(console.error(`getEditHandleByMesh: Edit handle with mesh ${t} not found!`),null)}removeObject(t){const e=this.getObjectByUUID(t);if(!e){console.error(`removeObject: Object with id ${t} not found!`);return}const i=e.getMesh();if(!i){console.error(`removeObject: Object with id ${t} has no mesh!`);return}e.dispose(),a.getScene().remove(i),this.objects.delete(t),this.meshLookup.delete(i),y.notify("objectRemoved",C.ALL,e)}removeObjects(){this.objects.forEach((t,e)=>{this.removeObject(e)}),this.objects.clear(),this.meshLookup.clear(),this.editHandleLookup.clear()}removeEditHandle(t){if(!t){console.error(`removeEditHandle: Edit handle ${t} not found!`);return}const i=t.getParentObject().getMesh();if(!i){console.error("removeEditHandle: Parent has no mesh!");return}const n=t.getMesh();i.remove(n),this.editHandleLookup.delete(n),y.notify("editHandleRemoved",C.ALL,t)}getObjects(){return Array.from(this.objects.values())}isGrid(t){return t===a.getGrid()}isPlane(t){return t===a.getPlane()}}function ki(o,t){if(!o||!Array.isArray(o)||o.length<2)return console.error("bezier: Invalid points array!"),null;if(t<0||t>1)return console.error("bezier: Invalid t value!"),null;const e=o.length-1;let i=new w(0,0,0);for(let n=0;n<=e;n++){const s=W(e,n,t);i.addScaledVector(o[n],s)}return i}function Wi(o,t,e,i,n){if(n<0||n>1+.05)return console.error("cubicBezier: Invalid t value!",n),null;const s=1-n,r=s*s,h=r*s,c=n*n,d=c*n,u=new w(0,0,0);return u.addScaledVector(o,h),u.addScaledVector(t,3*r*n),u.addScaledVector(e,3*s*c),u.addScaledVector(i,d),u}class ce extends Dt{controlPoints;constructor(t=[]){super(),this.controlPoints=t}getPoint(t,e=new w){const i=e;if(this.controlPoints.length<2)return console.log("BezierCurve: Not enough control points!"),i;const n=ki(this.controlPoints,t);return n===null?(console.log("BezierCurve:getPoint: Bezier calculation failed!"),i):(i.copy(n),i)}setPoints(t){this.controlPoints=t}copy(t){return t instanceof ce?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this):(console.log("BezierCurve:copy: Source is not an instance of BezierCurve!"),this)}}var Ne=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o[o.DE_CASTELJAU=2]="DE_CASTELJAU",o[o.INFO=3]="INFO",o))(Ne||{});class ut extends ${mode;controlPoints;segments;radius;radialSegments;geometry;material;curve;connectionVisual;deCasteljauT;deCasteljauVisuals;deCasteljauCollisionMesh;constructor(t,e=[new l.Vector3(-5,0,0),new l.Vector3(0,5,0),new l.Vector3(5,0,0)],i=new l.Color(0),n=100,s=new l.Vector3(0,0,0),r=1){const h=new ce(e),c=.05,d=8,u=new l.TubeGeometry(h,n,c,d,!1),m=new l.MeshBasicMaterial({color:i});m.side=l.DoubleSide;const g=new l.Mesh(u,m);super(t,g,s),this.curve=h,this.geometry=u,this.material=m,this.controlPoints=e,this.color=i,this.segments=n,this.mode=r,this.radius=c,this.radialSegments=d,this.type="BezierCurveObject";for(let v=0;v<this.controlPoints.length;v++)this.createEditHandle(v),this.setEditHandlePosition(v,this.controlPoints[v]);const p=new l.BufferGeometry().setFromPoints(this.controlPoints),b=new l.LineBasicMaterial({color:R()});this.connectionVisual=new l.Line(p,b),this.connectionVisual.castShadow=!0,g.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles(),this.deCasteljauT=.5,this.deCasteljauVisuals=[];const f=new l.TubeGeometry(this.curve,n,this.radius*10,this.radialSegments,!1),P=new l.MeshBasicMaterial({transparent:!0,opacity:0,visible:!1});this.deCasteljauCollisionMesh=new l.Mesh(f,P),g.add(this.deCasteljauCollisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideEditHandles(),this.disableDeCasteljau()):t===1?(this.connectionVisual.visible=!0,this.showEditHandles(),this.disableDeCasteljau()):t===2?(this.connectionVisual.visible=!1,this.hideEditHandles(),this.enableDeCasteljau()):t===3&&(this.connectionVisual.visible=!1,this.hideEditHandles(),this.disableDeCasteljau())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),color:this.color.getHex(),segments:this.segments,mode:this.mode,deCasteljauT:this.deCasteljauT}}static fromJSON(t){const e=t.controlPoints.map(h=>new l.Vector3(h.x,h.y,h.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(Ne[s]===void 0)throw new Error("Invalid BezierCurveObject mode");const r=new ut(t.name,e,i,t.segments,n,s);return s===2&&(r.enableDeCasteljau(),r.updateDeCasteljauT(t.deCasteljauT!==void 0?t.deCasteljauT:.5)),r}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideEditHandles()}enableDeCasteljau(){if(this.deCasteljauVisuals.length>0)return;const t=this.controlPoints.length;var e=[];const i=[],n=[];for(let c=0;c<t;c++){const d=new l.SphereGeometry(.1),u=new l.MeshBasicMaterial({color:Ut(0)}),m=new l.Mesh(d,u);m.position.set(this.controlPoints[c].x,this.controlPoints[c].y,this.controlPoints[c].z),this.mesh.add(m),e.push(this.controlPoints[c]),i.push(m),n.push(this.controlPoints[c])}const s=new l.BufferGeometry().setFromPoints(n),r=new l.LineBasicMaterial({color:Ut(0)}),h=new l.Line(s,r);this.mesh.add(h),this.deCasteljauVisuals[0]={points:i,line:h};for(let c=0;c<t-1;c++){const d=[],u=[],m=c===t-2?.25:.1,g=c===t-2?this.getColor():Ut(c+1);for(let P=0;P<t-c-1;P++){const v=Te(e[P],e[P+1],this.deCasteljauT),E=new l.SphereGeometry(m),x=new l.MeshBasicMaterial({color:g}),M=new l.Mesh(E,x);M.position.set(v.x,v.y,v.z),d.push(v),u.push(M),this.mesh.add(M)}e=d.slice();const p=new l.BufferGeometry().setFromPoints(d),b=new l.LineBasicMaterial({color:g}),f=new l.Line(p,b);this.deCasteljauVisuals[c+1]={points:u,line:f},this.mesh.add(f)}}disableDeCasteljau(){this.deCasteljauVisuals.forEach(t=>{t.points.forEach(e=>{this.mesh.remove(e)}),this.mesh.remove(t.line)}),this.deCasteljauVisuals=[]}getDeCasteljauT(){return this.deCasteljauT}updateDeCasteljauT(t){this.deCasteljauT=t,this.recomputeDeCasteljau()}getCollisionMesh(){return this.deCasteljauCollisionMesh}updateDeCasteljauFromNearestPoint(t){const e=this.curve.getPoints(500);let i=Number.MAX_VALUE,n=0;for(let s=0;s<e.length;s++){const r=e[s].distanceToSquared(t);r<i&&(i=r,n=s)}this.updateDeCasteljauT(n/500)}recomputeDeCasteljau(){if(this.mode===2){for(let t=0;t<this.deCasteljauVisuals[0].points.length;t++)this.deCasteljauVisuals[0].points[t].position.set(this.controlPoints[t].x,this.controlPoints[t].y,this.controlPoints[t].z);this.deCasteljauVisuals[0].line.geometry.setFromPoints(this.controlPoints);for(let t=0;t<this.deCasteljauVisuals.length-1;t++){const e=this.deCasteljauVisuals[t].points,i=this.deCasteljauVisuals[t+1].points;for(let n=0;n<e.length-1;n++){const s=Mi(e[n],e[n+1],this.deCasteljauT);i[n].position.set(s.x,s.y,s.z)}this.deCasteljauVisuals[t+1].line.geometry.setFromPoints(i.map(n=>n.position))}}}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i])}else this.createEditHandle(this.controlPoints.length-1),this.setEditHandlePosition(this.controlPoints.length-1,t);this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>40&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=2)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++)this.setEditHandlePosition(e,this.controlPoints[e])}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<40?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){this.controlPoints[t].set(e.x,e.y,e.z),this.recompute(),this.updateConnectionVisual(),this.mode===2&&this.recomputeDeCasteljau(),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e)}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}highlight(){this.material.color.set(q())}resetHighlight(){this.resetColor()}select(){this.material.color.set(R())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new l.BufferGeometry().setFromPoints(this.controlPoints))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new l.TubeGeometry(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry,this.deCasteljauCollisionMesh.geometry.dispose(),this.deCasteljauCollisionMesh.geometry=new l.TubeGeometry(this.curve,this.segments,this.radius*10,this.radialSegments,!1)}}var ke=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o))(ke||{});class yt extends ${mode;controlPoints;geometry;material;constructor(t,e=[new l.Vector3(-5,0,0),new l.Vector3(0,5,0),new l.Vector3(5,0,0)],i=new l.Color(0),n=new l.Vector3(0,0,0),s=1){const r=new Pe().setPositions(e.map(d=>[d.x,d.y,d.z]).flat()),h=new li({color:i,linewidth:5});h.side=l.DoubleSide;const c=new ci(r,h);super(t,c,n),this.geometry=r,this.material=h,this.controlPoints=e,this.color=i,this.mode=s,this.type="LinearCurveObject";for(let d=0;d<this.controlPoints.length;d++)this.createEditHandle(d),this.setEditHandlePosition(d,this.controlPoints[d]);this.hideEditHandles()}getMode(){return this.mode}setMode(t){this.mode=t,t===0?this.hideEditHandles():t===1&&this.showEditHandles()}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),color:this.color.getHex(),mode:this.mode}}static fromJSON(t){const e=t.controlPoints.map(r=>new l.Vector3(r.x,r.y,r.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(ke[s]===void 0)throw new Error(`Invalid LinearCurveObjectMode: ${s}`);return new yt(t.name,e,i,n,s)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i])}else this.createEditHandle(this.controlPoints.length-1),this.setEditHandlePosition(this.controlPoints.length-1,t)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=2))if(t?this.controlPoints.shift():this.controlPoints.pop(),this.recompute(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++)this.setEditHandlePosition(e,this.controlPoints[e])}else this.removeEditHandle(this.controlPoints.length)}updateControlPoint(t,e){this.controlPoints[t].set(e.x,e.y,e.z),this.recompute(),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e)}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}highlight(){this.material.color.set(q())}resetHighlight(){this.resetColor()}select(){this.material.color.set(R())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}recompute(){this.geometry&&this.geometry.dispose(),this.geometry=new Pe().setPositions(this.controlPoints.map(t=>[t.x,t.y,t.z]).flat()),this.mesh.geometry=this.geometry}}function tt(o,t,e,i){if((e<i[0]||e>i[i.length-1])&&console.log("basis: Invalid arguments for t: ",e),o===0)return i[t]<=e&&e<i[t+1]?1:0;let n=i[t+o]-i[t],s=i[t+o+1]-i[t+1],r=n===0?0:(e-i[t])/n*tt(o-1,t,e,i),h=s===0?0:(i[t+o+1]-e)/s*tt(o-1,t+1,e,i);return r+h}function z(o,t){let e=[];for(let i=0;i<=t+o+1;i++)e.push(i);return e}function Fi(o,t,e,i,n=!1){if(!o||!Array.isArray(o)||o.length<2)return console.error("bspline: Invalid points array!"),null;if(t<i[0]||t>i[i.length-1])return console.error("bspline: Invalid t value!"),null;let s=o.length-1+(n?e:0);if(i.length!==s+e+2)return console.error("bspline: Invalid knots array!"),null;let r=new w(0,0,0);for(let h=0;h<=s;h++){const c=tt(e,h,t,i);r.addScaledVector(o[h%o.length],c)}return r}class he extends Dt{controlPoints;degree;knots;closed=!1;constructor(t=[],e=2,i=!1){super(),this.controlPoints=t,this.degree=e,this.closed=i;const n=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+n)}getPoint(t,e=new w){const i=e;if(this.controlPoints.length<2)return console.log("UniformBSplineCurve: Not enough control points!"),i;if(this.degree<2||this.degree>this.controlPoints.length-1)return console.log("UniformBSplineCurve: Degree is out of range!"),i;t=Ai(t,this.degree,this.knots);const n=Fi(this.controlPoints,t,this.degree,this.knots,this.closed);return n===null?(console.log("UniformBSplineCurve:getPoint: BSpline calculation failed!"),i):(i.copy(n),i)}setPoints(t){this.controlPoints=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}setDegree(t){if(this.degree===t)return;this.degree=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}setClosed(t){if(this.closed===t)return;this.closed=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}copy(t){return t instanceof he?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this.degree=t.degree,this.knots=t.knots.slice(),this.closed=t.closed,this):(console.log("UniformBSplineCurve:copy: Source is not an instance of UniformBSplineCurve!"),this)}}function Ai(o,t,e){return e[t]+o*(e[e.length-t-1]-e[t])}var We=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o))(We||{});class Mt extends ${mode;controlPoints;degree;segments;radius;radialSegments;geometry;material;curve;connectionVisual;closed=!1;constructor(t,e=[new l.Vector3(-5,0,0),new l.Vector3(0,5,0),new l.Vector3(5,0,0)],i=2,n=new l.Color(0),s=100,r=new l.Vector3(0,0,0),h=1,c=!1){const d=new he(e,i,c),u=.05,m=8,g=new l.TubeGeometry(d,s,u,m,!1),p=new l.MeshBasicMaterial({color:n});p.side=l.DoubleSide;const b=new l.Mesh(g,p);super(t,b,r),this.curve=d,this.geometry=g,this.material=p,this.controlPoints=e,this.degree=i,this.color=n,this.segments=s,this.mode=h,this.closed=c,this.radius=u,this.radialSegments=m,this.type="UniformBSplineObject";for(let v=0;v<this.controlPoints.length;v++)this.createEditHandle(v),this.setEditHandlePosition(v,this.controlPoints[v]);const f=new l.BufferGeometry().setFromPoints(this.controlPoints),P=new l.LineBasicMaterial({color:R()});this.connectionVisual=new l.Line(f,P),this.connectionVisual.castShadow=!0,b.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles()}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideEditHandles()):t===1&&(this.connectionVisual.visible=!0,this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),degree:this.degree,color:this.color.getHex(),segments:this.segments,mode:this.mode,closed:this.closed}}static fromJSON(t){const e=t.controlPoints.map(r=>new l.Vector3(r.x,r.y,r.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(We[s]===void 0)throw new Error("Invalid UniformBSplineObject mode");return new Mt(t.name,e,t.degree,i,t.segments,n,s,t.closed)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideEditHandles()}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i])}else this.createEditHandle(this.controlPoints.length-1),this.setEditHandlePosition(this.controlPoints.length-1,t);this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>30&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=3)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.controlPoints.length-1<this.degree&&(this.degree=this.controlPoints.length-1,this.curve.setDegree(this.degree)),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++)this.setEditHandlePosition(e,this.controlPoints[e])}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<30?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){this.controlPoints[t].set(e.x,e.y,e.z),this.recompute(),this.updateConnectionVisual(),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e)}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}getDegree(){return this.degree}setDegree(t){this.degree=t,this.curve.setDegree(t),this.recompute()}isClosed(){return this.closed}setClosed(t){this.closed=t,this.curve.setClosed(t),this.recompute()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}highlight(){this.material.color.set(q())}resetHighlight(){this.resetColor()}select(){this.material.color.set(R())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new l.BufferGeometry().setFromPoints(this.controlPoints))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new l.TubeGeometry(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}function Gi(o,t,e,i,n=!1){if(!o||!Array.isArray(o)||o.length<2)return console.error("bspline: Invalid points array!"),null;if(t<i[0]||t>i[i.length-1])return console.error("bspline: Invalid t value!"),null;let s=o.length-1+(n?e:0);if(i.length!==s+e+2)return console.error("bspline: Invalid knots array!"),null;let r=new w(0,0,0),h=0;for(let c=0;c<=s;c++){const d=tt(e,c,t,i),u=c%o.length,m=new w(o[u].x,o[u].y,o[u].z),g=o[u].w*d;r.addScaledVector(m,g),h+=g}return h===0?null:r.divideScalar(h)}class de extends Dt{controlPoints;degree;knots;closed;constructor(t=[],e=2,i=!1){super(),this.controlPoints=t,this.degree=e,this.closed=i;const n=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+n)}getPoint(t,e=new w){const i=e;if(this.controlPoints.length<3)return console.log("UniformRationalBSplineCurve: Not enough control points!"),i;if(this.degree<2||this.degree>this.controlPoints.length-1)return console.log("UniformRationalBSplineCurve: Degree is out of range!"),i;t=this.knots[this.degree]+t*(this.knots[this.knots.length-this.degree-1]-this.knots[this.degree]);const n=Gi(this.controlPoints,t,this.degree,this.knots,this.closed);return n===null?(console.log("UniformRationalBSplineCurve:getPoint: BSpline calculation failed!"),i):(i.copy(n),i)}setPoints(t){this.controlPoints=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}setDegree(t){if(this.degree===t)return;this.degree=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}setClosed(t){if(this.closed===t)return;this.closed=t;const e=this.closed?this.degree:0;this.knots=z(this.degree,this.controlPoints.length-1+e)}copy(t){return t instanceof de?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this.degree=t.degree,this.knots=t.knots.slice(),this.closed=t.closed,this):(console.log("UniformRationalBSplineCurve:copy: Source is not an instance of UniformBSplineCurve!"),this)}}var Fe=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o))(Fe||{});class xt extends ${mode;controlPoints;degree;segments;radius;radialSegments;geometry;material;curve;connectionVisual;weightEditIndex=-1;weightEditRing;closed=!1;constructor(t,e=[new l.Vector4(-5,0,0,1),new l.Vector4(0,5,0,1),new l.Vector4(5,0,0,1)],i=2,n=new l.Color(0),s=100,r=new l.Vector3(0,0,0),h=1,c=!1){const d=new de(e,i,c),u=.05,m=8,g=new l.TubeGeometry(d,s,u,m,!1),p=new l.MeshBasicMaterial({color:n});p.side=l.DoubleSide;const b=new l.Mesh(g,p);super(t,b,r),this.curve=d,this.geometry=g,this.material=p,this.controlPoints=e,this.degree=i,this.color=n,this.segments=s,this.mode=h,this.closed=c,this.radius=u,this.radialSegments=m,this.type="UniformRationBSplineObject";for(let x=0;x<this.controlPoints.length;x++){this.createEditHandle(x);const M=new l.Vector3(this.controlPoints[x].x,this.controlPoints[x].y,this.controlPoints[x].z);this.setEditHandlePosition(x,M)}const f=new l.BufferGeometry().setFromPoints(this.controlPoints.map(x=>new l.Vector3(x.x,x.y,x.z))),P=new l.LineBasicMaterial({color:R()});this.connectionVisual=new l.Line(f,P),this.connectionVisual.castShadow=!0,b.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles();const v=new l.RingGeometry(.05,.06,32),E=new l.MeshBasicMaterial({color:R()});this.weightEditRing=new l.Mesh(v,E),b.add(this.weightEditRing),this.weightEditRing.visible=!1,a.onOrbitControlsChange(()=>{this.weightEditIndex!==-1&&this.weightEditRing.lookAt(a.getCamera().position)}),window.addEventListener("wheel",x=>{if(this.weightEditIndex!==-1){const M=this.controlPoints[this.weightEditIndex];M.w+=x.deltaY*.01,M.w<1&&(M.w=1),M.w>10&&(M.w=10),this.updateControlPoint(this.weightEditIndex,M),y.notify("objectChanged",C.VIEWPORT,this)}})}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideWeightEditRing(),this.hideEditHandles()):t===1&&(this.connectionVisual.visible=!0,this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z,w:t.w})),degree:this.degree,color:this.color.getHex(),segments:this.segments,mode:this.mode,closed:this.closed}}static fromJSON(t){const e=t.controlPoints.map(r=>new l.Vector4(r.x,r.y,r.z,r.w)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(Fe[s]===void 0)throw new Error("Invalid UniformBSplineObject mode");return new xt(t.name,e,t.degree,i,t.segments,n,s,t.closed)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint3(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideWeightEditRing(),this.hideEditHandles()}showWeightEditRing(t){this.weightEditIndex=t,this.updateWeightEditRing(),this.weightEditRing.visible=!0,a.noScroll()}hideWeightEditRing(){this.weightEditIndex=-1,this.weightEditRing.visible=!1,a.scroll()}updateWeightEditRing(){if(this.weightEditIndex===-1)return;const t=this.controlPoints[this.weightEditIndex];this.weightEditRing.position.set(t.x,t.y,t.z);const e=Be(t.w,1,10,8,20);this.weightEditRing.scale.set(e,e,e),this.weightEditRing.lookAt(a.getCamera().position)}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++){const n=new l.Vector3(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z);this.setEditHandlePosition(i,n)}}else{this.createEditHandle(this.controlPoints.length-1);const i=this.controlPoints.length-1,n=new l.Vector3(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z);this.setEditHandlePosition(this.controlPoints.length-1,n)}this.controlPoints.length>60?this.updateSegments(1e3):this.controlPoints.length>30&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=3)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.controlPoints.length-1<this.degree&&(this.degree=this.controlPoints.length-1,this.curve.setDegree(this.degree)),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++){const i=new l.Vector3(this.controlPoints[e].x,this.controlPoints[e].y,this.controlPoints[e].z);this.setEditHandlePosition(e,i)}}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<30?this.updateSegments(100):this.controlPoints.length<60&&this.updateSegments(500)}}updateControlPoint3(t,e){this.updateControlPoint(t,new l.Vector4(e.x,e.y,e.z,this.getControlPoint(t).w))}updateControlPoint(t,e){if(this.controlPoints[t].set(e.x,e.y,e.z,e.w),this.recompute(),this.updateConnectionVisual(),this.hasEditHandle(t)){const i=new l.Vector3(this.controlPoints[t].x,this.controlPoints[t].y,this.controlPoints[t].z);this.setEditHandlePosition(t,i)}this.weightEditIndex===t&&this.updateWeightEditRing()}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}getDegree(){return this.degree}setDegree(t){this.degree=t,this.curve.setDegree(t),this.recompute()}isClosed(){return this.closed}setClosed(t){this.closed=t,this.curve.setClosed(t),this.recompute()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}highlight(){this.material.color.set(q())}resetHighlight(){this.resetColor()}select(){this.material.color.set(R())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new l.BufferGeometry().setFromPoints(this.controlPoints.map(t=>new l.Vector3(t.x,t.y,t.z))))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new l.TubeGeometry(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}class ue extends Dt{controlPoints;constructor(t=[]){super(),this.controlPoints=t}getPoint(t,e=new w){const i=e;if((this.controlPoints.length-1)%3!==0)return console.log("BezierSplineCurve: Not 3p+1 control points!"),i;const n=(this.controlPoints.length-1)/3,s=Math.min(Math.floor(t*n),n-1),r=(t-s/n)*n,h=s*3,c=Wi(this.controlPoints[h],this.controlPoints[h+1],this.controlPoints[h+2],this.controlPoints[h+3],r);return c===null?(console.log("BezierSplineCurve:getPoint: Bezier calculation failed!"),i):(i.copy(c),i)}setPoints(t){this.controlPoints=t}copy(t){return t instanceof ue?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this):(console.log("BezierSplineCurve:copy: Source is not an instance of BezierCurve!"),this)}}var Ae=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o))(Ae||{});class Et extends ${mode;controlPoints;segments;radius;radialSegments;geometry;material;curve;connectionVisuals;constructor(t,e=[new l.Vector3(-5,0,0),new l.Vector3(0,5,0),new l.Vector3(5,0,0)],i=new l.Color(0),n=100,s=new l.Vector3(0,0,0),r=1){const h=new ue(e),c=.05,d=8,u=new l.TubeGeometry(h,n,c,d,!1),m=new l.MeshBasicMaterial({color:i});m.side=l.DoubleSide;const g=new l.Mesh(u,m);super(t,g,s),this.curve=h,this.geometry=u,this.material=m,this.controlPoints=e,this.color=i,this.segments=n,this.mode=r,this.radius=c,this.radialSegments=d,this.type="BezierSplineObject";for(let f=0;f<this.controlPoints.length;f++)f%3===0?this.createEditHandle(f,.3):this.createEditHandle(f,.15),this.setEditHandlePosition(f,this.controlPoints[f]);this.connectionVisuals=[];const p=new l.LineBasicMaterial({color:R()});this.connectionVisuals.push(new l.Line(new l.BufferGeometry().setFromPoints([this.controlPoints[0],this.controlPoints[1]]),p));const b=Math.floor((this.controlPoints.length-1)/3)+1;for(let f=1;f<b-1;f++){const P=2+(f-1)*3,v=[this.controlPoints[P],this.controlPoints[P+1],this.controlPoints[P+2]];this.connectionVisuals.push(new l.Line(new l.BufferGeometry().setFromPoints(v),p))}this.connectionVisuals.push(new l.Line(new l.BufferGeometry().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]]),p)),this.connectionVisuals.forEach(f=>this.mesh.add(f)),this.hideConnectionVisuals(),this.hideEditHandles()}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.hideConnectionVisuals(),this.hideEditHandles()):t===1&&(this.showConnectionVisuals(),this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),color:this.color.getHex(),segments:this.segments,mode:this.mode}}static fromJSON(t){const e=t.controlPoints.map(r=>new l.Vector3(r.x,r.y,r.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(Ae[s]===void 0)throw new Error("Invalid BezierCurveObject mode");return new Et(t.name,e,i,t.segments,n,s)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideConnectionVisuals(),this.hideEditHandles()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}addControlPoint(t,e=!1){if(e){const i=this.controlPoints.length-1;this.controlPoints.unshift(new l.Vector3(0,0,0)),this.createEditHandle(i+1,.15);const n=t.clone().add(this.controlPoints[1].clone().sub(t).setLength(3));this.controlPoints.unshift(n),this.createEditHandle(i+2,.15),this.controlPoints.unshift(t.clone()),this.createEditHandle(i+3,.3);for(let r=0;r<this.controlPoints.length;r++)this.setEditHandlePosition(r,this.controlPoints[r]);this.updateControlPoint(4,this.controlPoints[4]),this.updateControlPoint(0,this.controlPoints[0]);const s=new l.Line(new l.BufferGeometry().setFromPoints([this.controlPoints[0],this.controlPoints[1]]),new l.LineBasicMaterial({color:R()}));this.connectionVisuals.unshift(s),this.mesh.add(s)}else{const i=this.controlPoints.length-1;this.controlPoints.push(new l.Vector3(0,0,0)),this.createEditHandle(i+1,.15);const n=t.clone().add(this.controlPoints[i].clone().sub(t).setLength(3));this.controlPoints.push(n),this.createEditHandle(i+2,.15),this.controlPoints.push(t.clone()),this.createEditHandle(i+3,.3),this.updateControlPoint(i-1,this.controlPoints[i-1]),this.updateControlPoint(i+3,this.controlPoints[i+3]);const s=new l.Line(new l.BufferGeometry().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]]),new l.LineBasicMaterial({color:R()}));this.connectionVisuals.push(s),this.mesh.add(s)}this.recompute(),this.updateConnectionVisuals(),this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>40&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=6)){if(t){this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i]);const e=this.connectionVisuals.shift();e&&this.mesh.remove(e)}else{this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length);const e=this.connectionVisuals.pop();e&&this.mesh.remove(e)}this.recompute(),this.updateConnectionVisuals(),this.controlPoints.length<40?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){if(t===0){const i=e.clone().sub(this.controlPoints[0]);this.controlPoints[0].set(e.x,e.y,e.z),this.setEditHandle(0),this.controlPoints[1].add(i),this.setEditHandle(1)}else if(t===1)this.controlPoints[1].set(e.x,e.y,e.z),this.setEditHandle(1);else if(t===this.controlPoints.length-1){const i=e.clone().sub(this.controlPoints[this.controlPoints.length-1]);this.controlPoints[this.controlPoints.length-1].set(e.x,e.y,e.z),this.setEditHandle(this.controlPoints.length-1),this.controlPoints[this.controlPoints.length-2].add(i),this.setEditHandle(this.controlPoints.length-2)}else if(t===this.controlPoints.length-2)this.controlPoints[this.controlPoints.length-2].set(e.x,e.y,e.z),this.setEditHandle(this.controlPoints.length-2);else if(t%3===0){const i=e.clone().sub(this.controlPoints[t]);this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t),this.controlPoints[t-1].add(i),this.setEditHandle(t-1),this.controlPoints[t+1].add(i),this.setEditHandle(t+1)}else if(t%3===1){this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t);const n=this.controlPoints[t-1].clone().multiplyScalar(2).sub(e);this.controlPoints[t-2].set(n.x,n.y,n.z),this.setEditHandle(t-2)}else if(t%3===2){this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t);const n=this.controlPoints[t+1].clone().multiplyScalar(2).sub(e);this.controlPoints[t+2].set(n.x,n.y,n.z),this.setEditHandle(t+2)}this.recompute(),this.updateConnectionVisuals()}setEditHandle(t){this.hasEditHandle(t)&&this.setEditHandlePosition(t,this.controlPoints[t])}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}highlight(){this.material.color.set(q())}resetHighlight(){this.resetColor()}select(){this.material.color.set(R())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}hideConnectionVisuals(){this.connectionVisuals!==null&&this.connectionVisuals.forEach(t=>t.visible=!1)}showConnectionVisuals(){this.connectionVisuals!==null&&this.connectionVisuals.forEach(t=>t.visible=!0)}updateConnectionVisuals(){if(this.connectionVisuals===null)return;this.connectionVisuals[0].geometry.dispose(),this.connectionVisuals[0].geometry=new l.BufferGeometry().setFromPoints([this.controlPoints[0],this.controlPoints[1]]);const t=Math.floor((this.controlPoints.length-1)/3)+1;for(let e=1;e<t-1;e++){const i=2+(e-1)*3,n=[this.controlPoints[i],this.controlPoints[i+1],this.controlPoints[i+2]];this.connectionVisuals[e].geometry.dispose(),this.connectionVisuals[e].geometry=new l.BufferGeometry().setFromPoints(n)}this.connectionVisuals[this.connectionVisuals.length-1].geometry.dispose(),this.connectionVisuals[this.connectionVisuals.length-1].geometry=new l.BufferGeometry().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]])}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new l.TubeGeometry(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}function Ji(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec3 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 basisPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);
            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);
                basisPoint += controlPoint * basisU * basisV;
                tangentU += controlPoint * basisUDerivative * basisV;
                tangentV += controlPoint * basisU * basisVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function _t(o,t,e,i,n=!1,s=!1){const r=[],h=n?i:0,c=s?i:0,d=z(i,o.getWidth()-1+h),u=z(i,o.getHeight()-1+c);for(let m=0;m<e;m++){const g=m/(e-1);for(let p=0;p<t;p++){const b=p/(t-1);r.push(Ki(o,b,g,i,d,u,n,s))}}return r}function Ki(o,t,e,i,n,s,r=!1,h=!1){const c=new w(0,0,0),d=r?i:0,u=h?i:0;for(let m=0;m<o.getWidth()+d;m++){const g=n[i]+t*(n[n.length-i-1]-n[i]),p=tt(i,m,g,n);for(let b=0;b<o.getHeight()+u;b++){const f=o.getPoint(b%o.getHeight(),m%o.getWidth()),P=s[i]+e*(s[s.length-i-1]-s[i]),v=tt(i,b,P,s);c.add(f.clone().multiplyScalar(p*v))}}return c}function Xt(o,t,e,i,n=!1,s=!1){const r=[],h=n?i:0,c=s?i:0,d=z(i,o.getWidth()-1+h),u=z(i,o.getHeight()-1+c);for(let m=0;m<e;m++){const g=m/(e-1);for(let p=0;p<t;p++){const b=p/(t-1);r.push($i(o,b,g,i,d,u,n,s))}}return r}function $i(o,t,e,i,n,s,r=!1,h=!1){const c=new w(0,0,0);var d=0;const u=r?i:0,m=h?i:0;for(let g=0;g<o.getWidth()+u;g++){const p=n[i]+t*(n[n.length-i-1]-n[i]),b=tt(i,g,p,n);for(let f=0;f<o.getHeight()+m;f++){const P=o.getPoint(f%o.getHeight(),g%o.getWidth()),v=o.getPoint4(f%o.getHeight(),g%o.getWidth()).w,E=s[i]+e*(s[s.length-i-1]-s[i]),x=tt(i,f,E,s),M=v*b*x;c.add(P.clone().multiplyScalar(M)),d+=M}}return c.divideScalar(d)}var Ge=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o[o.SHADING=2]="SHADING",o))(Ge||{});class mt extends ${mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;closedU;closedV;reflectivity=0;constructor(t,e,i,n,s=2,r=new l.Color(0),h=new l.Vector3(0,0,0),c=1,d=new Ft,u=!1,m=!1){if(u&&m)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const g=new se(i,n);for(let E=0;E<i;E++)for(let x=0;x<n;x++){const M=E+x*i;g.setPoint(x,E,e[M])}const p=new l.PlaneGeometry(0,0,100,100),b=new le(Ji(),g,r,d,{degree:{value:s},closedU:{value:u},closedV:{value:m}}),f=new l.Mesh(p,b.getMaterial());super(t,f,h),this.controlPoints=g,this.geometry=p,this.material=b,this.mode=c,this.color=r,this.degree=s,this.closedU=u,this.closedV=m,this.type="UniformBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let E=0;E<i;E++)for(let x=0;x<n;x++){const M=E+x*i;this.createEditHandle(M,this.radius),this.setEditHandlePosition(M,e[M])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const P=this.controlPoints.getWidth()+3,v=this.controlPoints.getHeight()+3;this.collisionGeometry=X(_t(this.controlPoints,P,v,this.degree,this.closedU,this.closedV),P,v),this.collisionMesh=new l.Mesh(this.collisionGeometry,new l.MeshBasicMaterial({transparent:!0,opacity:0,visible:!1,side:l.DoubleSide})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(d=>new l.Vector3(d.x,d.y,d.z)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(Ge[s]===void 0)throw new Error("Invalid UniformBSplineSurfaceObjectMode mode");const h=Ct()[t.shadingModel.name].create();h.fromJSON(t.shadingModel.params);const c=new mt(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree,i,n,s,h,t.closedU,t.closedV);return c.setReflectivity(t.reflectivity),c}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const n=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth(),r=i.clone().sub(e),h=new l.Vector3(0,r.y,r.z),c=new l.Vector3(r.x,r.y,0);n===0&&s===0?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===0&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===this.controlPoints.getHeight()-1&&s===0?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):n===this.controlPoints.getHeight()-1&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):this.addControlPointRowCol(n,s,r);for(let d=0;d<this.controlPoints.getWidth();d++)for(let u=0;u<this.controlPoints.getHeight();u++){const m=d+u*this.controlPoints.getWidth();this.setEditHandlePosition(m,this.controlPoints.getPoint(u,d))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var n=0,s=0;t===0?(this.controlPoints.addRow(i,!0),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let r=0;r<n;r++)this.createEditHandle(s+r,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let n=0;n<this.controlPoints.getWidth();n++)for(let s=0;s<this.controlPoints.getHeight();s++){const r=n+s*this.controlPoints.getWidth();this.setEditHandlePosition(r,this.controlPoints.getPoint(s,n))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,n=0;t===0?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let s=0;s<i;s++)this.removeEditHandle(n+s)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,n,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(q())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+3,e=this.controlPoints.getHeight()+3;this.collisionGeometry=X(_t(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=_t(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=X(t,100,100),i=new l.MeshStandardMaterial({color:this.color,side:l.DoubleSide}),n=new l.Mesh(e,i);return n.position.copy(this.mesh.position),n.rotation.copy(this.mesh.rotation),n.scale.copy(this.mesh.scale),n}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function _i(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec4 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord);
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 numerator = vec3(0.0);
        float denominator = 0.0;
        vec3 numeratorU = vec3(0.0);
        float denominatorU = 0.0;
        vec3 numeratorV = vec3(0.0);
        float denominatorV = 0.0;

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);

            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec4 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);

                float weightedBasis = controlPoint.w * basisU * basisV;
                float weightedBasisU = controlPoint.w * basisUDerivative * basisV;
                float weightedBasisV = controlPoint.w * basisU * basisVDerivative;

                numerator += controlPoint.xyz * weightedBasis;
                denominator += weightedBasis;

                numeratorU += controlPoint.xyz * weightedBasisU;
                denominatorU += weightedBasisU;

                numeratorV += controlPoint.xyz * weightedBasisV;
                denominatorV += weightedBasisV;
            }
        }

        vec3 basisPoint = numerator / denominator;
        vec3 tangentU = (numeratorU / denominator) - (numerator * denominatorU / (denominator * denominator));
        vec3 tangentV = (numeratorV / denominator) - (numerator * denominatorV / (denominator * denominator));

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}var Je=(o=>(o[o.OBJECT=0]="OBJECT",o[o.CONTROL_POINTS=1]="CONTROL_POINTS",o[o.SHADING=2]="SHADING",o))(Je||{});class gt extends ${mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;weightEditIndex=-1;weightEditRing;closedU;closedV;reflectivity=0;constructor(t,e,i,n,s=2,r=new l.Color(0),h=new l.Vector3(0,0,0),c=1,d=new Ft,u=!1,m=!1){if(u&&m)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const g=new se(i,n);for(let M=0;M<i;M++)for(let S=0;S<n;S++){const I=M+S*i;g.setPoint4(S,M,e[I])}const p=new l.PlaneGeometry(0,0,100,100),b=new le(_i(),g,r,d,{degree:{value:s},closedU:{value:u},closedV:{value:m}}),f=new l.Mesh(p,b.getMaterial());super(t,f,h),this.controlPoints=g,this.geometry=p,this.material=b,this.mode=c,this.color=r,this.degree=s,this.closedU=u,this.closedV=m,this.type="UniformRationalBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let M=0;M<i;M++)for(let S=0;S<n;S++){const I=M+S*i;this.createEditHandle(I,this.radius),this.setEditHandlePosition(I,this.controlPoints.getPoint(S,M))}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const P=this.controlPoints.getWidth()+1,v=this.controlPoints.getHeight()+1;this.collisionGeometry=X(Xt(this.controlPoints,P,v,this.degree,this.closedU,this.closedV),P,v),this.collisionMesh=new l.Mesh(this.collisionGeometry,new l.MeshBasicMaterial({transparent:!0,opacity:0,visible:!1,side:l.DoubleSide})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh);const E=new l.RingGeometry(.05,.06,32),x=new l.MeshBasicMaterial({color:R(),depthTest:!1,side:l.DoubleSide});this.weightEditRing=new l.Mesh(E,x),f.add(this.weightEditRing),this.weightEditRing.visible=!1,a.onOrbitControlsChange(()=>{this.weightEditIndex!==-1&&this.weightEditRing.lookAt(a.getCamera().position)}),window.addEventListener("wheel",M=>{if(this.weightEditIndex!==-1){const S=this.getControlPoint(this.weightEditIndex);S.w+=M.deltaY*.01,S.w<1&&(S.w=1),S.w>10&&(S.w=10),this.updateControlPoint(this.weightEditIndex,S),y.notify("objectChanged",C.VIEWPORT,this)}})}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints4().map(t=>({x:t.x,y:t.y,z:t.z,w:t.w})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(d=>new l.Vector4(d.x,d.y,d.z,d.w)),i=new l.Color(t.color),n=new l.Vector3(t.position.x,t.position.y,t.position.z),s=t.mode;if(Je[s]===void 0)throw new Error("Invalid UniformRationalBSplineSurfaceObjectMode mode");const h=Ct()[t.shadingModel.name].create();h.fromJSON(t.shadingModel.params);const c=new gt(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree,i,n,s,h,t.closedU,t.closedV);return c.setReflectivity(t.reflectivity),c}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=a.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint3(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing(),this.collisionMesh.userData.collision=!0}showWeightEditRing(t){this.weightEditIndex=t,this.updateWeightEditRing(),this.weightEditRing.visible=!0,a.noScroll()}hideWeightEditRing(){this.weightEditIndex=-1,this.weightEditRing.visible=!1,a.scroll()}updateWeightEditRing(){if(this.weightEditIndex===-1)return;const t=this.getControlPoint(this.weightEditIndex);this.weightEditRing.position.set(t.x,t.y,t.z);const e=Be(t.w,1,10,8,20);this.weightEditRing.scale.set(e,e,e),this.weightEditRing.lookAt(a.getCamera().position)}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const n=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth(),r=i.clone().sub(e),h=new l.Vector3(0,r.y,r.z),c=new l.Vector3(r.x,r.y,0);n===0&&s===0?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===0&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(n,-1,h),this.addControlPointRowCol(-1,s,c)):n===this.controlPoints.getHeight()-1&&s===0?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):n===this.controlPoints.getHeight()-1&&s===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,s,c),this.addControlPointRowCol(n,-1,h)):this.addControlPointRowCol(n,s,r);for(let d=0;d<this.controlPoints.getWidth();d++)for(let u=0;u<this.controlPoints.getHeight();u++){const m=d+u*this.controlPoints.getWidth();this.setEditHandlePosition(m,this.controlPoints.getPoint(u,d))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var n=0,s=0;t===0?(this.controlPoints.addRow(i,!0),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),n=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),n=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let r=0;r<n;r++)this.createEditHandle(s+r,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let n=0;n<this.controlPoints.getWidth();n++)for(let s=0;s<this.controlPoints.getHeight();s++){const r=n+s*this.controlPoints.getWidth();this.setEditHandlePosition(r,this.controlPoints.getPoint(s,n))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,n=0;t===0?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let s=0;s<i;s++)this.removeEditHandle(n+s)}updateControlPoint3(t,e){this.updateControlPoint(t,new l.Vector4(e.x,e.y,e.z,this.getControlPoint(t).w))}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth();if(this.controlPoints.setPoint4(i,n,e),this.hasEditHandle(t)){const s=new l.Vector3(e.x,e.y,e.z);this.setEditHandlePosition(t,s)}this.updateCollisionGeometry(),this.weightEditIndex===t&&this.updateWeightEditRing()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint4(e,i)}highlight(){this.material.setColor(q())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=X(Xt(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=Xt(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=X(t,100,100),i=new l.MeshStandardMaterial({color:this.color,side:l.DoubleSide}),n=new l.Mesh(e,i);return n.position.copy(this.mesh.position),n.rotation.copy(this.mesh.rotation),n.scale.copy(this.mesh.scale),n}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}class Xi{constructor(){}createBasicLinearCurve(){const t=[new w(-5,0,0),new w(0,5,-5),new w(5,0,0)],e=new yt("Linear Curve",t,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONLinearCurve(t){const e=yt.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicBezierCurve(){const t=[new w(-5,0,0),new w(0,5,-5),new w(5,0,0)],e=new ut("Bezier Curve",t,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONBezierCurve(t){const e=ut.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicBezierSpline(){const t=[new w(-5,0,0),new w(-2,5,-5),new w(2,5,-5),new w(5,0,0)],e=new Et("Bezier Spline",t,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONBezierSpline(t){const e=Et.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicUniformBSpline(){const t=[new w(-5,0,0),new w(0,5,-5),new w(5,0,0)],e=new Mt("Uniform B-Spline",t,2,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONUniformBSpline(t){const e=Mt.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicURBS(){const t=[new D(-5,0,0,1),new D(0,5,-5,1),new D(5,0,0,1)],e=new xt("Uniform Rational B-Spline",t,2,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONURBS(t){const e=xt.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicBezierPatch(){const t=[new w(-5,0,-5),new w(0,0,-5),new w(5,0,-5),new w(-5,0,0),new w(0,5,0),new w(5,0,0),new w(-5,0,5),new w(0,0,5),new w(5,0,5)],e=new st("Bezier Patch",t,3,3,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONBezierPatch(t){const e=st.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicUniformBSplineSurface(){const t=[new w(-5,0,-5),new w(0,0,-5),new w(5,0,-5),new w(-5,0,0),new w(0,5,0),new w(5,0,0),new w(-5,0,5),new w(0,0,5),new w(5,0,5)],e=new mt("Uniform B-Spline Surface",t,3,3,2,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONUniformBSplineSurface(t){const e=mt.fromJSON(t);return a.getObjectManager().addObject(e),e}createBasicUniformRationalBSplineSurface(){const t=[new D(-5,0,-5,1),new D(0,0,-5,1),new D(5,0,-5,1),new D(-5,0,0,1),new D(0,5,0,1),new D(5,0,0,1),new D(-5,0,5,1),new D(0,0,5,1),new D(5,0,5,1)],e=new gt("Uniform Rational B-Spline Surface",t,3,3,2,new V("#7f8c8d"));return a.getObjectManager().addObject(e),e}createJSONUniformRationalBSplineSurface(t){const e=gt.fromJSON(t);return a.getObjectManager().addObject(e),e}}class Yi{raycaster;mouse;mouseDown;hoveredObject;hoveredEditHandle;selectedObject;selectedEditHandle;active;canEdit;constructor(){this.raycaster=new l.Raycaster,this.mouse=new l.Vector2,this.mouseDown=new l.Vector2,this.hoveredObject=null,this.hoveredEditHandle=null,this.selectedObject=null,this.selectedEditHandle=null,this.active=!1,this.canEdit=!0;const t=a.getRenderer().domElement;t.addEventListener("mousemove",e=>this.onMouseMove(e)),t.addEventListener("mousedown",e=>this.onMouseDown(e)),t.addEventListener("mouseup",e=>this.onMouseUp(e)),t.addEventListener("mouseenter",()=>this.active=!0),t.addEventListener("mouseleave",()=>this.active=!1),y.subscribe("objectRemoved",C.ALL,e=>{this.selectedObject&&this.selectedObject===e&&this.resetSelected(),this.hoveredObject&&this.hoveredObject===e&&this.resetHovered()})}isActive(){return this.active}getMouse(){return this.mouse}getSelectedObject(){return this.selectedObject}getSelectedEditHandleIndex(){return this.selectedEditHandle?this.selectedEditHandle.getIndex():null}onMouseMove(t){const e=a.getRenderer().domElement;this.mouse.x=t.clientX/e.clientWidth*2-1,this.mouse.y=-(t.clientY/e.clientHeight)*2+1;const i=a.getTooltip();i.style.left=t.clientX+10+"px",i.style.top=t.clientY+10+"px"}onMouseDown(t){this.mouseDown.x=t.clientX,this.mouseDown.y=t.clientY}onMouseUp(t){var e=!1;if(!(Math.abs(this.mouseDown.x-t.clientX)>=5||Math.abs(this.mouseDown.y-t.clientY)>=5)){if(this.hoveredEditHandle){this.selectEditHandle(this.hoveredEditHandle);return}else this.selectedEditHandle&&(this.resetSelectedEditHandle(),e=!0);this.hoveredObject?this.select(this.hoveredObject):e||this.resetSelected()}}update(){if(!this.active)return;this.raycaster.setFromCamera(this.mouse,a.getCamera());const t=this.raycaster.intersectObjects(a.getScene().children,!0),e=a.getObjectManager();if(t.length>0){const i=this.findMesh(t);if(i==null){this.resetHovered(),this.resetHoveredEditHandle();return}if(e.isEditHandle(i)){if(!this.canEdit)return;const s=e.getEditHandleByMesh(i);if(s==null){this.resetHoveredEditHandle();return}else if(this.selectedEditHandle&&this.selectedEditHandle===s)return;this.hoverEditHandle(s);return}else this.resetHoveredEditHandle();const n=e.getVisualObjectByMesh(i);if(n==null){this.resetHovered();return}else if(e.selectable(i)&&!a.isDragging()){if(this.selectedObject&&this.selectedObject===n)return;this.resetHovered(),this.hover(n)}else this.resetHovered()}else this.resetHovered(),this.resetHoveredEditHandle()}enableEditing(){this.canEdit=!0}disableEditing(){this.canEdit=!1,this.resetSelectedEditHandle()}hover(t){a.getHierarchy().viewportHover(t.getUUID()),this.doHover(t),this.showTooltip(t)}hoverEditHandle(t){this.doHoverEditHandle(t),this.showTooltip(t)}doHover(t){this.hoveredObject&&this.hoveredObject!==t&&this.hoveredObject.resetHighlight(),this.hoveredObject=t,this.hoveredObject.highlight()}doHoverEditHandle(t){this.hoveredEditHandle&&this.hoveredEditHandle!==t&&this.hoveredEditHandle.resetHighlight(),this.hoveredEditHandle=t,this.hoveredEditHandle.highlight()}resetHovered(){a.getHierarchy().viewportDehover(),this.doResetHovered(),this.hideTooltip()}resetHoveredEditHandle(){this.doResetHoveredEditHandle(),this.hideTooltip()}doResetHovered(){this.hoveredObject&&(this.hoveredObject.resetHighlight(),this.hoveredObject=null)}doResetHoveredEditHandle(){this.hoveredEditHandle&&(this.hoveredEditHandle.resetHighlight(),this.hoveredEditHandle=null)}select(t){a.getHierarchy().viewportSelect(t.getUUID()),this.doSelect(t)}selectEditHandle(t){this.doSelectEditHandle(t)}doSelect(t){this.selectedObject&&this.selectedObject!==t&&this.doResetSelected(),this.hoveredObject=null,this.selectedObject=t,this.selectedObject.select(),y.notify("objectSelected",C.VIEWPORT,this.selectedObject)}doSelectEditHandle(t){this.selectedEditHandle&&this.selectedEditHandle!==t&&this.doResetSelectedEditHandle(),this.hoveredEditHandle=null,this.selectedEditHandle=t,this.selectedEditHandle.select(),a.getTransformControls().attach(t.getMesh()),y.notify("editHandleSelected",C.VIEWPORT,this.selectedEditHandle)}resetSelected(){a.getHierarchy().viewportDeselect(),this.doResetSelected()}resetSelectedEditHandle(){this.doResetSelectedEditHandle()}doResetSelected(){this.selectedObject&&(this.selectedObject.resetSelect(),this.selectedObject=null,a.getTransformControls().detach(),y.notify("objectUnselected",C.ALL))}doResetSelectedEditHandle(){this.selectedEditHandle&&(this.selectedEditHandle.resetSelect(),this.selectedEditHandle=null,a.getTransformControls().detach(),y.notify("editHandleUnselected",C.ALL))}showTooltip(t){t instanceof $?(a.getTooltip().innerHTML="<b>"+t.getName()+"</b></br><i>Type:</i> "+t.getType(),a.getTooltip().style.display="block"):t instanceof Le&&(a.getTooltip().innerHTML="<b>Control Point - "+(t.getIndex()+1)+"</b></br><i>Object:</i> "+t.getParentObject().getName(),a.getTooltip().style.display="block")}hideTooltip(){a.getTooltip().style.display="none"}findMesh(t){for(const e of t)if(e.object instanceof l.Mesh&&(a.getObjectManager().selectable(e.object)||a.getObjectManager().isEditHandle(e.object)))return e.object;return null}}class qi{updateCallback;selectedObject;constructor(){this.updateCallback=null,this.selectedObject=null,y.subscribe("objectSelected",C.ALL,t=>this.selectObject(t)),y.subscribe("objectUnselected",C.ALL,()=>this.unselectObject()),y.subscribe("objectChanged",C.ALL,()=>this.update()),y.subscribe("transformMoved",C.VIEWPORT,()=>this.update())}update(){this.updateCallback&&this.updateCallback()}selectObject(t){if(!t){console.error("editManager:selectObject: Object is null!");return}this.selectedObject=t,this.updateCallback=this.selectedObject.edit()}unselectObject(){if(!this.selectedObject){console.error("editManager:unselectObject: Object is null!");return}this.updateCallback=null,this.selectedObject.unedit(),this.selectedObject=null}}class Zi{controls=[];details;constructor(t){const e=document.createElement("div");e.className="controls",this.details=document.createElement("sl-details"),this.details.open=!a.getIOManager().getFlagCache("controlsClosed"),this.details.style.minWidth="120px",this.details.summary="Controls",e.appendChild(this.details),t.appendChild(e),this.initControls(),this.redraw(),y.subscribe("dimensionSwitched",C.ALL,i=>this.redraw()),this.details.addEventListener("sl-after-show",()=>a.getIOManager().setFlagCache("controlsClosed",!1)),this.details.addEventListener("sl-after-hide",()=>a.getIOManager().setFlagCache("controlsClosed",!0))}add(t){this.controls.includes(t)||(this.controls.push(t),this.redraw())}remove(t){const e=this.controls.indexOf(t);e!==-1&&(this.controls.splice(e,1),this.redraw())}redraw(){this.details.innerHTML="",this.controls.forEach(t=>{const e=document.createElement("div");e.innerHTML=t.getHTML(),this.details.appendChild(e)})}initControls(){const t=new j;t.add(new Ke("Viewport Controls",!1)),t.add(new Yt(a.dimension2D.bind(a),"Press <b>D</b> to switch to <b>2D</b>.","Press <b>D</b> to switch to <b>3D</b>.")),t.add(new Yt(a.dimension2D.bind(a),"Hold the <b>LMB</b> to <b>orbit</b> around the scene.","Hold the <b>LMB / RMB</b> to pan the camera.")),t.add(new Yt(a.dimension2D.bind(a),"Hold the <b>RMB</b> (or shift + LMB) to <b>pan</b> the camera.","")),t.add(new O("<b>Scroll</b> the mouse wheel to <b>zoom</b> in and out.")),t.add(new O("<b>Click</b> on an object to <b>select</b> it.")),this.add(t)}}class Ot{}class Ke extends Ot{constructor(t,e=!0){super(),this.text=t,this.breakLine=e}getHTML(){return(this.breakLine?"<br>":"")+`<strong>${this.text}</strong>`}}class O extends Ot{constructor(t){super(),this.text=t}getHTML(){return`<span>${this.text}</span>`}}class Yt extends Ot{constructor(t,e,i){super(),this.bool=t,this.textFalse=e,this.textTrue=i}getHTML(){return this.bool()?`<span>${this.textTrue}</span>`:`<span>${this.textFalse}</span>`}}class T extends Ot{constructor(t,e){super(),this.key=t,this.value=e}getHTML(){return`<span><strong>${this.key}</strong>: <span>${this.value}</span></span>`}}class j extends Ot{controls=[];constructor(){super()}add(t){this.controls.push(t)}getHTML(){let t="<div>";return this.controls.forEach(e=>{t+=`<div>${e.getHTML()}</div>`}),t+="</div>",t}}class Z{constructor(t,e,i){this.name=t,this.lace=e,this.modes=i,this.currentObject=null,this.currentMode=-1,this.controls=new j,this.controls.add(new Ke(t)),this.controls.add(new T("Q","Switch between modes.")),a.getControls().add(this.controls),a.getInteractionsManager().addKeydown("q",()=>{if(this.currentObject===null||this.currentMode===-1)return;const n=(this.currentMode+1)%this.modes.length;this.showTab(n),this.currentObject.setMode(n)}),this.tab=e.addTab({vertical:!0,onTabChange:()=>y.notify("inspectorTabChanged",C.INSPECTOR)}),i.forEach((n,s)=>{n.disableEditing&&n.objectMode&&console.error("Object mode cannot disable editing.");const r=this.tab.addTab(`Tab-${s}`,n.getIcon(),"lucide");n.build(r),r.registerOnSelected(()=>{this.modeSelected(s),this.resetControls(),a.getControls().add(n.getControls())}),r.registerOnDeSelected(()=>{this.modeDeselected(s),this.resetControls()})}),this.tab.onChange(()=>this.inspectorChanged()),this.hideInspector()}currentObject;currentMode;tab;controls;select(t){this.lace.hideAll(),this.currentObject=t,this.modes.forEach(i=>i.select(t)),this.objectChanged();const e=t.getMode();this.currentMode=e,this.modes[e].setActive(!0),this.showInspector(),this.showTab(e)}deselect(){this.hideInspector(),this.modes.forEach(t=>t.deselect()),this.modes[this.currentMode].setActive(!1),this.currentObject=null}objectChanged(){this.currentObject===null||this.currentMode===-1||(this.modes[this.currentMode].objectChanged(this.currentObject),this.updateTab())}inspectorChanged(){this.currentObject===null||this.currentMode===-1||(this.modes[this.currentMode].inspectorChanged(this.currentObject),y.notify("objectChanged",C.INSPECTOR))}modeSelected(t){this.currentObject===null||t>=this.modes.length||(this.modes[t].objectMode&&this.enableObjectMode(this.currentObject),this.modes[t].disableEditing?a.getSelectionManager().disableEditing():a.getSelectionManager().enableEditing(),this.currentObject.setMode(t),this.currentMode=t,this.modes[t].setActive(!0),this.objectChanged())}modeDeselected(t){t>=this.modes.length||(this.modes[t].objectMode&&this.disableObjectMode(),a.getSelectionManager().enableEditing(),this.modes[t].setActive(!1))}showTab(t){this.tab.show(`Tab-${t}`)}showInspector(){this.lace.show(this.tab),a.getControls().add(this.controls)}hideInspector(){this.lace.hide(this.tab),this.resetControls(),a.getControls().remove(this.controls)}updateTab(){this.tab.update()}resetControls(){this.modes.forEach(t=>a.getControls().remove(t.getControls()))}enableObjectMode(t){a.getTransformControls().attach(t.getMesh()),a.getSelectionManager().disableEditing()}disableObjectMode(){a.getTransformControls().detach(),a.getSelectionManager().enableEditing()}}class H{constructor(t,e,i,n=!1){this.icon=t,this.objectMode=e,this.controls=i,this.disableEditing=n}active=!1;getIcon(){return this.icon}getControls(){return this.controls}setActive(t){this.active=t}}class jt extends bi{container;elements;changeCallback;addCallback;removeCallback;divElements=[];editorElements=[];constructor(t,e,i,n,s,r={}){const{scrollFix:h=!1}=r,c=document.createElement("div");c.style.display="flex",c.style.flexDirection="column",c.style.width="100%",c.style.alignItems="center",c.style.justifyContent="space-between",h&&(c.style.maxHeight="calc(50vh - 2rem)"),super(t,c),this.container=c,this.label=t,this.elements=e,this.changeCallback=i,this.addCallback=n,this.removeCallback=s,this.drawList()}drawList(){this.container.innerHTML="";const t=document.createElement("span");t.innerHTML=this.label,t.style.width="100%",t.style.textAlign="left",t.style.marginBottom="0.5em",t.style.fontSize="var(--sl-input-label-font-size-small)",this.container.appendChild(t),this.elements.forEach((s,r)=>{this.drawElement(r)});const e=document.createElement("sl-button-group");e.style.width="100%";const i=document.createElement("sl-button");i.innerText="Add",i.size="small",i.variant="success",i.outline=!0,i.style.width="50%",i.onclick=()=>this.addCallback();const n=document.createElement("sl-button");n.innerText="Remove",n.size="small",n.variant="danger",n.outline=!0,n.style.width="50%",n.onclick=()=>this.removeCallback(),e.appendChild(i),e.appendChild(n),this.container.appendChild(document.createElement("br")),this.container.appendChild(e),this.container.appendChild(document.createElement("br"))}changedIndex(t){this.changeCallback(t),this.changed()}updateIndex(t){this.editorElements[t].forEach(e=>e.update())}getObj(){return null}getKeys(){return[]}update(){this.drawNewElements(),this.removeOldElements(),this.editorElements.forEach((t,e)=>{t.forEach(i=>i.update())})}setSize(t){}drawNewElements(){const t=this.elements.length-this.divElements.length;for(let e=0;e<t;e++)this.drawElement(this.elements.length-t+e)}removeOldElements(){const t=this.divElements.length-this.elements.length;for(let e=0;e<t;e++)this.divElements.pop().remove()}drawElement(t){const e=document.createElement("div");e.classList.add("list-item"),e.style.width="100%",e.style.display="flex",e.style.flexDirection="row",e.style.justifyContent="space-between",e.style.alignItems="center",e.style.padding="0.5em";const i=document.createElement("span");i.innerHTML="<i>"+(t+1).toString()+"</i>: ",i.style.width="20%",i.style.textAlign="center",i.style.marginRight="1em",e.appendChild(i);const n=document.createElement("div");n.style.display="flex",n.style.flexDirection="column",n.style.minWidth="0",n.style.flexGrow="1",this.editorElements[t]=[];var s=0;this.elements[t].getEditor().forEach(h=>{if(this.editorElements[t].push(h),h.registerUpdateCallback(()=>this.changedIndex(t)),h.setSize("small"),s>0){const c=document.createElement("br");n.appendChild(c)}n.appendChild(h.element),s++}),e.appendChild(n),this.divElements.push(e),this.container.appendChild(e)}}class Ht{}class Qi extends Z{constructor(t){const e=[new tn,new en,new on,new sn];super("Bezier Curve",t,e)}}let tn=class extends H{params;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000"}}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color"))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color))}},en=class extends H{controlPoints;currentObject;laceList;atFront=!1;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new T("E/Insert","Insert a new control point at the last selected endpoint.")),t.add(new T("R/Delete","Remove the last control point.")),super("waypoints",!1,t),this.controlPoints=[],this.currentObject=null,this.laceList=new jt("Control Points",this.controlPoints,this.listChanged.bind(this),this.listAdd.bind(this),this.listRemove.bind(this),{scrollFix:!0}),y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(e.getIndex()===0?this.atFront=!0:e.getIndex()===this.controlPoints.length-1&&(this.atFront=!1))}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.atFront?this.controlPoints[0].getPosition():this.controlPoints[this.controlPoints.length-1].getPosition(),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(r.sub(this.currentObject.getPosition()),this.atFront)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.removeControlPoint(this.atFront)}).bind(this))}build(t){t.add(this.laceList)}select(t){this.atFront=!1,this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){const e=t.getControlPoints();this.controlPoints.length=0,e.forEach((i,n)=>{this.controlPoints.push(new nn(i))}),this.laceList.update()}inspectorChanged(t){}listChanged(t){this.currentObject!==null&&this.currentObject.updateControlPoint(t,this.controlPoints[t].getPosition())}listAdd(){if(this.currentObject===null)return;const t=this.controlPoints[this.controlPoints.length-2].getPosition(),e=this.controlPoints[this.controlPoints.length-1].getPosition(),i=St(e,t);this.addControlPoint(i)}addControlPoint(t,e=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}listRemove(){this.currentObject!==null&&(this.removeControlPoint(),this.objectChanged(this.currentObject))}removeControlPoint(t=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class nn extends Ht{position;constructor(t){super(),this.position=t}setPosition(t){this.position.set(t.x,t.y,t.z)}getPosition(){const t=new w;return t.set(this.position.x,this.position.y,this.position.z),t}getEditor(){return[new k("Position",this.position,"x","y","z")]}}class on extends H{params;currentObject;slider;constructor(){const t=new j;t.add(new O("<b>Hover</b> over the curve to adjust the t-value.")),super("spline",!1,t,!0),this.params={t:0},this.currentObject=null,this.slider=new L("T",this.params,"t",{min:0,max:1,step:.01}),window.addEventListener("mousemove",(e=>{if(!this.active||a.isOrbiting()||this.currentObject===null)return;const i=new Y;i.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const n=i.intersectObject(this.currentObject.getCollisionMesh(),!1);if(n.length>0){const s=n[0].point.sub(this.currentObject.getPosition());this.currentObject.updateDeCasteljauFromNearestPoint(s),this.params.t=this.currentObject.getDeCasteljauT(),this.slider.update()}}).bind(this))}build(t){t.add(new U("De-Casteljau Visualization")),t.add(this.slider)}select(t){this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){this.params.t=t.getDeCasteljauT()}inspectorChanged(t){t.updateDeCasteljauT(this.params.t)}}class sn extends H{constructor(){const t=new j;super("info",!1,t,!0)}build(t){t.add(new U("A <b>Bezier Curve</b> \\( b(t) \\) is a parametric curve widely used in computer graphics, animation, and design for modeling smooth and scalable shapes.<br />It is defined by a <b>set of control points</b> \\( b_i \\), which determine the curve's shape.The curve starts at the first control point and ends at the last one, with intermediate control points influencing its curvature.<br/>\\[ b(t) = \\sum_{i=0}^{n} \\binom{n}{i} \\, t^{i} \\, (1-t)^{n-i} \\, b_i \\]Where \\( n \\) is the degree of the curve, \\( b_i \\) are the control points, and \\( t \\) varies from 0 to 1.",{block:!0}))}select(t){}deselect(){}objectChanged(t){}inspectorChanged(t){}}class rn extends Z{constructor(t){const e=[new an,new ln];super("Linear Curve",t,e)}}let an=class extends H{params;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000"}}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color"))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color))}},ln=class extends H{controlPoints;currentObject;laceList;atFront=!1;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new T("E/Insert","Insert a new control point at the last selected endpoint.")),t.add(new T("R/Delete","Remove the last control point.")),super("waypoints",!1,t),this.controlPoints=[],this.currentObject=null,this.laceList=new jt("Control Points",this.controlPoints,this.listChanged.bind(this),this.listAdd.bind(this),this.listRemove.bind(this),{scrollFix:!0}),y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(e.getIndex()===0?this.atFront=!0:e.getIndex()===this.controlPoints.length-1&&(this.atFront=!1))}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.atFront?this.controlPoints[0].getPosition():this.controlPoints[this.controlPoints.length-1].getPosition(),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(r.sub(this.currentObject.getPosition()),this.atFront)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.removeControlPoint(this.atFront)}).bind(this))}build(t){t.add(this.laceList)}select(t){this.atFront=!1,this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){const e=t.getControlPoints();this.controlPoints.length=0,e.forEach((i,n)=>{this.controlPoints.push(new cn(i))}),this.laceList.update()}inspectorChanged(t){}listChanged(t){this.currentObject!==null&&this.currentObject.updateControlPoint(t,this.controlPoints[t].getPosition())}listAdd(){if(this.currentObject===null)return;const t=this.controlPoints[this.controlPoints.length-2].getPosition(),e=this.controlPoints[this.controlPoints.length-1].getPosition(),i=St(e,t);this.addControlPoint(i)}addControlPoint(t,e=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}listRemove(){this.currentObject!==null&&(this.removeControlPoint(),this.objectChanged(this.currentObject))}removeControlPoint(t=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class cn extends Ht{position;constructor(t){super(),this.position=t}setPosition(t){this.position.set(t.x,t.y,t.z)}getPosition(){const t=new w;return t.set(this.position.x,this.position.y,this.position.z),t}getEditor(){return[new k("Position",this.position,"x","y","z")]}}class hn extends Z{constructor(t){const e=[new dn,new un];super("Uniform B-Spline",t,e)}}let dn=class extends H{params;degreeSlider;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,degree:2,color:"#000000",closed:!1},this.degreeSlider=new L("Degree",this.params,"degree",{min:2,max:10,step:1})}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color")),t.add(this.degreeSlider),t.add(new zt("Closed",this.params,"closed"))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString(),this.params.degree=t.getDegree(),this.degreeSlider.setMax(t.getControlPoints().length-1),this.params.closed=t.isClosed()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color)),t.setDegree(this.params.degree),t.setClosed(this.params.closed)}},un=class extends H{controlPoints;currentObject;laceList;atFront=!1;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new T("E/Insert","Insert a new control point at the last selected endpoint.")),t.add(new T("R/Delete","Remove the last control point.")),super("waypoints",!1,t),this.controlPoints=[],this.currentObject=null,this.laceList=new jt("Control Points",this.controlPoints,this.listChanged.bind(this),this.listAdd.bind(this),this.listRemove.bind(this),{scrollFix:!0}),y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(e.getIndex()===0?this.atFront=!0:e.getIndex()===this.controlPoints.length-1&&(this.atFront=!1))}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.atFront?this.controlPoints[0].getPosition():this.controlPoints[this.controlPoints.length-1].getPosition(),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(r.sub(this.currentObject.getPosition()),this.atFront)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.removeControlPoint(this.atFront)}).bind(this))}build(t){t.add(this.laceList)}select(t){this.atFront=!1,this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){const e=t.getControlPoints();this.controlPoints.length=0,e.forEach((i,n)=>{this.controlPoints.push(new mn(i))}),this.laceList.update()}inspectorChanged(t){}listChanged(t){this.currentObject!==null&&this.currentObject.updateControlPoint(t,this.controlPoints[t].getPosition())}listAdd(){if(this.currentObject===null)return;const t=this.controlPoints[this.controlPoints.length-2].getPosition(),e=this.controlPoints[this.controlPoints.length-1].getPosition(),i=St(e,t);this.addControlPoint(i)}addControlPoint(t,e=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}listRemove(){this.currentObject!==null&&(this.removeControlPoint(),this.objectChanged(this.currentObject))}removeControlPoint(t=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class mn extends Ht{position;constructor(t){super(),this.position=t}setPosition(t){this.position.set(t.x,t.y,t.z)}getPosition(){const t=new w;return t.set(this.position.x,this.position.y,this.position.z),t}getEditor(){return[new k("Position",this.position,"x","y","z")]}}class gn extends Z{constructor(t){const e=[new pn,new fn];super("Uniform Rational B-Spline",t,e)}}let pn=class extends H{params;degreeSlider;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,degree:2,color:"#000000",closed:!1},this.degreeSlider=new L("Degree",this.params,"degree",{min:2,max:10,step:1})}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color")),t.add(this.degreeSlider),t.add(new zt("Closed",this.params,"closed"))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString(),this.params.degree=t.getDegree(),this.degreeSlider.setMax(t.getControlPoints().length-1),this.params.closed=t.isClosed()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color)),t.setDegree(this.params.degree),t.setClosed(this.params.closed)}},fn=class extends H{controlPoints;currentObject;laceList;atFront=!1;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new T("E/Insert","Insert a new control point at the last selected endpoint.")),t.add(new T("R/Delete","Remove the last control point.")),t.add(new O("When a control point is selected, <b>scroll</b> to change its weight.")),super("waypoints",!1,t),this.controlPoints=[],this.currentObject=null,this.laceList=new jt("Control Points",this.controlPoints,this.listChanged.bind(this),this.listAdd.bind(this),this.listRemove.bind(this),{scrollFix:!0}),y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(e.getIndex()===0?this.atFront=!0:e.getIndex()===this.controlPoints.length-1&&(this.atFront=!1),this.currentObject.showWeightEditRing(e.getIndex()))}),y.subscribe("editHandleUnselected",C.ALL,()=>{this.currentObject&&this.currentObject.hideWeightEditRing()}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.atFront?this.controlPoints[0].getPosition():this.controlPoints[this.controlPoints.length-1].getPosition(),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(r.sub(this.currentObject.getPosition()),this.atFront)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.removeControlPoint(this.atFront)}).bind(this))}build(t){t.add(this.laceList)}select(t){this.atFront=!1,this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){const e=t.getControlPoints();this.controlPoints.length=0,e.forEach((i,n)=>{this.controlPoints.push(new bn(i))}),this.laceList.update()}inspectorChanged(t){}listChanged(t){if(this.currentObject===null)return;const e=this.controlPoints[t].getPosition(),i=new D(e.x,e.y,e.z,this.controlPoints[t].getWeight());this.currentObject.updateControlPoint(t,i)}listAdd(){if(this.currentObject===null)return;const t=this.controlPoints[this.controlPoints.length-2].getPosition(),e=this.controlPoints[this.controlPoints.length-1].getPosition(),i=St(e,t);this.addControlPoint(i)}addControlPoint(t,e=!1){if(this.currentObject===null)return;a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle();const i=new D(t.x,t.y,t.z,1);this.currentObject.addControlPoint(i,e),this.objectChanged(this.currentObject)}listRemove(){this.currentObject!==null&&(this.removeControlPoint(),this.objectChanged(this.currentObject))}removeControlPoint(t=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class bn extends Ht{position;constructor(t){super(),this.position=t}setPosition(t){this.position.set(t.x,t.y,t.z,this.position.w)}getPosition(){const t=new w;return t.set(this.position.x,this.position.y,this.position.z),t}setWeight(t){this.position.set(this.position.x,this.position.y,this.position.z,t)}getWeight(){return this.position.w}getEditor(){const t=new k("Position",this.position,"x","y","z"),e=new L("Weight",this.position,"w",{min:1,max:10,step:.5});return[t,e]}}class wn extends Z{constructor(t){const e=[new vn,new Pn];super("Bezier Spline",t,e)}}let vn=class extends H{params;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000"}}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color"))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color))}},Pn=class extends H{controlPoints;currentObject;laceList;atFront=!1;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new T("E/Insert","Insert a new control point at the last selected endpoint.")),t.add(new T("R/Delete","Remove the last control point.")),super("waypoints",!1,t),this.controlPoints=[],this.currentObject=null,this.laceList=new jt("Control Points",this.controlPoints,this.listChanged.bind(this),this.listAdd.bind(this),this.listRemove.bind(this),{scrollFix:!0}),y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(e.getIndex()===0?this.atFront=!0:e.getIndex()===this.controlPoints.length-1&&(this.atFront=!1))}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.atFront?this.controlPoints[0].getPosition():this.controlPoints[this.controlPoints.length-1].getPosition(),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(r.sub(this.currentObject.getPosition()),this.atFront)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.removeControlPoint(this.atFront)}).bind(this))}build(t){t.add(new U("Control Points",{bold:!0})),t.add(new U("Work in progress!",{italic:!0}))}select(t){this.atFront=!1,this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){const e=t.getControlPoints();this.controlPoints.length=0,e.forEach((i,n)=>{this.controlPoints.push(new Cn(i))}),this.laceList.update()}inspectorChanged(t){}listChanged(t){this.currentObject!==null&&(this.currentObject.updateControlPoint(t,this.controlPoints[t].getPosition()),this.objectChanged(this.currentObject))}listAdd(){if(this.currentObject===null)return;const t=this.controlPoints[this.controlPoints.length-2].getPosition(),e=this.controlPoints[this.controlPoints.length-1].getPosition(),i=St(e,t);this.addControlPoint(i)}addControlPoint(t,e=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}listRemove(){this.currentObject!==null&&(this.removeControlPoint(),this.objectChanged(this.currentObject))}removeControlPoint(t=!1){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class Cn extends Ht{position;constructor(t){super(),this.position=t.clone()}setPosition(t){this.position.set(t.x,t.y,t.z)}getPosition(){const t=new w;return t.set(this.position.x,this.position.y,this.position.z),t}getEditor(){return[new k("Position",this.position,"x","y","z")]}}class me extends H{currentObject;group=void 0;params;constructor(){const t=new j;super("brick-wall",!1,t,!0),this.currentObject=null,this.params={shadingModel:Re.name,color:"#000000"}}build(t){t.add(new Nt("Shading Model",this.params,"shadingModel",this.getShadingModelsDropdown())),t.add(new F("Color",this.params,"color")),this.group=t.addGroup(),this.currentObject!==null&&this.currentObject.getMaterial().buildUI(this.group)}select(t){this.currentObject=t,this.group!==void 0&&(this.group.reset(),this.currentObject.getMaterial().buildUI(this.group))}deselect(){this.currentObject=null}objectChanged(t){this.params.color=t.getColor().getHexString(),this.params.shadingModel=t.getMaterial().getShadingModelName()}inspectorChanged(t){if(!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.updateColor(new V(this.params.color)),t.getMaterial().getShadingModelName()!==this.params.shadingModel){const i=this.createShadingModel(this.params.shadingModel);t.getMaterial().setShadingModel(i)}}createShadingModel(t){return Ct()[t].create()}getShadingModelsDropdown(){const t=Ct(),e={};for(const i in t)e[i]=t[i].name;return e}}class yn extends Z{constructor(t){const e=[new Mn,new xn,new me];super("Bezier Patch",t,e)}}let Mn=class extends H{params;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000",reflectivity:0}}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color")),t.add(new kt),t.add(new L("Reflectivity",this.params,"reflectivity",{min:0,max:1,step:.01}))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString(),this.params.reflectivity=t.getReflectivity()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color)),t.setReflectivity(this.params.reflectivity)}},xn=class extends H{currentObject;lastIndex=null;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new O("<b>Once you have selected a control point</b> (at the edges):")),t.add(new T("E/Insert","Insert a new row and/or column at the mouse position.")),t.add(new T("R/Delete","Remove the last row and/or column.")),super("waypoints",!1,t),this.currentObject=null,y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(this.lastIndex=e.getIndex())}),y.subscribe("editHandleUnselected",C.ALL,()=>{this.lastIndex=null}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null||this.lastIndex===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.currentObject.getControlPoint(this.lastIndex),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(this.lastIndex,r)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.lastIndex!==null&&this.removeControlPoint(this.lastIndex)}).bind(this))}build(t){t.add(new U("Control Points",{bold:!0})),t.add(new U("Work in progress!",{italic:!0}))}select(t){this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){}inspectorChanged(t){}addControlPoint(t,e){this.currentObject&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}removeControlPoint(t){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class En extends Z{constructor(t){const e=[new Sn,new On,new me];super("Uniform B-Spline Surface",t,e)}}let Sn=class extends H{params;degreeSlider;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000",degree:0,closed:"none",reflectivity:0},this.degreeSlider=new L("Degree",this.params,"degree",{min:2,max:10,step:1})}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color")),t.add(this.degreeSlider),t.add(new Nt("Closed",this.params,"closed",{none:"None",u:"X",v:"Y"})),t.add(new kt),t.add(new L("Reflectivity",this.params,"reflectivity",{min:0,max:1,step:.01}))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString(),this.params.degree=t.getDegree(),this.degreeSlider.setMax(t.getMaxDegree()),this.params.closed=t.getClosedU()?"u":t.getClosedV()?"v":"none",this.params.reflectivity=t.getReflectivity()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color)),t.setDegree(this.params.degree),this.params.closed==="u"?t.setClosedU(!0):this.params.closed==="v"?t.setClosedV(!0):(t.setClosedU(!1),t.setClosedV(!1)),t.setReflectivity(this.params.reflectivity)}},On=class extends H{currentObject;lastIndex=null;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new O("<b>Once you have selected a control point</b> (at the edges):")),t.add(new T("E/Insert","Insert a new row and/or column at the mouse position.")),t.add(new T("R/Delete","Remove the last row and/or column.")),super("waypoints",!1,t),this.currentObject=null,y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(this.lastIndex=e.getIndex())}),y.subscribe("editHandleUnselected",C.ALL,()=>{this.lastIndex=null}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null||this.lastIndex===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.currentObject.getControlPoint(this.lastIndex),s=new et().setFromNormalAndCoplanarPoint(i,n),r=new w;e.ray.intersectPlane(s,r),r.x=Math.round(r.x*100)/100,r.y=Math.round(r.y*100)/100,r.z=Math.round(r.z*100)/100,this.addControlPoint(this.lastIndex,r)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.lastIndex!==null&&this.removeControlPoint(this.lastIndex)}).bind(this))}build(t){t.add(new U("Control Points",{bold:!0})),t.add(new U("Work in progress!",{italic:!0}))}select(t){this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){}inspectorChanged(t){}addControlPoint(t,e){this.currentObject&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}removeControlPoint(t){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}};class jn extends Z{constructor(t){const e=[new Hn,new In,new me];super("Uniform Rational B-Spline Surface",t,e)}}class Hn extends H{params;degreeSlider;constructor(){const t=new j;t.add(new O("<b>Move</b> the object with the transform control.")),super("box",!0,t),this.params={name:"",position:new w,color:"#000000",degree:0,closed:"none",reflectivity:0},this.degreeSlider=new L("Degree",this.params,"degree",{min:2,max:10,step:1})}build(t){t.add(new it("",this.params,"name")),t.add(new k("Position",this.params.position,"x","y","z")),t.add(new F("Color",this.params,"color")),t.add(this.degreeSlider),t.add(new Nt("Closed",this.params,"closed",{none:"None",u:"X",v:"Y"})),t.add(new kt),t.add(new L("Reflectivity",this.params,"reflectivity",{min:0,max:1,step:.01}))}select(t){}deselect(){}objectChanged(t){this.params.name=t.getName(),this.params.position.set(t.getPosition().x,t.getPosition().y,t.getPosition().z),this.params.color=t.getColor().getHexString(),this.params.degree=t.getDegree(),this.degreeSlider.setMax(t.getMaxDegree()),this.params.closed=t.getClosedU()?"u":t.getClosedV()?"v":"none",this.params.reflectivity=t.getReflectivity()}inspectorChanged(t){!this.params.color.startsWith("#")&&!this.params.color.startsWith("rgb")&&(this.params.color="#"+this.params.color),t.setName(this.params.name),t.setPosition(this.params.position),t.updateColor(new V(this.params.color)),t.setDegree(this.params.degree),this.params.closed==="u"?t.setClosedU(!0):this.params.closed==="v"?t.setClosedV(!0):(t.setClosedU(!1),t.setClosedV(!1)),t.setReflectivity(this.params.reflectivity)}}class In extends H{currentObject;lastIndex=null;constructor(){const t=new j;t.add(new O("<b>Click</b> on a control point to <b>select</b> it.")),t.add(new O("<b>Move</b> the selected control point with the transform controls.")),t.add(new O("When a control point is selected, <b>scroll</b> to change its weight.")),t.add(new O("<b>Once you have selected a control point</b> (at the edges):")),t.add(new T("E/Insert","Insert a new row and/or column at the mouse position.")),t.add(new T("R/Delete","Remove the last row and/or column.")),super("waypoints",!1,t),this.currentObject=null,y.subscribe("editHandleSelected",C.ALL,e=>{this.currentObject&&(this.lastIndex=e.getIndex(),this.currentObject.showWeightEditRing(e.getIndex()))}),y.subscribe("editHandleUnselected",C.ALL,()=>{this.lastIndex=null,this.currentObject&&this.currentObject.hideWeightEditRing()}),a.getInteractionsManager().addKeydowns(["e","insert"],(()=>{if(!this.active||this.currentObject===null||this.lastIndex===null)return;const e=new Y;e.setFromCamera(a.getSelectionManager().getMouse(),a.getCamera());const i=new w;a.getCamera().getWorldDirection(i);const n=this.currentObject.getControlPoint(this.lastIndex),s=new w(n.x,n.y,n.z),r=new et().setFromNormalAndCoplanarPoint(i,s),h=new w;e.ray.intersectPlane(r,h),h.x=Math.round(h.x*100)/100,h.y=Math.round(h.y*100)/100,h.z=Math.round(h.z*100)/100,this.addControlPoint(this.lastIndex,h)}).bind(this)),a.getInteractionsManager().addKeydowns(["r","delete"],(()=>{this.active&&this.currentObject!==null&&this.lastIndex!==null&&this.removeControlPoint(this.lastIndex)}).bind(this))}build(t){t.add(new U("Control Points",{bold:!0})),t.add(new U("Work in progress!",{italic:!0}))}select(t){this.currentObject=t}deselect(){this.currentObject=null}objectChanged(t){}inspectorChanged(t){}addControlPoint(t,e){this.currentObject&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.addControlPoint(t,e),this.objectChanged(this.currentObject))}removeControlPoint(t){this.currentObject!==null&&(a.getTransformControls().detach(),a.getSelectionManager().doResetSelectedEditHandle(),this.currentObject.removeControlPoint(t),this.objectChanged(this.currentObject))}}var te=(o=>(o[o.LOW=0]="LOW",o[o.MEDIUM=1]="MEDIUM",o[o.HIGH=2]="HIGH",o))(te||{}),ee=(o=>(o[o.BezierPatch=0]="BezierPatch",o))(ee||{});class Vn{type;position;color;reflectivity;constructor(t,e,i,n=0){this.type=t,this.position=e,this.color=i,this.reflectivity=n}}class qt extends Vn{controlPoints;data={};constructor(t,e,i,n=0){super(0,e,i,n),this.controlPoints=t}}function At(o){return new l.Vector3(o.x/o.w,o.y/o.w,o.z/o.w)}class Ln{dialog;preview;previewContainer;console;consolePanel;progressBar;downloadButton;closeButton;tabGroup;constructor(){this.dialog=document.createElement("sl-dialog"),this.dialog.classList.add("raytracer-dialog"),this.dialog.noHeader=!0,this.dialog.style.setProperty("--width","80vw"),this.dialog.style.color="var(--sl-input-color)",this.dialog.style.fontFamily="var(--sl-font-sans)",this.dialog.addEventListener("sl-request-close",m=>{m.preventDefault()});const t=document.createElement("div");t.style.display="flex",t.style.flexDirection="column",t.style.width="100%",t.style.height="70vh";const e=document.createElement("sl-tab-group");e.placement="start",e.style.width="100%",e.style.flex="1 1 0",e.style.minHeight="0",e.style.overflow="hidden",t.appendChild(e),e.addEventListener("sl-tab-show",m=>{this.scrollToBottom(),requestAnimationFrame(this.renderPreview.bind(this))}),this.tabGroup=e;const i=document.createElement("sl-tab");i.slot="nav",i.panel="preview";const n=document.createElement("sl-icon");n.name="eye",n.library="lucide",n.style.fontSize="1.3em",n.style.marginRight="5px",i.appendChild(n),i.appendChild(document.createTextNode("Preview")),e.appendChild(i);const s=document.createElement("sl-tab-panel");s.name="preview",e.appendChild(s),this.previewContainer=document.createElement("div"),this.previewContainer.style.display="flex",this.previewContainer.style.width="100%",this.previewContainer.style.height="100%",this.previewContainer.style.justifyContent="center",this.previewContainer.style.alignItems="center",s.appendChild(this.previewContainer),this.preview=document.createElement("canvas"),this.preview.style.borderRadius="var(--sl-border-radius-medium)",this.previewContainer.appendChild(this.preview);const r=document.createElement("sl-tab");r.slot="nav",r.panel="console";const h=document.createElement("sl-icon");h.name="square-terminal",h.library="lucide",h.style.fontSize="1.3em",h.style.marginRight="5px",r.appendChild(h),r.appendChild(document.createTextNode("Output")),e.appendChild(r),this.consolePanel=document.createElement("sl-tab-panel"),this.consolePanel.name="console",this.consolePanel.style.height="100%",this.consolePanel.style.overflowX="auto",e.appendChild(this.consolePanel),this.console=document.createElement("div"),this.console.style.height="100%",this.console.style.padding="10px",this.console.style.backgroundColor="var(--sl-color-neutral-200)",this.console.style.color="var(--sl-color-neutral-900)",this.console.style.fontFamily="var(--sl-font-mono)",this.console.style.fontSize="var(--sl-font-size-small)",this.console.style.fontWeight="var(--sl-font-weight-bold)",this.console.style.borderRadius="var(--sl-border-radius-medium)",this.console.style.overflow="auto",this.consolePanel.appendChild(this.console);const c=document.createElement("div");c.style.display="flex",c.style.flexDirection="row",c.style.alignContent="center",c.style.justifyContent="space-around",c.style.alignItems="center",c.style.marginTop="20px",t.appendChild(c),this.progressBar=document.createElement("sl-progress-bar"),this.progressBar.textContent="0%",this.progressBar.style.flex="1 1 0",this.progressBar.style.minWidth="0",this.progressBar.style.maxWidth="100%",c.appendChild(this.progressBar),this.progressBar.indeterminate=!0,this.downloadButton=document.createElement("sl-button"),this.downloadButton.variant="primary",this.downloadButton.outline=!0,this.downloadButton.style.marginLeft="10px";const d=document.createElement("sl-icon");d.slot="prefix",d.name="download",d.library="lucide",this.downloadButton.appendChild(d),this.downloadButton.appendChild(document.createTextNode("Download")),c.appendChild(this.downloadButton),this.downloadButton.loading=!0,this.closeButton=document.createElement("sl-button"),this.closeButton.variant="danger",this.closeButton.outline=!0,this.closeButton.style.marginLeft="10px";const u=document.createElement("sl-icon");u.slot="prefix",u.name="x",u.library="lucide",this.closeButton.appendChild(u),this.closeButton.appendChild(document.createTextNode("Close")),c.appendChild(this.closeButton),this.closeButton.disabled=!0,this.dialog.appendChild(t),a.getApp().appendChild(this.dialog)}show(){this.dialog.show()}hide(){this.dialog.hide(),this.console.innerHTML="",this.downloadButton.loading=!0,this.downloadButton.onclick=()=>{},this.closeButton.disabled=!0,this.closeButton.onclick=()=>{},this.progressBar.value=0,this.progressBar.textContent="0%",this.progressBar.indeterminate=!0}setProgress(t){this.progressBar.value=t,this.progressBar.textContent=t+"%",this.progressBar.indeterminate=!1}setProgressIndeterminate(){this.progressBar.indeterminate=!0}setPreview(t,e,i){const n=new ImageData(t,e,i);this.preview.width=e,this.preview.height=i;const s=this.preview.getContext("2d");s?s.putImageData(n,0,0):this.logError("Cannot show preview: no canvas context found"),requestAnimationFrame(this.renderPreview.bind(this))}renderPreview(){const t=this.preview.width/this.preview.height,e=this.previewContainer.clientWidth/this.tabGroup.clientHeight;t<e?(this.preview.style.width="auto",this.preview.style.height=this.tabGroup.clientHeight+"px"):(this.preview.style.width=this.previewContainer.clientWidth+"px",this.preview.style.height="auto")}allowDownload(t=()=>{}){this.downloadButton.onclick=t,this.downloadButton.loading=!1}allowClose(t=()=>{}){this.closeButton.onclick=t,this.closeButton.disabled=!1}log(t){this.addLog(t,"neutral-900")}logInfo(t){this.addLog(t,"primary-600")}logSuccess(t){this.addLog(t,"success-600")}logWarning(t){this.addLog(t,"warning-600")}logError(t){this.addLog(t,"danger-600")}addLog(t,e){const i=document.createElement("div"),n=document.createElement("span"),s=new Date().toLocaleTimeString();n.appendChild(document.createTextNode("["+s+"] ")),n.style.color="var(--sl-color-neutral-500)",n.style.fontWeight="var(--sl-font-weight-light)",i.appendChild(n),i.appendChild(document.createTextNode(t)),i.style.color="var(--sl-color-"+e+")",i.style.marginBottom="5px",i.style.whiteSpace="pre-wrap";const r=this.consolePanel.scrollTop+this.consolePanel.clientHeight>=this.consolePanel.scrollHeight-20;this.console.appendChild(i),r&&this.scrollToBottom()}scrollToBottom(){setTimeout(()=>{this.consolePanel.scrollTop=this.consolePanel.scrollHeight},0)}}function xe(o,t){const{newPoints:e,uKnots:i,vKnots:n}=Tn(o,t),s=[];for(let r=t;r<i.length-t-1;r++)if(i[r]!==i[r+1])for(let h=t;h<n.length-t-1;h++){if(n[h]===n[h+1])continue;const c=[];for(let d=0;d<=t;d++){const u=[];for(let m=0;m<=t;m++)u.push(e[r-t+d][h-t+m]);c.push(u)}s.push(c)}return s}function Tn(o,t){let e=z(t,o.length-1),i=z(t,o[0].length-1),n=[],s=[],r=[];for(const c of o){const{newPoints:d,newKnots:u}=Ee(c,t,i);n.push(d),r=u}const h=n[0].map((c,d)=>n.map(u=>u[d]));n=[];for(const c of h){const{newPoints:d,newKnots:u}=Ee(c,t,e);n.push(d),s=u}return n=n[0].map((c,d)=>n.map(u=>u[d])),{newPoints:n,uKnots:s,vKnots:r}}function Ee(o,t,e){let i=o.slice(),n=e.slice();for(let s=t;s<=e.length-t-1;s++){const r=e[s];for(let h=0;h<t-1;h++)({newPoints:i,newKnots:n}=Bn(i,t,n,r))}return{newPoints:i,newKnots:n}}function Bn(o,t,e,i){const n=e[t],s=e[e.length-t-1];if(i<n||i>s)return console.error("knotInsertion1D: t is out of bounds",i,"not in range [",n,",",s,"]"),{newPoints:[],newKnots:[]};let r=0,h=!1,c=[];for(let u=0;u<e.length;u++)c.push(e[u]),e[u]<=i&&i<e[u+1]&&!h&&(r=u,c.push(i),h=!0);let d=[];for(let u=0;u<=r-t;u++)d.push(o[u]);for(let u=r-t+1;u<=r;u++){const m=(i-e[u])/(e[u+t]-e[u]);if(m===0)d.push(o[u-1]);else if(m===1)d.push(o[u]);else{const g=o[u-1].clone().lerp(o[u],m);d.push(g)}}for(let u=r;u<o.length;u++)d.push(o[u]);return{newPoints:d,newKnots:c}}function Un(){const o=[],t=a.getObjectManager().getObjects();for(const e of t)if(e instanceof st){const i=e.toJSON(),n=i.controlPointsWidth,s=i.controlPointsHeight,r=[];for(let c=0;c<s;c++){r[c]=[];for(let d=0;d<n;d++){const u=i.controlPoints[c*n+d];r[c][d]=new l.Vector4(u.x,u.y,u.z,1)}}const h=new qt(r,e.getPosition(),new l.Color(i.color),e.getReflectivity());o.push(h)}else if(e instanceof mt){const i=e.toJSON(),n=i.controlPointsWidth+(i.closedU?i.degree:0),s=i.controlPointsHeight+(i.closedV?i.degree:0),r=[];for(let c=0;c<s;c++){r[c]=[];for(let d=0;d<n;d++){const u=c%i.controlPointsHeight,m=d%i.controlPointsWidth,g=i.controlPoints[u*i.controlPointsWidth+m];r[c][d]=new l.Vector4(g.x,g.y,g.z,1)}}const h=xe(r,i.degree);for(const c of h){const d=new qt(c,e.getPosition(),new l.Color(i.color),i.reflectivity);o.push(d)}}else if(e instanceof gt){const i=e.toJSON(),n=i.controlPointsWidth+(i.closedU?i.degree:0),s=i.controlPointsHeight+(i.closedV?i.degree:0),r=[];for(let c=0;c<s;c++){r[c]=[];for(let d=0;d<n;d++){const u=c%i.controlPointsHeight,m=d%i.controlPointsWidth,g=i.controlPoints[u*i.controlPointsWidth+m];r[c][d]=new l.Vector4(g.x*g.w,g.y*g.w,g.z*g.w,g.w)}}const h=xe(r,i.degree);for(const c of h){const d=new qt(c,e.getPosition(),new l.Color(i.color),i.reflectivity);o.push(d)}}return o}var ie=(o=>(o.INFO="INFO",o.SUCCESS="SUCCESS",o))(ie||{});const Zt=128;var Q=[],Bt=0,$e=[],dt=new Uint8ClampedArray(0);function Rn(o,t,e,i){const n=[],{width:s,height:r}=o;for(let h=0;h<r;h+=t)for(let c=0;c<s;c+=t){const d=Math.min(t,s-c),u=Math.min(t,r-h);n.push({started:!1,batch:{workerId:-1,task:o,xStart:c,yStart:h,width:d,height:u,supersamplingFactor:e,suppixelOffsets:i}})}return n}function Dn(o){const t=[],e=1/o;for(let i=0;i<o;i++)for(let n=0;n<o;n++)t.push({dx:(i+.5)*e-.5,dy:(n+.5)*e-.5});return t}function zn(o,t,e,i,n,s,r,h){for(let d=0;d<s;d++)for(let u=0;u<n;u++){const m=(d*n+u)*4,g=e+u,p=i+d;if(g>=r||p>=h)continue;const b=(p*r+g)*4;for(let f=0;f<4;f++)o[b+f]=t[m+f]}}self.onmessage=async o=>{const t=o.data,e=t.ambientLight,i=t.directionalLight,n=t.camera,s=new l.PerspectiveCamera(n.fov,t.width/t.height,.1,1e3);s.position.copy(n.position),s.rotation.copy(n.rotation),s.up.copy(n.up),s.updateProjectionMatrix(),s.updateMatrixWorld(),e.color=new l.Color(e.color.r,e.color.g,e.color.b),i.direction=new l.Vector3(i.direction.x,i.direction.y,i.direction.z).normalize(),i.color=new l.Color(i.color.r,i.color.g,i.color.b),dt=new Uint8ClampedArray(t.width*t.height*4);const r=Dn(t.supersamplingFactor),h={type:"INFO",messages:["Dimensions: "+t.width+"x"+t.height,"Found "+t.objects.length+" objects","Bounces: "+t.bounces,"Supersampling: "+t.supersamplingFactor*t.supersamplingFactor+"x","Starting to raytrace..."],progress:0,data:dt,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(h);var c=[];Q=Rn(t,Zt,t.supersamplingFactor,r),c.push("Created "+Q.length+" batches with size "+Zt+"x"+Zt+"!");const d=Math.min(Math.max(4,navigator.hardwareConcurrency-6),Q.length);c.push("Using "+d+" workers!");try{for(let m=0;m<d;m++){c.push("Creating Worker-"+m+" ...");const g=new Worker(t.workerURL,{type:"module"});$e.push(g),g.onmessage=Nn,c.push("Starting Worker-"+m+" ...");const p=Q[m];p.started=!0,p.batch.workerId=m,g.postMessage(p.batch)}}catch(m){c.push("Error creating workers: "+m)}const u={type:"INFO",messages:c,progress:0,data:dt,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(u)};function Nn(o){const t=o.data;zn(dt,t.data,t.xStart,t.yStart,t.width,t.height,t.task.width,t.task.height),Bt++;const e=Math.round(Bt/Q.length*100),i={type:"INFO",messages:["Batch "+Bt+" of "+Q.length+" finished!"],progress:e,data:dt,width:t.task.width,height:t.task.height,startTime:t.startTime};if(self.postMessage(i),Bt<Q.length){const s=Q.filter(h=>!h.started)[0],r=$e[t.workerId];s&&(s.started=!0,s.batch.workerId=t.workerId,r.postMessage(s.batch));return}const n={type:"SUCCESS",messages:["All batches finished!","Raytracing finished!"],progress:100,data:dt,width:t.task.width,height:t.task.height,startTime:t.startTime,objects:t.task.objects};self.postMessage(n)}const kn="/assets/raytracerBatchWorker-pWdA0Pj6.js";function Wn(o,t,e){const i=t.clone().sub(o.position),n=new l.Ray(i,e.clone().normalize()),s=An(n),r=$n(o),h=_e(r,s,7);if(h.length===0)return{hit:!1,distance:0,u:0,v:0,normal:new l.Vector3};h[0];let c=[];for(const b of h){const P=_n(b).distanceToSquared(i);c.push({patch:b,distance:P})}c.sort((b,f)=>b.distance-f.distance);var d={u:0,v:0},u=!1;for(const b of c){const f=b.patch,P=new l.Vector2((f.u.x+f.u.y)/2,(f.v.x+f.v.y)/2),E=qn(i,e,o.controlPoints,{u:P.x,v:P.y},10,Pt.EPSILON);if(E.converged){b.patch,d=E,u=!0;break}}if(!u)return{hit:!1,distance:0,u:0,v:0,normal:new l.Vector3};const m=Xe(o.controlPoints,d.u,d.v),g=Yn(m.du,m.dv);return{hit:!0,distance:m.point.distanceTo(i),u:d.u,v:d.v,normal:g}}function Fn(o,t,e,i,n,s,r){if(!t.hit)return{color:new l.Color(0,0,0),normal:new l.Vector3(0,0,0)};const h=e.clone().add(i.clone().normalize().multiplyScalar(t.distance)),c=t.normal.clone().normalize(),d=s.direction.clone().normalize(),u=e.clone().sub(h).normalize(),m=d.clone().add(u).normalize(),g=r?0:Math.max(0,c.dot(d))*s.intensity,b=r?0:Math.pow(Math.max(0,c.dot(m)),32)*s.intensity,f=s.color.clone().multiplyScalar(g),P=s.color.clone().multiplyScalar(b),E=n.color.clone().multiplyScalar(n.intensity).add(f).add(P),M=new l.Color(o.color.r,o.color.g,o.color.b).multiply(E);return t.debugColor&&M.copy(t.debugColor),{color:M,normal:c}}function An(o){const t=o.origin,e=o.direction.clone().normalize(),i=new l.Vector3;Math.abs(e.y)<.99?i.set(0,1,0):i.set(1,0,0);const n=new l.Vector3().crossVectors(e,i).normalize(),s=new l.Vector3().crossVectors(e,n).normalize(),r=new l.Matrix3;return r.set(n.x,s.x,e.x,n.y,s.y,e.y,n.z,s.z,e.z),r.transpose(),{origin:t,direction:e,projectionMatrix:r}}function Gn(o,t){const i=At(o.position).clone().sub(t.origin);return i.applyMatrix3(t.projectionMatrix),new l.Vector2(i.x,i.y)}function Jn(o){const t=new l.Vector2(1/0,1/0),e=new l.Vector2(-1/0,-1/0);for(const i of o)t.min(i),e.max(i);return t.x<=0&&e.x>=0&&t.y<=0&&e.y>=0}function Se(o,t=.5){const e=[o.map(s=>({position:s.position.clone(),uv:s.uv.clone()}))];for(let s=1;s<o.length;s++){const r=e[s-1],h=[];for(let c=0;c<r.length-1;c++){const d=r[c],u=r[c+1],m=d.position.clone().lerp(u.position,t),g=d.uv.clone().lerp(u.uv,t);h.push({position:m,uv:g})}e.push(h)}const i=e.map(s=>s[0]),n=e.map(s=>s[s.length-1]).reverse();return{left:i,right:n}}function Kn(o,t=.5){const{controlPoints:e,u:i,v:n}=o,s=e.length,r=e[0].length,h=[],c=[];for(let I=0;I<r;I++){const N=e.map(pt=>pt[I]),{left:B,right:A}=Se(N,t);h.push(B),c.push(A)}const d=Oe(h),u=Oe(c),m=I=>{const N=[],B=[];for(let A=0;A<s;A++){const pt=I[A],{left:nt,right:ft}=Se(pt,t);N.push(nt),B.push(ft)}return[N,B]},[g,p]=m(d),[b,f]=m(u),P=i.x+(i.y-i.x)*t,v=n.x+(n.y-n.x)*t,E={controlPoints:g,u:new l.Vector2(i.x,P),v:new l.Vector2(n.x,v),level:o.level+1},x={controlPoints:b,u:new l.Vector2(P,i.y),v:new l.Vector2(n.x,v),level:o.level+1},M={controlPoints:p,u:new l.Vector2(i.x,P),v:new l.Vector2(v,n.y),level:o.level+1},S={controlPoints:f,u:new l.Vector2(P,i.y),v:new l.Vector2(v,n.y),level:o.level+1};return[E,x,M,S]}function Oe(o){return o[0].map((t,e)=>o.map(i=>i[e]))}function $n(o){if(o.data.patch)return o.data.patch;const t=[];for(let i=0;i<o.controlPoints.length;i++){const n=[];for(let s=0;s<o.controlPoints[i].length;s++){const r=o.controlPoints[i][s],h=new l.Vector4(r.x,r.y,r.z,r.w);n.push({position:h,uv:new l.Vector2(i/(o.controlPoints.length-1),s/(o.controlPoints[i].length-1))})}t.push(n)}const e={controlPoints:t,u:new l.Vector2(0,1),v:new l.Vector2(0,1),level:0};return o.data.patch=e,e}function _e(o,t,e){if(Xn(o,t))return[];const i=o.controlPoints.map(h=>h.map(c=>Gn(c,t)));if(!Jn(i.flat()))return[];if(e<=0)return[o];const s=o.subdivisions?o.subdivisions:Kn(o,.5);o.level<5&&(o.subdivisions=s);const r=[];for(const h of s){const c=_e(h,t,e-1);r.push(...c)}return r}function _n(o){const t=o.controlPoints.length-1,e=o.controlPoints[0].length-1,i=new l.Vector3(0,0,0);var n=0;for(let s=0;s<=t;s++){const r=W(t,s,.5);for(let h=0;h<=e;h++){const c=At(o.controlPoints[s][h].position),d=o.controlPoints[s][h].position.w,u=W(e,h,.5),m=d*r*u;i.add(c.multiplyScalar(m)),n+=m}}return i.divideScalar(n)}function Xn(o,t){for(const e of o.controlPoints.flat())if(At(e.position).sub(t.origin).dot(t.direction)>0)return!1;return!0}function Xe(o,t,e){const i=o.length-1,n=o[0].length-1,s=new l.Vector3(0,0,0);var r=0;const h=new l.Vector3(0,0,0);var c=0;const d=new l.Vector3(0,0,0);var u=0;for(let b=0;b<=i;b++){const f=W(i,b,t),P=ye(i,b,t);for(let v=0;v<=n;v++){const E=At(o[b][v]),x=o[b][v].w,M=W(n,v,e),S=ye(n,v,e),I=x*f*M,N=x*P*M,B=x*f*S;s.add(E.clone().multiplyScalar(I)),r+=I,h.add(E.clone().multiplyScalar(N)),c+=N,d.add(E.clone().multiplyScalar(B)),u+=B}}const m=s.clone().divideScalar(r),g=h.clone().divideScalar(r).sub(s.clone().multiplyScalar(c/(r*r))),p=d.clone().divideScalar(r).sub(s.clone().multiplyScalar(u/(r*r)));return{point:m,du:g,dv:p}}function Yn(o,t){const e=new l.Vector3;return e.crossVectors(o,t),e.normalize(),e}function qn(o,t,e,i,n=10,s=Pt.EPSILON){let r=i.u,h=i.v;const c=t.clone().normalize(),d=new l.Vector3,u=new l.Vector3;for(let m=0;m<n;m++){const{point:g,du:p,dv:b}=Xe(e,r,h);d.copy(g).sub(o);const f=d.dot(c);u.copy(c).multiplyScalar(f).add(o);const P=g.clone().sub(u),v=[P.dot(p),P.dot(b)],E=p.dot(c),x=b.dot(c),M=[[p.dot(p)-E*E,p.dot(b)-E*x],[b.dot(p)-x*E,b.dot(b)-x*x]],S=M[0][0]*M[1][1]-M[0][1]*M[1][0];if(!isFinite(S)||Math.abs(S)<s*s)break;const I=[[M[1][1]/S,-M[0][1]/S],[-M[1][0]/S,M[0][0]/S]],N=-(I[0][0]*v[0]+I[0][1]*v[1]),B=-(I[1][0]*v[0]+I[1][1]*v[1]);if(r+=N,h+=B,r=Math.max(0,Math.min(1,r)),h=Math.max(0,Math.min(1,h)),Math.sqrt(N*N+B*B)<s&&P.lengthSq()<s*s)return{converged:!0,u:r,v:h,steps:m+1}}return{converged:!1,u:r,v:h,steps:n}}class Pt{static dialog=null;static EPSILON=1e-4;static prepareTask(t,e,i,n,s){const r=a.getPerspectiveCamera();if(r===null)throw new Error("Trying to raytrace in 2D mode!");const c=a.getDirectionalLight().position.clone().normalize(),d=Un();return{startTime:0,width:t,height:e,bounces:i,skybox:n,supersamplingFactor:s,quality:te.HIGH,objects:d,ambientLight:{color:a.getAmbientLight().color.clone(),intensity:a.getAmbientLight().intensity},directionalLight:{direction:c,color:a.getDirectionalLight().color.clone(),intensity:a.getDirectionalLight().intensity},camera:{position:r.position.clone(),rotation:r.rotation.clone(),fov:r.fov,up:r.up.clone()},workerURL:kn}}static execute(t){this.dialog||(this.dialog=new Ln),this.dialog.show(),this.dialog.setProgress(0),this.dialog.log("Starting Raytracer..."),this.dialog.log("Creating Worker...");const e=new Worker(new URL("/assets/raytracerWorker-B8wlQnE5.js",import.meta.url),{type:"module"});e.onmessage=this.onMessage.bind(this),this.dialog.log("Starting Worker..."),t.startTime=Date.now(),e.postMessage(t)}static onMessage(t){if(!this.dialog)return;const e=t.data.type;if(e===ie.INFO)t.data.messages.forEach(i=>{this.dialog&&this.dialog.logInfo("Worker: "+i)}),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.setProgress(t.data.progress);else if(e===ie.SUCCESS){this.dialog.setProgress(100),this.dialog.logInfo("Worker: "+t.data.messages[0]),this.dialog.logSuccess("Worker finished!");const i=Date.now()-t.data.startTime,n=Math.floor(i/6e4),s=(i%6e4/1e3).toFixed(2);n>0?this.dialog.logSuccess(`Raytracing took ${n.toString()} minutes and ${s} seconds`):this.dialog.logSuccess(`Raytracing took ${s} seconds`),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.allowDownload(()=>{this.dialog&&(this.dialog.logSuccess("Download started..."),this.downloadImage(t.data.data,t.data.width,t.data.height))}),this.dialog.allowClose(()=>{this.dialog&&this.dialog.hide()})}}static raytrace(t,e,i,n,s,r,h,c){if(i<0)return n?this.raytraceSkybox(e,new l.Color(.5,.7,1)):new l.Color(0,0,0);var d=void 0,u=void 0,m=Number.MAX_VALUE;for(const g of s){const p=this.rayhitObject(g,t,e,c);p.hit&&p.distance<m&&(m=p.distance,d=g,u=p)}if(d&&u){const g=t.clone().add(e.clone().multiplyScalar(m)).add(u.normal.clone().multiplyScalar(.1)),p=this.shadowRay(g,s,d,h),b=this.raytraceObject(d,u,t,e,r,h,p,c);if(d.reflectivity>0){const f=e.clone().reflect(u.normal).normalize(),P=s,v=this.raytrace(g,f,i-1,n,P,r,h,c);b.color.lerp(v,d.reflectivity)}return b.color}else return n?this.raytraceSkybox(e,new l.Color(.5,.7,1)):new l.Color(0,0,0)}static raytraceObject(t,e,i,n,s,r,h,c){switch(t.type){case ee.BezierPatch:return Fn(t,e,i,n,s,r,h)}return{color:new l.Color(0,0,0),normal:new l.Vector3(0,0,0)}}static rayhitObject(t,e,i,n,s=!1){switch(t.type){case ee.BezierPatch:return Wn(t,e,i)}return{hit:!1,distance:0,u:0,v:0,normal:new l.Vector3}}static shadowRay(t,e,i,n){const s=n.direction.clone().normalize(),r=t.clone();for(const h of e)if(this.rayhitObject(h,r,s,te.LOW,!0).hit)return!0;return!1}static raytraceSkybox(t,e){const i=t.y,n=new l.Color(.5,.5,.5),s=new l.Color(.2,.2,.2),r=e.clone().multiplyScalar(.5),h=e.clone(),c=.5*(i+1);return i>0?h.clone().lerp(r,c):s.clone().lerp(n,c)}static setPixel(t,e,i,n,s){const r=(n*e+i)*4;t[r]=Math.floor(s.r*255),t[r+1]=Math.floor(s.g*255),t[r+2]=Math.floor(s.b*255),t[r+3]=255}static downloadImage(t,e,i){const n=new ImageData(t,e,i),s=document.createElement("canvas");s.width=e,s.height=i;const r=s.getContext("2d");if(r){r.putImageData(n,0,0);const h=s.toDataURL("image/png"),c=document.createElement("a");c.href=h,c.download="raytrace.png",c.click()}else throw new Error("Failed to get canvas context")}}class Zn extends H{params;raytraceButton;prepareButton;constructor(){const t=new j;super("trending-up-down",!1,t,!0),this.params={width:512,height:512,bounces:3,skybox:!0,supersampling:1},this.raytraceButton=new Ce("Raytrace",this.startRaytracer.bind(this),{variant:"primary",prefixIcon:"play",iconLibrary:"lucide"}),this.prepareButton=new Ce("Download Task",this.downloadTask.bind(this),{variant:"warning",prefixIcon:"download",iconLibrary:"lucide"}),y.subscribe("dimensionSwitched",C.ALL,()=>{this.raytraceButton.setDisabled(a.dimension2D())})}build(t){t.add(new U("Raytracer",{bold:!0})),t.add(new L("Width",this.params,"width",{min:128,max:4096,step:128})),t.add(new L("Height",this.params,"height",{min:128,max:4096,step:128})),t.add(new L("Bounces",this.params,"bounces",{min:0,max:10,step:1})),t.add(new wi("Supersampling",this.params,"supersampling",{1:"Off",2:"4x",3:"9x"})),t.add(new zt("Skybox",this.params,"skybox")),t.add(this.raytraceButton),t.add(this.prepareButton)}startRaytracer(){try{const t=Pt.prepareTask(this.params.width,this.params.height,this.params.bounces,this.params.skybox,this.params.supersampling);Pt.execute(t)}catch(t){console.error("Raytracer error:",t)}}downloadTask(){const t=Pt.prepareTask(this.params.width,this.params.height,this.params.bounces,this.params.skybox,this.params.supersampling),e=new Blob([JSON.stringify(t)],{type:"application/json"}),i=URL.createObjectURL(e),n=document.createElement("a");n.href=i,n.download="raytracer_task.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}select(t){}deselect(){}objectChanged(t){}inspectorChanged(t){}}class Qn extends Z{constructor(t){const e=[new to,new eo,new io,new Zn];super("Scene",t,e)}}class to extends H{dirParams;ambParams;constructor(){const t=new j;super("sun",!1,t,!0),this.dirParams={dirLightRotation:0,dirLightIntensity:1,dirLightColor:"#ffffff"},this.ambParams={ambLightIntensity:.2,ambLightColor:"#f0f0f0"}}build(t){t.add(new U("Directional Light",{bold:!0})),t.add(new L("Rotation",this.dirParams,"dirLightRotation",{min:0,max:360,step:1}).onChange(this.updateDirectionalLight.bind(this))),t.add(new L("Intensity",this.dirParams,"dirLightIntensity",{min:.5,max:3,step:.1}).onChange(this.updateDirectionalLight.bind(this))),t.add(new F("Color",this.dirParams,"dirLightColor").onChange(this.updateDirectionalLight.bind(this))),t.add(new kt),t.add(new U("Ambient Light",{bold:!0})),t.add(new L("Intensity",this.ambParams,"ambLightIntensity",{min:0,max:1,step:.1}).onChange(this.updateAmbientLight.bind(this))),t.add(new F("Color",this.ambParams,"ambLightColor").onChange(this.updateAmbientLight.bind(this)))}updateDirectionalLight(){const e=Math.PI/180*this.dirParams.dirLightRotation,i=15*Math.cos(e),n=15*Math.sin(e);a.getDirectionalLight().position.set(i,20,n),a.getDirectionalLight().intensity=this.dirParams.dirLightIntensity,a.getDirectionalLight().color.set(this.dirParams.dirLightColor)}updateAmbientLight(){a.getAmbientLight().intensity=this.ambParams.ambLightIntensity,a.getAmbientLight().color.set(this.ambParams.ambLightColor)}select(t){this.objectChanged(t)}deselect(){}objectChanged(t){this.dirParams.dirLightRotation=t.dirRotation,this.dirParams.dirLightIntensity=t.dirIntensity,this.dirParams.dirLightColor=t.dirColor,this.ambParams.ambLightIntensity=t.ambIntensity,this.ambParams.ambLightColor=t.ambColor,this.updateDirectionalLight(),this.updateAmbientLight()}inspectorChanged(t){t.dirRotation=this.dirParams.dirLightRotation,t.dirIntensity=this.dirParams.dirLightIntensity,t.dirColor=this.dirParams.dirLightColor,t.ambIntensity=this.ambParams.ambLightIntensity,t.ambColor=this.ambParams.ambLightColor}}class eo extends H{params;exrLoader;constructor(){const t=new j;super("tent-tree",!1,t,!0),this.params={exrName:"outdoor",exrIntensity:1,showBackground:!1},this.exrLoader=new hi,y.subscribe("dimensionSwitched",C.ALL,()=>{this.updateBackground()})}build(t){t.add(new U("Scene Enviroment",{bold:!0})),t.add(new Nt("Map",this.params,"exrName",{outdoor:"Outdoor",indoor:"Indoor",space:"Space",northernLights:"Northern Lights"}).onChange(this.updateEnviroment.bind(this))),t.add(new L("Intensity",this.params,"exrIntensity",{min:0,max:5,step:.1}).onChange(this.updateEnviromentIntensity.bind(this))),t.add(new zt("Show Background",this.params,"showBackground",{help:"Background will only be shown in 3D Mode."}).onChange(this.updateBackground.bind(this)))}updateEnviroment(){this.exrLoader.load(`/exrs/${this.params.exrName}.exr`,t=>{t.mapping=si,t.minFilter=t.magFilter=ri,t.flipY=!1,a.getScene().environment=t,a.getScene().environmentIntensity=this.params.exrIntensity,this.params.showBackground&&!a.dimension2D()?(a.getScene().background=t,a.getScene().backgroundIntensity=this.params.exrIntensity):(a.getScene().background=new V(Qt()),a.getScene().backgroundIntensity=1),t.dispose(),y.notify("enviromentChanged",C.ALL)})}updateEnviromentIntensity(){a.getScene().environmentIntensity=this.params.exrIntensity,this.params.showBackground&&(a.getScene().backgroundIntensity=this.params.exrIntensity),y.notify("enviromentIntensityChanged",C.ALL)}updateBackground(){this.params.showBackground&&!a.dimension2D()?(a.getScene().background=a.getScene().environment,a.getScene().backgroundIntensity=this.params.exrIntensity):(a.getScene().background=new V(Qt()),a.getScene().backgroundIntensity=1)}select(t){a.getScene().environment===null&&this.updateEnviroment(),this.objectChanged(t)}deselect(){}objectChanged(t){t.envMap!==this.params.exrName?(this.params.exrName=t.envMap,this.params.exrIntensity=t.envIntensity,this.updateEnviroment()):t.envIntensity!==this.params.exrIntensity&&(this.params.exrIntensity=t.envIntensity,this.updateEnviromentIntensity())}inspectorChanged(t){t.envMap=this.params.exrName,t.envIntensity=this.params.exrIntensity}}class io extends H{constructor(){const t=new j;super("cog",!1,t,!0)}build(t){t.add(new U("General Settings",{bold:!0})),t.add(new U("Work in progress!",{italic:!0}))}select(t){}deselect(){}objectChanged(t){}inspectorChanged(t){}}class no{lace;currentInspector;objectInspectors;constructor(t){this.currentInspector=null,this.lace=new vi(t),this.objectInspectors=new Map,this.objectInspectors.set("scene",new Qn(this.lace)),this.objectInspectors.set("linearCurve",new rn(this.lace)),this.objectInspectors.set("bezierCurve",new Qi(this.lace)),this.objectInspectors.set("bezierSpline",new wn(this.lace)),this.objectInspectors.set("uniformBSplineCurve",new hn(this.lace)),this.objectInspectors.set("urbsCurve",new gn(this.lace)),this.objectInspectors.set("bezierPatch",new yn(this.lace)),this.objectInspectors.set("uniformBSplineSurface",new En(this.lace)),this.objectInspectors.set("uniformRationalBSplineSurface",new jn(this.lace)),y.subscribe("start",C.ALL,()=>this.updateInspector(null)),y.subscribe("objectSelected",C.ALL,e=>this.updateInspector(e)),y.subscribe("objectUnselected",C.ALL,()=>this.updateInspector(null)),y.subscribe("objectRemoved",C.ALL,()=>this.updateInspector(null)),y.subscribe("objectChanged",C.VIEWPORT,()=>this.objectChanged()),y.subscribe("transformMoved",C.VIEWPORT,()=>this.objectChanged()),y.subscribe("sceneReset",C.ALL,()=>this.updateInspector(null))}updateInspector(t){if(!t){this.lace.hideAll(),this.currentInspector?.deselect();const i=this.objectInspectors.get("scene");if(i!==void 0){i.select(a.getSceneProxy()),this.currentInspector=i;return}this.currentInspector=null;return}var e=void 0;t instanceof yt?e=this.objectInspectors.get("linearCurve"):t instanceof ut?e=this.objectInspectors.get("bezierCurve"):t instanceof Et?e=this.objectInspectors.get("bezierSpline"):t instanceof Mt?e=this.objectInspectors.get("uniformBSplineCurve"):t instanceof xt?e=this.objectInspectors.get("urbsCurve"):t instanceof st?e=this.objectInspectors.get("bezierPatch"):t instanceof mt?e=this.objectInspectors.get("uniformBSplineSurface"):t instanceof gt&&(e=this.objectInspectors.get("uniformRationalBSplineSurface")),e?(e.select(t),this.currentInspector=e):(this.lace.hideAll(),this.currentInspector=null)}objectChanged(){this.currentInspector&&this.currentInspector.objectChanged()}}class oo{selectionChanged;constructor(t,e,i){this.selectionChanged=e;const n=document.createElement("div"),s=document.createElement("sl-button-group");s.style.width="100%";const r=document.createElement("sl-dropdown");r.style.width="100%",r.hoist=!0,r.placement="bottom",s.appendChild(r);const h=document.createElement("sl-button");h.size="small",h.variant="danger",h.addEventListener("mousedown",i);const c=document.createElement("sl-icon");c.style.fontSize="1.3em",c.name="x-lg",c.slot="prefix";const d=document.createElement("span");d.textContent="Remove",h.appendChild(c),h.appendChild(d),s.appendChild(h),n.appendChild(s);const u=document.createElement("sl-button");u.slot="trigger",u.caret=!0,u.size="small",u.style.width="100%",u.variant="neutral";const m=document.createElement("sl-icon");m.style.fontSize="1.3em",m.name="plus-lg",m.slot="prefix";const g=document.createElement("span");g.textContent="Add",u.appendChild(m),u.appendChild(g),r.appendChild(u);const p=document.createElement("sl-menu");r.appendChild(p);const b=document.createElement("sl-menu-label");b.textContent="Curves",p.appendChild(b),p.appendChild(this.addNewObject("Linear Curve","LinearCurveObject",this.addLinearCurve.bind(this))),p.appendChild(this.addNewObject("Bezier Curve","BezierCurveObject",this.addBezierCurve.bind(this))),p.appendChild(this.addNewObject("Bezier Spline","BezierSplineObject",this.addBezierSpline.bind(this))),p.appendChild(this.addNewObject("Uniform B-Spline","UniformBSplineObject",this.addUniformBSplineCurve.bind(this))),p.appendChild(this.addNewObject("Uniform Rational B-Spline","UniformRationBSplineObject",this.addURBSCurve.bind(this)));const f=document.createElement("sl-menu-label");f.textContent="Surfaces",p.appendChild(f),p.appendChild(this.addNewObject("Bezier Patch","BezierPatchObject",this.addBezierPatch.bind(this))),p.appendChild(this.addNewObject("Uniform B-Spline Surface","UniformBSplineSurfaceObject",this.addUniformBSplineSurface.bind(this))),p.appendChild(this.addNewObject("Uniform Rational B-Spline Surface","UniformRationalBSplineSurfaceObject",this.addUniformRationalBSplineSurface.bind(this))),t.appendChild(n)}addNewObject(t,e,i){const n=document.createElement("sl-menu-item");n.classList.add("menu-item"),n.onclick=i;const{name:s,lucide:r}=ze(e),h=document.createElement("sl-icon");h.name=s,r&&(h.library="lucide"),h.slot="prefix";const c=document.createElement("span");return c.textContent=t,n.appendChild(h),n.appendChild(c),n}addLinearCurve(){const t=a.getCreationManager().createBasicLinearCurve();this.selectionChanged(t.getUUID())}addBezierCurve(){const t=a.getCreationManager().createBasicBezierCurve();this.selectionChanged(t.getUUID())}addBezierSpline(){const t=a.getCreationManager().createBasicBezierSpline();this.selectionChanged(t.getUUID())}addUniformBSplineCurve(){const t=a.getCreationManager().createBasicUniformBSpline();this.selectionChanged(t.getUUID())}addURBSCurve(){const t=a.getCreationManager().createBasicURBS();this.selectionChanged(t.getUUID())}addBezierPatch(){const t=a.getCreationManager().createBasicBezierPatch();this.selectionChanged(t.getUUID())}addUniformBSplineSurface(){const t=a.getCreationManager().createBasicUniformBSplineSurface();this.selectionChanged(t.getUUID())}addUniformRationalBSplineSurface(){const t=a.getCreationManager().createBasicUniformRationalBSplineSurface();this.selectionChanged(t.getUUID())}}class so{container;menu;tree;items;hoveredItem;selectedItem;constructor(t,e={}){const{darkMode:i=!1}=e;this.items=new Map,this.hoveredItem=null,this.selectedItem=null;const n=document.createElement("div");n.className="hierarchy",n.style.border="solid 1px var(--sl-color-neutral-300)",n.style.borderRadius="var(--sl-border-radius-small)",n.style.backgroundColor="var(--sl-color-neutral-0)",n.style.height="100%",n.style.overflow="auto",n.style.color="var(--sl-input-color) !important",i&&n.classList.add("sl-theme-dark"),this.menu=new oo(n,this.selectionChangedUUID.bind(this),this.removeSelected.bind(this)),this.tree=document.createElement("sl-tree"),this.tree.selection="leaf",n.appendChild(this.tree),t.appendChild(n),this.container=n,this.tree.addEventListener("sl-selection-change",s=>this.selectionChanged(s)),this.container.addEventListener("mouseup",()=>this.deselect()),y.subscribe("objectAdded",C.GENERAL,s=>this.addObject(s)),y.subscribe("objectRemoved",C.GENERAL,s=>this.removeObject(s)),y.subscribe("objectChanged",C.INSPECTOR,()=>this.updateHierarchy()),y.subscribe("objectNameChanged",C.ALL,()=>this.updateHierarchy()),y.subscribe("inspectorTabChanged",C.INSPECTOR,()=>this.updateHierarchy())}updateHierarchy(){this.items.clear(),this.tree.innerHTML="",a.getObjectManager().getObjects().forEach(t=>{this.addObject(t),t.getUUID()===this.hoveredItem&&this.viewportHover(t.getUUID()),t.getUUID()===this.selectedItem?.dataset.uuid&&this.viewportSelect(t.getUUID())})}addObject(t){const e=document.createElement("sl-tree-item");e.dataset.uuid=t.getUUID(),e.classList.add("hierarchy-item");const i=document.createElement("div");i.style.display="flex",i.style.alignItems="center",i.style.gap="10px";const{name:n,lucide:s}=ze(t.getType()),r=document.createElement("sl-icon");r.name=n,s&&(r.library="lucide"),i.appendChild(r);const h=document.createElement("span");h.textContent=t.getName(),i.appendChild(h),e.appendChild(i);const c=document.createElement("div");c.style.display="flex",c.style.flexDirection="row",c.style.marginRight="20px",e.appendChild(c);const d=document.createElement("div");d.style.marginRight="10px",d.style.display="none",t instanceof ut&&t.getMode()===2&&(d.style.display="");const u=document.createElement("sl-icon");u.name="spline",u.library="lucide",d.appendChild(u),c.appendChild(d);const m=document.createElement("div");m.style.color="#"+t.getColor().getHexString();const g=document.createElement("sl-icon");g.name="circle-fill",m.appendChild(g),c.appendChild(m),e.addEventListener("mouseenter",()=>this.hovered(t.getUUID())),e.addEventListener("mouseleave",()=>this.dehovered(t.getUUID())),e.addEventListener("sl-expand",()=>this.selectionChangedUUID(t.getUUID())),e.addEventListener("sl-collapse",()=>this.selectionChangedUUID(t.getUUID())),this.items.set(t.getUUID(),e),this.tree.appendChild(e)}removeObject(t){const e=this.items.get(t.getUUID());e&&(this.tree.removeChild(e),this.items.delete(t.getUUID()),this.selectedItem=null)}hovered(t){const e=a.getObjectManager().getObjectByUUID(t);e&&(this.hoveredItem=t,a.getSelectionManager().doHover(e))}viewportHover(t){const e=this.items.get(t);e&&(this.hoveredItem=t,e.classList.add("hover"))}dehovered(t){a.getObjectManager().getObjectByUUID(t)&&(this.hoveredItem=null,a.getSelectionManager().doResetHovered())}viewportDehover(){const t=this.hoveredItem;if(!t)return;const e=this.items.get(t);e&&(this.hoveredItem=null,e.classList.remove("hover"))}selectionChangedUUID(t){const e=this.items.get(t);e&&(this.viewportSelect(t),this.selectionChanged(new CustomEvent("sl-selection-change",{detail:{selection:[e]}})))}selectionChanged(t){const e=t.detail.selection[0];if(!e)return;this.selectedItem=e;const i=e.dataset.uuid;if(!i)return;const n=a.getObjectManager().getObjectByUUID(i);n&&a.getSelectionManager().doSelect(n)}removeSelected(){if(!this.selectedItem)return;const t=this.selectedItem.dataset.uuid;if(!t)return;const e=a.getObjectManager().getObjectByUUID(t);e&&(this.selectedItem=null,a.getTransformControls().detach(),this.removeObject(e),a.getObjectManager().removeObject(t))}viewportSelect(t){const e=this.items.get(t);e&&(this.selectedItem&&(this.selectedItem.selected=!1),this.selectedItem=e,e.selected=!0)}deselect(){if(!this.selectedItem)return;this.selectedItem.selected=!1;const t=this.selectedItem.dataset.uuid;if(!t)return;a.getObjectManager().getObjectByUUID(t)&&a.getSelectionManager().doResetSelected(),this.selectedItem=null}viewportDeselect(){this.selectedItem&&(this.selectedItem.selected=!1,this.selectedItem=null)}}class ro{constructor(){const t=new di(a.getRenderer());a.setEffectComposer(t),this.setupRenderPass()}setupRenderPass(){a.getEffectComposer().addPass(new ui(a.getScene(),a.getCamera())),a.getEffectComposer().addPass(new mi)}}class ao{constructor(){}saveSceneToFile(t){const e=new Blob([this.objectsToJSON()],{type:"application/json"}),i=document.createElement("a");i.href=URL.createObjectURL(e),i.download=t,i.click(),URL.revokeObjectURL(i.href),a.getInteractionsManager().toast("Scene saved","Scene saved successfully!","success")}saveSceneToCache(){localStorage.setItem("scene",this.objectsToJSON())}loadSceneFromFile(){const t=document.createElement("input");t.type="file",t.accept=".svis",t.onchange=e=>{try{const n=e.target.files?.item(0);if(n){const s=new FileReader;s.onload=r=>{const h=r.target;this.objectsFromJSON(h.result)},s.readAsText(n)}}catch(i){console.warn("Error while loading JSON file: ",i)}},t.click()}loadSceneFromCache(){const t=localStorage.getItem("scene");t&&this.objectsFromJSON(t,!0)}clearSceneCache(){localStorage.removeItem("scene")}setFlagCache(t,e){localStorage.setItem(t,e.toString())}getFlagCache(t){const e=localStorage.getItem(t);return e?e==="true":!1}objectsToJSON(){return JSON.stringify({"2d":a.dimension2D(),scene:a.getSceneProxy().toJSON(),objects:a.getObjectManager().getObjects().map(t=>t.toJSON())},null,1)}objectsFromJSON(t,e=!1){try{const i=JSON.parse(t);if(i["2d"]==null||i["2d"]==null)throw new Error("Could not find the 2d flag in the JSON file!");if(i.scene==null||i.scene==null)throw new Error("Could not find the scene object in the JSON file!");if(i.objects==null||i.objects==null)throw new Error("Could not find the objects array in the JSON file!");(i["2d"]&&!a.dimension2D()||!i["2d"]&&a.dimension2D())&&a.switchDimension(),a.getSceneProxy().fromJSON(i.scene);for(const n of i.objects)lo.createVisualObject(n);e?i.objects&&i.objects.length>0&&a.getInteractionsManager().toast("Last Session restored","The Last Session was restored successfully!","success"):a.getInteractionsManager().toast("Scene loaded","Scene loaded successfully!","success")}catch(i){console.error("Error while loading JSON file: ",i),a.getInteractionsManager().toast("Error","Error while loading JSON file: <br />"+i,"error")}}}class lo{static createVisualObject(t){const e=t.type;if(!e){console.warn("Object type not found!");return}switch(e){case"LinearCurveObject":a.getCreationManager().createJSONLinearCurve(t);break;case"BezierCurveObject":a.getCreationManager().createJSONBezierCurve(t);break;case"BezierSplineObject":a.getCreationManager().createJSONBezierSpline(t);break;case"UniformBSplineObject":a.getCreationManager().createJSONUniformBSpline(t);break;case"UniformRationBSplineObject":a.getCreationManager().createJSONURBS(t);break;case"BezierPatchObject":a.getCreationManager().createJSONBezierPatch(t);break;case"UniformBSplineSurfaceObject":a.getCreationManager().createJSONUniformBSplineSurface(t);break;case"UniformRationalBSplineSurfaceObject":a.getCreationManager().createJSONUniformRationalBSplineSurface(t);break;default:console.warn(`Unknown object type: ${e}`);break}}}var Rt=(o=>(o.OBJ="OBJ",o.STL="STL",o.GLTF="GLTF",o))(Rt||{});class co{constructor(){}isExportable(t){return t.getExport()!==null}export(t){this.exportDialog(t)}exportDialog(t){const e=document.createElement("sl-dialog");e.label="Export to "+t,e.classList.add("export-dialog");const i=document.createElement("div");i.innerHTML="",e.appendChild(i);const n=a.getSelectionManager().getSelectedObject();if(n!=null)if(this.isExportable(n)){i.innerHTML+=`Selected object <b> ${n.getName()} </b> can be exported to <b> ${t} </b>.<br>`;const d=document.createElement("sl-button");d.variant="primary",d.innerText="Export Object",d.slot="footer",d.onclick=()=>{this.exportObject(n,t),e.hide()},e.appendChild(d)}else i.innerHTML+=`Selected object <b> ${n.getName()} </b> cannot be exported.<br>`;if(this.exportableObjectExists()){i.innerHTML+="Export all objects that can be exported.";const c=document.createElement("sl-button");c.variant="success",c.innerText="Export All",c.slot="footer",c.onclick=()=>{this.exportAll(t),e.hide()},e.appendChild(c)}else i.innerHTML+="No exportable objects available.";const h=document.createElement("sl-button");h.variant="danger",h.innerText="Cancel",h.slot="footer",h.onclick=()=>{e.hide()},e.appendChild(h),document.body.appendChild(e),e.show()}exportableObjectExists(){const t=a.getObjectManager().getObjects();for(const e of t)if(this.isExportable(e))return!0;return!1}exportAll(t){const e=new ai,i=a.getObjectManager().getObjects();for(const n of i)if(this.isExportable(n)){const s=n.getExport();if(s!==null){const r=s();r!==null&&(r.updateMatrixWorld(!0),e.add(r))}}e.children.length>0?this.exportToType(e,"exported_objects",t):console.warn("No exportable objects found.")}exportObject(t,e){const i=t.getExport();if(i===null){console.warn("Export function not available for this object.");return}const n=i();if(n===null){console.warn("Export function returned null mesh.");return}this.exportToType(n,t.getName(),e)}exportToType(t,e,i){switch(i){case"OBJ":this.exportToOBJ(t,e);break;case"STL":this.exportToSTL(t,e);break;case"GLTF":this.exportToGLTF(t,e);break;default:console.warn("Export type not supported.");break}}exportToOBJ(t,e){const n=new gi().parse(t);this.downloadFile(n,e.replaceAll(" ","_")+".obj")}exportToSTL(t,e){const n=new pi().parse(t,{binary:!1});this.downloadFile(n,e.replaceAll(" ","_")+".stl")}exportToGLTF(t,e){new fi().parse(t,n=>{const s=JSON.stringify(n);this.downloadFile(s,e.replaceAll(" ","_")+".gltf")},n=>{console.error("Error exporting to GLTF:",n)})}downloadFile(t,e){const i=new Blob([t],{type:"text/plain"}),n=URL.createObjectURL(i),s=document.createElement("a");s.href=n,s.download=e,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}}class ho{closed=!1;constructor(t){const e=document.createElement("div");e.className="toolbar";const i=document.createElement("div");i.style.display=a.getIOManager().getFlagCache("toolbarClosed")?"none":"flex",i.style.flexDirection="row",i.style.flexWrap="wrap",e.appendChild(i);const n=document.createElement("sl-button-group");n.label="Scene Management",i.appendChild(n);const s=document.createElement("sl-dropdown");n.appendChild(s);const r=document.createElement("sl-button");r.textContent="File",r.slot="trigger",r.size="medium",r.caret=!0,s.appendChild(r);const h=document.createElement("sl-menu");s.appendChild(h);const c=document.createElement("sl-menu-item"),d=document.createElement("sl-icon");d.library="lucide",d.name="save",d.slot="prefix",c.appendChild(d);const u=document.createTextNode("Save");c.appendChild(u),c.value="save",h.appendChild(c);const m=document.createElement("sl-menu-item"),g=document.createElement("sl-icon");g.library="lucide",g.name="file-up",g.slot="prefix",m.appendChild(g);const p=document.createTextNode("Load");m.appendChild(p),m.value="load",h.appendChild(m);const b=document.createElement("sl-menu-item"),f=document.createElement("sl-icon");f.library="lucide",f.name="folder-pen",f.slot="prefix",b.appendChild(f);const P=document.createTextNode("Examples");b.appendChild(P);const v=document.createElement("sl-menu");v.slot="submenu",b.appendChild(v);const E=document.createElement("sl-menu-item"),x=document.createElement("sl-icon");x.name="cup-hot",x.slot="prefix",E.appendChild(x);const M=document.createTextNode("Utah Teapot");E.appendChild(M),E.value="teapot",v.appendChild(E);const S=document.createElement("sl-menu-item"),I=document.createElement("sl-icon");I.name="cup-hot",I.slot="prefix",S.appendChild(I);const N=document.createTextNode("Utah Teapot (Colorful)");S.appendChild(N),S.value="teapotColor",v.appendChild(S),h.appendChild(b);const B=document.createElement("sl-menu-item"),A=document.createElement("sl-icon");A.library="lucide",A.name="folder-output",A.slot="prefix",B.appendChild(A);const pt=document.createTextNode("Export");B.appendChild(pt);const nt=document.createElement("sl-menu");nt.slot="submenu",B.appendChild(nt);const ft=document.createElement("sl-menu-item"),qe=document.createTextNode("OBJ");ft.appendChild(qe),ft.value="exportOBJ",nt.appendChild(ft);const Gt=document.createElement("sl-menu-item"),Ze=document.createTextNode("STL");Gt.appendChild(Ze),Gt.value="exportSTL",nt.appendChild(Gt);const Jt=document.createElement("sl-menu-item"),Qe=document.createTextNode("GLTF");Jt.appendChild(Qe),Jt.value="exportGLTF",nt.appendChild(Jt),h.appendChild(B),h.addEventListener("sl-select",ei=>{switch(ei.detail.item.value){case"save":this.save();break;case"load":this.load();break;case"teapot":this.loadTeapot();break;case"teapotColor":this.loadTeapotColor();break;case"exportOBJ":this.exportOBJ();break;case"exportSTL":this.exportSTL();break;case"exportGLTF":this.exportGLTF();break;default:console.warn("Unknown menu item selected!");break}});const bt=document.createElement("sl-button"),It=document.createElement("sl-icon");It.library="lucide",It.name="list-restart",It.slot="prefix",bt.appendChild(It);const ti=document.createTextNode("Reset Scene");bt.appendChild(ti),bt.size="medium",bt.onclick=()=>this.resetScene(),n.appendChild(bt);const rt=document.createElement("sl-button");rt.textContent=a.dimension2D()?"3D":"2D",rt.size="medium",rt.style.marginLeft="0.5rem",rt.onclick=()=>{a.switchDimension(),rt.textContent=a.dimension2D()?"3D":"2D"},i.appendChild(rt);const at=document.createElement("sl-button"),lt=document.createElement("sl-icon");lt.library="lucide",lt.name="sun",lt.slot="prefix",lt.style.display=a.darkMode()?"block":"none",at.appendChild(lt);const ct=document.createElement("sl-icon");ct.library="lucide",ct.name="moon",ct.slot="prefix",ct.style.display=a.darkMode()?"none":"block",at.appendChild(ct),at.size="medium",at.style.marginLeft="0.5rem",at.onclick=()=>{a.setMode(!a.darkMode()),lt.style.display=a.darkMode()?"block":"none",ct.style.display=a.darkMode()?"none":"block"},i.appendChild(at);const wt=document.createElement("sl-button"),Vt=document.createElement("sl-icon");Vt.library="lucide",Vt.name="chevron-left",Vt.slot="prefix",wt.appendChild(Vt),wt.size="medium",wt.style.marginLeft="0.5rem",wt.onclick=()=>{this.closed=!0,i.style.display="none",ot.style.display="flex",a.getIOManager().setFlagCache("toolbarClosed",!0)},i.appendChild(wt);const ot=document.createElement("sl-button"),Lt=document.createElement("sl-icon");Lt.library="lucide",Lt.name="chevron-right",Lt.slot="prefix",ot.appendChild(Lt),ot.size="medium",ot.style.display=a.getIOManager().getFlagCache("toolbarClosed")?"":"none",ot.onclick=()=>{this.closed=!1,i.style.display="flex",ot.style.display="none",a.getIOManager().setFlagCache("toolbarClosed",!1)},e.appendChild(ot),t.appendChild(e)}save(){const e=new Date().toISOString().split(".")[0].replaceAll("-","_").replace("T","-").replaceAll(":","_");a.getIOManager().saveSceneToFile("SplineVis_"+e+".svis")}load(){a.getIOManager().loadSceneFromFile()}loadTeapot(){Me(2,!1)}loadTeapotColor(){Me(2,!0)}exportOBJ(){a.getExportManager().export(Rt.OBJ)}exportSTL(){a.getExportManager().export(Rt.STL)}exportGLTF(){a.getExportManager().export(Rt.GLTF)}resetScene(){a.getInteractionsManager().confirm("Reset Scene","Are you sure you want to reset the scene?",t=>{t&&(a.getTransformControls().detach(),a.getObjectManager().removeObjects(),a.getIOManager().clearSceneCache(),a.getSceneProxy().reset(),y.notify("sceneReset",C.ALL))})}}class ge{keydowns;static blockedTags=["SL-INPUT","SL-COLOR-PICKER"];dialog;constructor(){this.keydowns=new Map,this.dialog=document.createElement("sl-dialog"),window.addEventListener("keydown",t=>{const e=t.key,i=t.target;ge.blockedTags.includes(i.tagName)||this.keydowns.has(e)&&this.keydowns.get(e)?.forEach(n=>n())}),this.addKeydown("d",()=>{a.switchDimension()})}addKeydown(t,e){this.keydowns.has(t)?this.keydowns.get(t)?.push(e):this.keydowns.set(t,[e])}addKeydowns(t,e){t.forEach(i=>this.addKeydown(i,e))}toast(t,e,i){const n=i==="setting"?"neutral":i==="info"?"primary":i==="error"?"danger":i,s=i==="info"?"info":i==="success"?"circle-check-big":i==="setting"?"settings":i==="warning"?"triangle-alert":i==="error"?"circle-x":"message-circle-warning",r=document.createElement("sl-alert");r.variant=n,r.closable=!1,r.duration=1e3;const h=document.createElement("sl-icon");h.name=s,h.library="lucide",h.slot="icon",r.appendChild(h);const c=document.createElement("span");c.innerHTML="<strong>"+t+"</strong><br />"+e,r.appendChild(c);const d=Object.assign(r);document.body.appendChild(d),r.toast()}confirm(t,e,i){this.dialog.innerHTML="",this.dialog.label=t,this.dialog.classList.add("confirm-dialog"),this.dialog.style.color="var(--sl-input-color)",this.dialog.addEventListener("sl-request-close",h=>{i(!1)});const n=document.createElement("div");n.innerHTML=e,this.dialog.appendChild(n);const s=document.createElement("sl-button");s.variant="success",s.innerText="Confirm",s.slot="footer",s.onclick=()=>{i(!0),this.dialog.hide()},this.dialog.appendChild(s);const r=document.createElement("sl-button");r.variant="danger",r.innerText="Cancel",r.slot="footer",r.onclick=()=>{i(!1),this.dialog.hide()},this.dialog.appendChild(r),a.getApp().appendChild(this.dialog),this.dialog.show()}}class uo extends ${mode;dirRotation;dirIntensity;dirColor;ambIntensity;ambColor;envMap;envIntensity;constructor(){const t=new Ie(new je(0),new He);t.visible=!1,super("SceneProxyObject",t),this.type="SceneProxyObject",this.mode=0,this.dirRotation=0,this.dirIntensity=1,this.dirColor="#ffffff",this.ambIntensity=.2,this.ambColor="#f0f0f0",this.envMap="outdoor",this.envIntensity=1}reset(){this.dirRotation=0,this.dirIntensity=1,this.dirColor="#ffffff",this.ambIntensity=.2,this.ambColor="#f0f0f0",this.envMap="outdoor",this.envIntensity=1}getMode(){return this.mode}setMode(t){this.mode=t}toJSON(){return{name:this.name,type:this.type,position:this.getPosition(),color:this.color.getHex(),mode:this.mode,dirRotation:this.dirRotation,dirIntensity:this.dirIntensity,dirColor:this.dirColor,ambIntensity:this.ambIntensity,ambColor:this.ambColor,envMap:this.envMap,envIntensity:this.envIntensity}}fromJSON(t){this.mode=t.mode,this.dirRotation=t.dirRotation,this.dirIntensity=t.dirIntensity,this.dirColor=t.dirColor,this.ambIntensity=t.ambIntensity,this.ambColor=t.ambColor,this.envMap=t.envMap,this.envIntensity=t.envIntensity}highlight(){}resetHighlight(){}select(){}resetSelect(){}updateColor(t){}dispose(){}}function mo(){Pi("lucide",{resolver:v=>`https://cdn.jsdelivr.net/npm/lucide-static@0.482.0/icons/${v}.svg`});const o=document.getElementById("app");if(!o)return;const t=document.getElementById("viewport");if(!t)return;const e=document.getElementById("inspector");if(!e)return;const i=document.getElementById("hierarchy");if(!i)return;a.setApp(o),Bi(t),Ui(),Ri(t);const n=new Ni;a.setObjectManager(n);const s=new Xi;a.setCreationManager(s);const r=new Yi;a.setSelectionManager(r);const h=new qi;a.setEditManager(h);const c=new ro;a.setEffectManager(c);const d=new ao;a.setIOManager(d),Di();const u=new ge;a.setInteractionsManager(u);const m=new co;a.setExportManager(m);const g=new Zi(t);a.setControls(g);const p=new so(i);a.setHierarchy(p);const b=new no(e);a.setInspector(b);const f=new ho(t);a.setToolbar(f);const P=new uo;a.setSceneProxy(P),a.getIOManager().loadSceneFromCache(),document.addEventListener("DOMContentLoaded",()=>{y.notify("start",C.ALL)}),Ye()}function Ye(){requestAnimationFrame(Ye),a.getEffectComposer().render(),a.getOrbitControls().update(),a.getSelectionManager().update()}mo();
