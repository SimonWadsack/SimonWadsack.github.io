/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const fs="174";const gs="",Z="srgb",Ui="srgb-linear",Oi="linear",qe="srgb";class Ue{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return i===void 0?!1:i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){const i=this._listeners;if(i===void 0)return;const s=i[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const i=e[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,o=s.length;n<o;n++)s[n].call(this,t);t.target=null}}}const I=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Hi=1234567;const Qt=Math.PI/180,De=180/Math.PI;function qt(){const c=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(I[c&255]+I[c>>8&255]+I[c>>16&255]+I[c>>24&255]+"-"+I[t&255]+I[t>>8&255]+"-"+I[t>>16&15|64]+I[t>>24&255]+"-"+I[e&63|128]+I[e>>8&255]+"-"+I[e>>16&255]+I[e>>24&255]+I[i&255]+I[i>>8&255]+I[i>>16&255]+I[i>>24&255]).toLowerCase()}function z(c,t,e){return Math.max(t,Math.min(e,c))}function vi(c,t){return(c%t+t)%t}function Ts(c,t,e,i,s){return i+(c-t)*(s-i)/(e-t)}function _s(c,t,e){return c!==t?(e-c)/(t-c):0}function te(c,t,e){return(1-e)*c+e*t}function Fs(c,t,e,i){return te(c,t,1-Math.exp(-e*i))}function Bs(c,t=1){return t-Math.abs(vi(c,t*2)-t)}function Rs(c,t,e){return c<=t?0:c>=e?1:(c=(c-t)/(e-t),c*c*(3-2*c))}function Ds(c,t,e){return c<=t?0:c>=e?1:(c=(c-t)/(e-t),c*c*c*(c*(c*6-15)+10))}function ks(c,t){return c+Math.floor(Math.random()*(t-c+1))}function Is(c,t){return c+Math.random()*(t-c)}function Vs(c){return c*(.5-Math.random())}function Us(c){c!==void 0&&(Hi=c);let t=Hi+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Os(c){return c*Qt}function Hs(c){return c*De}function Ns(c){return(c&c-1)===0&&c!==0}function Ws(c){return Math.pow(2,Math.ceil(Math.log(c)/Math.LN2))}function Ls(c){return Math.pow(2,Math.floor(Math.log(c)/Math.LN2))}function js(c,t,e,i,s){const n=Math.cos,o=Math.sin,a=n(e/2),r=o(e/2),h=n((t+i)/2),l=o((t+i)/2),u=n((t-i)/2),d=o((t-i)/2),m=n((i-t)/2),p=o((i-t)/2);switch(s){case"XYX":c.set(a*l,r*u,r*d,a*h);break;case"YZY":c.set(r*d,a*l,r*u,a*h);break;case"ZXZ":c.set(r*u,r*d,a*l,a*h);break;case"XZX":c.set(a*l,r*p,r*m,a*h);break;case"YXY":c.set(r*m,a*l,r*p,a*h);break;case"ZYZ":c.set(r*p,r*m,a*l,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Ot(c,t){switch(t.constructor){case Float32Array:return c;case Uint32Array:return c/4294967295;case Uint16Array:return c/65535;case Uint8Array:return c/255;case Int32Array:return Math.max(c/2147483647,-1);case Int16Array:return Math.max(c/32767,-1);case Int8Array:return Math.max(c/127,-1);default:throw new Error("Invalid component type.")}}function N(c,t){switch(t.constructor){case Float32Array:return c;case Uint32Array:return Math.round(c*4294967295);case Uint16Array:return Math.round(c*65535);case Uint8Array:return Math.round(c*255);case Int32Array:return Math.round(c*2147483647);case Int16Array:return Math.round(c*32767);case Int8Array:return Math.round(c*127);default:throw new Error("Invalid component type.")}}const Gs={DEG2RAD:Qt,RAD2DEG:De,generateUUID:qt,clamp:z,euclideanModulo:vi,mapLinear:Ts,inverseLerp:_s,lerp:te,damp:Fs,pingpong:Bs,smoothstep:Rs,smootherstep:Ds,randInt:ks,randFloat:Is,randFloatSpread:Vs,seededRandom:Us,degToRad:Os,radToDeg:Hs,isPowerOfTwo:Ns,ceilPowerOfTwo:Ws,floorPowerOfTwo:Ls,setQuaternionFromProperEuler:js,normalize:N,denormalize:Ot};class E{constructor(t=0,e=0){E.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=z(this.x,t.x,e.x),this.y=z(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=z(this.x,t,e),this.y=z(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(z(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(z(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,o=this.y-t.y;return this.x=n*i-o*s+t.x,this.y=n*s+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class tt{constructor(t,e,i,s,n,o,a,r,h){tt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,o,a,r,h)}set(t,e,i,s,n,o,a,r,h){const l=this.elements;return l[0]=t,l[1]=s,l[2]=a,l[3]=e,l[4]=n,l[5]=r,l[6]=i,l[7]=o,l[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,o=i[0],a=i[3],r=i[6],h=i[1],l=i[4],u=i[7],d=i[2],m=i[5],p=i[8],f=s[0],y=s[3],g=s[6],b=s[1],M=s[4],w=s[7],v=s[2],C=s[5],P=s[8];return n[0]=o*f+a*b+r*v,n[3]=o*y+a*M+r*C,n[6]=o*g+a*w+r*P,n[1]=h*f+l*b+u*v,n[4]=h*y+l*M+u*C,n[7]=h*g+l*w+u*P,n[2]=d*f+m*b+p*v,n[5]=d*y+m*M+p*C,n[8]=d*g+m*w+p*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],a=t[5],r=t[6],h=t[7],l=t[8];return e*o*l-e*a*h-i*n*l+i*a*r+s*n*h-s*o*r}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],a=t[5],r=t[6],h=t[7],l=t[8],u=l*o-a*h,d=a*r-l*n,m=h*n-o*r,p=e*u+i*d+s*m;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=u*f,t[1]=(s*h-l*i)*f,t[2]=(a*i-s*o)*f,t[3]=d*f,t[4]=(l*e-s*r)*f,t[5]=(s*n-a*e)*f,t[6]=m*f,t[7]=(i*r-h*e)*f,t[8]=(o*e-i*n)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,o,a){const r=Math.cos(n),h=Math.sin(n);return this.set(i*r,i*h,-i*(r*o+h*a)+o+t,-s*h,s*r,-s*(-h*o+r*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Xe.makeScale(t,e)),this}rotate(t){return this.premultiply(Xe.makeRotation(-t)),this}translate(t,e){return this.premultiply(Xe.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Xe=new tt;function qs(c){for(let t=c.length-1;t>=0;--t)if(c[t]>=65535)return!0;return!1}function Ni(c){return document.createElementNS("http://www.w3.org/1999/xhtml",c)}const Wi=new tt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Li=new tt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Xs(){const c={enabled:!0,workingColorSpace:Ui,spaces:{},convert:function(s,n,o){return this.enabled===!1||n===o||!n||!o||(this.spaces[n].transfer===qe&&(s.r=mt(s.r),s.g=mt(s.g),s.b=mt(s.b)),this.spaces[n].primaries!==this.spaces[o].primaries&&(s.applyMatrix3(this.spaces[n].toXYZ),s.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===qe&&(s.r=Ht(s.r),s.g=Ht(s.g),s.b=Ht(s.b))),s},fromWorkingColorSpace:function(s,n){return this.convert(s,this.workingColorSpace,n)},toWorkingColorSpace:function(s,n){return this.convert(s,n,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===gs?Oi:this.spaces[s].transfer},getLuminanceCoefficients:function(s,n=this.workingColorSpace){return s.fromArray(this.spaces[n].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,n,o){return s.copy(this.spaces[n].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],i=[.3127,.329];return c.define({[Ui]:{primaries:t,whitePoint:i,transfer:Oi,toXYZ:Wi,fromXYZ:Li,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Z},outputColorSpaceConfig:{drawingBufferColorSpace:Z}},[Z]:{primaries:t,whitePoint:i,transfer:qe,toXYZ:Wi,fromXYZ:Li,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Z}}}),c}const q=Xs();function mt(c){return c<.04045?c*.0773993808:Math.pow(c*.9478672986+.0521327014,2.4)}function Ht(c){return c<.0031308?c*12.92:1.055*Math.pow(c,.41666)-.055}let At;class Js{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{At===void 0&&(At=Ni("canvas")),At.width=t.width,At.height=t.height;const i=At.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=At}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Ni("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let o=0;o<n.length;o++)n[o]=mt(n[o]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(mt(e[i]/255)*255):e[i]=mt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Ys=0;class Zs{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ys++}),this.uuid=qt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?n.push(Je(s[o].image)):n.push(Je(s[o]))}else n=Je(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function Je(c){return typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&c instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&c instanceof ImageBitmap?Js.getDataURL(c):c.data?{data:Array.from(c.data),width:c.width,height:c.height,type:c.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ks=0;class rt extends Ue{constructor(t=rt.DEFAULT_IMAGE,e=rt.DEFAULT_MAPPING,i=1001,s=1001,n=1006,o=1008,a=1023,r=1009,h=rt.DEFAULT_ANISOTROPY,l=gs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ks++}),this.uuid=qt(),this.name="",this.source=new Zs(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=r,this.offset=new E(0,0),this.repeat=new E(1,1),this.center=new E(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new tt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}rt.DEFAULT_IMAGE=null;rt.DEFAULT_MAPPING=300;rt.DEFAULT_ANISOTROPY=1;class O{constructor(t=0,e=0,i=0,s=1){O.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*s+o[12]*n,this.y=o[1]*e+o[5]*i+o[9]*s+o[13]*n,this.z=o[2]*e+o[6]*i+o[10]*s+o[14]*n,this.w=o[3]*e+o[7]*i+o[11]*s+o[15]*n,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,n;const r=t.elements,h=r[0],l=r[4],u=r[8],d=r[1],m=r[5],p=r[9],f=r[2],y=r[6],g=r[10];if(Math.abs(l-d)<.01&&Math.abs(u-f)<.01&&Math.abs(p-y)<.01){if(Math.abs(l+d)<.1&&Math.abs(u+f)<.1&&Math.abs(p+y)<.1&&Math.abs(h+m+g-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const M=(h+1)/2,w=(m+1)/2,v=(g+1)/2,C=(l+d)/4,P=(u+f)/4,S=(p+y)/4;return M>w&&M>v?M<.01?(i=0,s=.707106781,n=.707106781):(i=Math.sqrt(M),s=C/i,n=P/i):w>v?w<.01?(i=.707106781,s=0,n=.707106781):(s=Math.sqrt(w),i=C/s,n=S/s):v<.01?(i=.707106781,s=.707106781,n=0):(n=Math.sqrt(v),i=P/n,s=S/n),this.set(i,s,n,e),this}let b=Math.sqrt((y-p)*(y-p)+(u-f)*(u-f)+(d-l)*(d-l));return Math.abs(b)<.001&&(b=1),this.x=(y-p)/b,this.y=(u-f)/b,this.z=(d-l)/b,this.w=Math.acos((h+m+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=z(this.x,t.x,e.x),this.y=z(this.y,t.y,e.y),this.z=z(this.z,t.z,e.z),this.w=z(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=z(this.x,t,e),this.y=z(this.y,t,e),this.z=z(this.z,t,e),this.w=z(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(z(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class se{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,o,a){let r=i[s+0],h=i[s+1],l=i[s+2],u=i[s+3];const d=n[o+0],m=n[o+1],p=n[o+2],f=n[o+3];if(a===0){t[e+0]=r,t[e+1]=h,t[e+2]=l,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=m,t[e+2]=p,t[e+3]=f;return}if(u!==f||r!==d||h!==m||l!==p){let y=1-a;const g=r*d+h*m+l*p+u*f,b=g>=0?1:-1,M=1-g*g;if(M>Number.EPSILON){const v=Math.sqrt(M),C=Math.atan2(v,g*b);y=Math.sin(y*C)/v,a=Math.sin(a*C)/v}const w=a*b;if(r=r*y+d*w,h=h*y+m*w,l=l*y+p*w,u=u*y+f*w,y===1-a){const v=1/Math.sqrt(r*r+h*h+l*l+u*u);r*=v,h*=v,l*=v,u*=v}}t[e]=r,t[e+1]=h,t[e+2]=l,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,s,n,o){const a=i[s],r=i[s+1],h=i[s+2],l=i[s+3],u=n[o],d=n[o+1],m=n[o+2],p=n[o+3];return t[e]=a*p+l*u+r*m-h*d,t[e+1]=r*p+l*d+h*u-a*m,t[e+2]=h*p+l*m+a*d-r*u,t[e+3]=l*p-a*u-r*d-h*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,o=t._order,a=Math.cos,r=Math.sin,h=a(i/2),l=a(s/2),u=a(n/2),d=r(i/2),m=r(s/2),p=r(n/2);switch(o){case"XYZ":this._x=d*l*u+h*m*p,this._y=h*m*u-d*l*p,this._z=h*l*p+d*m*u,this._w=h*l*u-d*m*p;break;case"YXZ":this._x=d*l*u+h*m*p,this._y=h*m*u-d*l*p,this._z=h*l*p-d*m*u,this._w=h*l*u+d*m*p;break;case"ZXY":this._x=d*l*u-h*m*p,this._y=h*m*u+d*l*p,this._z=h*l*p+d*m*u,this._w=h*l*u-d*m*p;break;case"ZYX":this._x=d*l*u-h*m*p,this._y=h*m*u+d*l*p,this._z=h*l*p-d*m*u,this._w=h*l*u+d*m*p;break;case"YZX":this._x=d*l*u+h*m*p,this._y=h*m*u+d*l*p,this._z=h*l*p-d*m*u,this._w=h*l*u-d*m*p;break;case"XZY":this._x=d*l*u-h*m*p,this._y=h*m*u-d*l*p,this._z=h*l*p+d*m*u,this._w=h*l*u+d*m*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],o=e[1],a=e[5],r=e[9],h=e[2],l=e[6],u=e[10],d=i+a+u;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(l-r)*m,this._y=(n-h)*m,this._z=(o-s)*m}else if(i>a&&i>u){const m=2*Math.sqrt(1+i-a-u);this._w=(l-r)/m,this._x=.25*m,this._y=(s+o)/m,this._z=(n+h)/m}else if(a>u){const m=2*Math.sqrt(1+a-i-u);this._w=(n-h)/m,this._x=(s+o)/m,this._y=.25*m,this._z=(r+l)/m}else{const m=2*Math.sqrt(1+u-i-a);this._w=(o-s)/m,this._x=(n+h)/m,this._y=(r+l)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(z(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,o=t._w,a=e._x,r=e._y,h=e._z,l=e._w;return this._x=i*l+o*a+s*h-n*r,this._y=s*l+o*r+n*a-i*h,this._z=n*l+o*h+i*r-s*a,this._w=o*l-i*a-s*r-n*h,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,o=this._w;let a=o*t._w+i*t._x+s*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=s,this._z=n,this;const r=1-a*a;if(r<=Number.EPSILON){const m=1-e;return this._w=m*o+e*this._w,this._x=m*i+e*this._x,this._y=m*s+e*this._y,this._z=m*n+e*this._z,this.normalize(),this}const h=Math.sqrt(r),l=Math.atan2(h,a),u=Math.sin((1-e)*l)/h,d=Math.sin(e*l)/h;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=s*u+this._y*d,this._z=n*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ji.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ji.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,o=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*o,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*o,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*o,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,a=t.z,r=t.w,h=2*(o*s-a*i),l=2*(a*e-n*s),u=2*(n*i-o*e);return this.x=e+r*h+o*u-a*l,this.y=i+r*l+a*h-n*u,this.z=s+r*u+n*l-o*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=z(this.x,t.x,e.x),this.y=z(this.y,t.y,e.y),this.z=z(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=z(this.x,t,e),this.y=z(this.y,t,e),this.z=z(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(z(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,o=e.x,a=e.y,r=e.z;return this.x=s*r-n*a,this.y=n*o-i*r,this.z=i*a-s*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ye.copy(this).projectOnVector(t),this.sub(Ye)}reflect(t){return this.sub(Ye.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(z(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ye=new x,ji=new se;class ne{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(X.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(X.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=X.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=n.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,X):X.fromBufferAttribute(n,o),X.applyMatrix4(t.matrixWorld),this.expandByPoint(X);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),me.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),me.copy(i.boundingBox)),me.applyMatrix4(t.matrixWorld),this.union(me)}const s=t.children;for(let n=0,o=s.length;n<o;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,X),X.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Jt),pe.subVectors(this.max,Jt),Tt.subVectors(t.a,Jt),_t.subVectors(t.b,Jt),Ft.subVectors(t.c,Jt),gt.subVectors(_t,Tt),yt.subVectors(Ft,_t),Pt.subVectors(Tt,Ft);let e=[0,-gt.z,gt.y,0,-yt.z,yt.y,0,-Pt.z,Pt.y,gt.z,0,-gt.x,yt.z,0,-yt.x,Pt.z,0,-Pt.x,-gt.y,gt.x,0,-yt.y,yt.x,0,-Pt.y,Pt.x,0];return!Ze(e,Tt,_t,Ft,pe)||(e=[1,0,0,0,1,0,0,0,1],!Ze(e,Tt,_t,Ft,pe))?!1:(fe.crossVectors(gt,yt),e=[fe.x,fe.y,fe.z],Ze(e,Tt,_t,Ft,pe))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,X).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(X).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(at[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),at[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),at[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),at[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),at[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),at[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),at[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),at[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(at),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const at=[new x,new x,new x,new x,new x,new x,new x,new x],X=new x,me=new ne,Tt=new x,_t=new x,Ft=new x,gt=new x,yt=new x,Pt=new x,Jt=new x,pe=new x,fe=new x,St=new x;function Ze(c,t,e,i,s){for(let n=0,o=c.length-3;n<=o;n+=3){St.fromArray(c,n);const a=s.x*Math.abs(St.x)+s.y*Math.abs(St.y)+s.z*Math.abs(St.z),r=t.dot(St),h=e.dot(St),l=i.dot(St);if(Math.max(-Math.max(r,h,l),Math.min(r,h,l))>a)return!1}return!0}const $s=new ne,Yt=new x,Ke=new x;class Ci{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):$s.setFromPoints(t).getCenter(i);let s=0;for(let n=0,o=t.length;n<o;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Yt.subVectors(t,this.center);const e=Yt.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(Yt,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ke.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Yt.copy(t.center).add(Ke)),this.expandByPoint(Yt.copy(t.center).sub(Ke))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ht=new x,$e=new x,ge=new x,xt=new x,Qe=new x,ye=new x,ti=new x;class Oe{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ht)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ht.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ht.copy(this.origin).addScaledVector(this.direction,e),ht.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){$e.copy(t).add(e).multiplyScalar(.5),ge.copy(e).sub(t).normalize(),xt.copy(this.origin).sub($e);const n=t.distanceTo(e)*.5,o=-this.direction.dot(ge),a=xt.dot(this.direction),r=-xt.dot(ge),h=xt.lengthSq(),l=Math.abs(1-o*o);let u,d,m,p;if(l>0)if(u=o*r-a,d=o*a-r,p=n*l,u>=0)if(d>=-p)if(d<=p){const f=1/l;u*=f,d*=f,m=u*(u+o*d+2*a)+d*(o*u+d+2*r)+h}else d=n,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*r)+h;else d=-n,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*r)+h;else d<=-p?(u=Math.max(0,-(-o*n+a)),d=u>0?-n:Math.min(Math.max(-n,-r),n),m=-u*u+d*(d+2*r)+h):d<=p?(u=0,d=Math.min(Math.max(-n,-r),n),m=d*(d+2*r)+h):(u=Math.max(0,-(o*n+a)),d=u>0?n:Math.min(Math.max(-n,-r),n),m=-u*u+d*(d+2*r)+h);else d=o>0?-n:n,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*r)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy($e).addScaledVector(ge,d),m}intersectSphere(t,e){ht.subVectors(t.center,this.origin);const i=ht.dot(this.direction),s=ht.dot(ht)-i*i,n=t.radius*t.radius;if(s>n)return null;const o=Math.sqrt(n-s),a=i-o,r=i+o;return r<0?null:a<0?this.at(r,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,o,a,r;const h=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,d=this.origin;return h>=0?(i=(t.min.x-d.x)*h,s=(t.max.x-d.x)*h):(i=(t.max.x-d.x)*h,s=(t.min.x-d.x)*h),l>=0?(n=(t.min.y-d.y)*l,o=(t.max.y-d.y)*l):(n=(t.max.y-d.y)*l,o=(t.min.y-d.y)*l),i>o||n>s||((n>i||isNaN(i))&&(i=n),(o<s||isNaN(s))&&(s=o),u>=0?(a=(t.min.z-d.z)*u,r=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,r=(t.min.z-d.z)*u),i>r||a>s)||((a>i||i!==i)&&(i=a),(r<s||s!==s)&&(s=r),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,ht)!==null}intersectTriangle(t,e,i,s,n){Qe.subVectors(e,t),ye.subVectors(i,t),ti.crossVectors(Qe,ye);let o=this.direction.dot(ti),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;xt.subVectors(this.origin,t);const r=a*this.direction.dot(ye.crossVectors(xt,ye));if(r<0)return null;const h=a*this.direction.dot(Qe.cross(xt));if(h<0||r+h>o)return null;const l=-a*xt.dot(ti);return l<0?null:this.at(l/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class H{constructor(t,e,i,s,n,o,a,r,h,l,u,d,m,p,f,y){H.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,o,a,r,h,l,u,d,m,p,f,y)}set(t,e,i,s,n,o,a,r,h,l,u,d,m,p,f,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=o,g[9]=a,g[13]=r,g[2]=h,g[6]=l,g[10]=u,g[14]=d,g[3]=m,g[7]=p,g[11]=f,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new H().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Bt.setFromMatrixColumn(t,0).length(),n=1/Bt.setFromMatrixColumn(t,1).length(),o=1/Bt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,o=Math.cos(i),a=Math.sin(i),r=Math.cos(s),h=Math.sin(s),l=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const d=o*l,m=o*u,p=a*l,f=a*u;e[0]=r*l,e[4]=-r*u,e[8]=h,e[1]=m+p*h,e[5]=d-f*h,e[9]=-a*r,e[2]=f-d*h,e[6]=p+m*h,e[10]=o*r}else if(t.order==="YXZ"){const d=r*l,m=r*u,p=h*l,f=h*u;e[0]=d+f*a,e[4]=p*a-m,e[8]=o*h,e[1]=o*u,e[5]=o*l,e[9]=-a,e[2]=m*a-p,e[6]=f+d*a,e[10]=o*r}else if(t.order==="ZXY"){const d=r*l,m=r*u,p=h*l,f=h*u;e[0]=d-f*a,e[4]=-o*u,e[8]=p+m*a,e[1]=m+p*a,e[5]=o*l,e[9]=f-d*a,e[2]=-o*h,e[6]=a,e[10]=o*r}else if(t.order==="ZYX"){const d=o*l,m=o*u,p=a*l,f=a*u;e[0]=r*l,e[4]=p*h-m,e[8]=d*h+f,e[1]=r*u,e[5]=f*h+d,e[9]=m*h-p,e[2]=-h,e[6]=a*r,e[10]=o*r}else if(t.order==="YZX"){const d=o*r,m=o*h,p=a*r,f=a*h;e[0]=r*l,e[4]=f-d*u,e[8]=p*u+m,e[1]=u,e[5]=o*l,e[9]=-a*l,e[2]=-h*l,e[6]=m*u+p,e[10]=d-f*u}else if(t.order==="XZY"){const d=o*r,m=o*h,p=a*r,f=a*h;e[0]=r*l,e[4]=-u,e[8]=h*l,e[1]=d*u+f,e[5]=o*l,e[9]=m*u-p,e[2]=p*u-m,e[6]=a*l,e[10]=f*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Qs,t,tn)}lookAt(t,e,i){const s=this.elements;return W.subVectors(t,e),W.lengthSq()===0&&(W.z=1),W.normalize(),wt.crossVectors(i,W),wt.lengthSq()===0&&(Math.abs(i.z)===1?W.x+=1e-4:W.z+=1e-4,W.normalize(),wt.crossVectors(i,W)),wt.normalize(),xe.crossVectors(W,wt),s[0]=wt.x,s[4]=xe.x,s[8]=W.x,s[1]=wt.y,s[5]=xe.y,s[9]=W.y,s[2]=wt.z,s[6]=xe.z,s[10]=W.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,o=i[0],a=i[4],r=i[8],h=i[12],l=i[1],u=i[5],d=i[9],m=i[13],p=i[2],f=i[6],y=i[10],g=i[14],b=i[3],M=i[7],w=i[11],v=i[15],C=s[0],P=s[4],S=s[8],_=s[12],F=s[1],R=s[5],et=s[9],k=s[13],ft=s[2],re=s[6],ae=s[10],he=s[14],le=s[3],ce=s[7],ue=s[11],de=s[15];return n[0]=o*C+a*F+r*ft+h*le,n[4]=o*P+a*R+r*re+h*ce,n[8]=o*S+a*et+r*ae+h*ue,n[12]=o*_+a*k+r*he+h*de,n[1]=l*C+u*F+d*ft+m*le,n[5]=l*P+u*R+d*re+m*ce,n[9]=l*S+u*et+d*ae+m*ue,n[13]=l*_+u*k+d*he+m*de,n[2]=p*C+f*F+y*ft+g*le,n[6]=p*P+f*R+y*re+g*ce,n[10]=p*S+f*et+y*ae+g*ue,n[14]=p*_+f*k+y*he+g*de,n[3]=b*C+M*F+w*ft+v*le,n[7]=b*P+M*R+w*re+v*ce,n[11]=b*S+M*et+w*ae+v*ue,n[15]=b*_+M*k+w*he+v*de,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],o=t[1],a=t[5],r=t[9],h=t[13],l=t[2],u=t[6],d=t[10],m=t[14],p=t[3],f=t[7],y=t[11],g=t[15];return p*(+n*r*u-s*h*u-n*a*d+i*h*d+s*a*m-i*r*m)+f*(+e*r*m-e*h*d+n*o*d-s*o*m+s*h*l-n*r*l)+y*(+e*h*u-e*a*m-n*o*u+i*o*m+n*a*l-i*h*l)+g*(-s*a*l-e*r*u+e*a*d+s*o*u-i*o*d+i*r*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],a=t[5],r=t[6],h=t[7],l=t[8],u=t[9],d=t[10],m=t[11],p=t[12],f=t[13],y=t[14],g=t[15],b=u*y*h-f*d*h+f*r*m-a*y*m-u*r*g+a*d*g,M=p*d*h-l*y*h-p*r*m+o*y*m+l*r*g-o*d*g,w=l*f*h-p*u*h+p*a*m-o*f*m-l*a*g+o*u*g,v=p*u*r-l*f*r-p*a*d+o*f*d+l*a*y-o*u*y,C=e*b+i*M+s*w+n*v;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/C;return t[0]=b*P,t[1]=(f*d*n-u*y*n-f*s*m+i*y*m+u*s*g-i*d*g)*P,t[2]=(a*y*n-f*r*n+f*s*h-i*y*h-a*s*g+i*r*g)*P,t[3]=(u*r*n-a*d*n-u*s*h+i*d*h+a*s*m-i*r*m)*P,t[4]=M*P,t[5]=(l*y*n-p*d*n+p*s*m-e*y*m-l*s*g+e*d*g)*P,t[6]=(p*r*n-o*y*n-p*s*h+e*y*h+o*s*g-e*r*g)*P,t[7]=(o*d*n-l*r*n+l*s*h-e*d*h-o*s*m+e*r*m)*P,t[8]=w*P,t[9]=(p*u*n-l*f*n-p*i*m+e*f*m+l*i*g-e*u*g)*P,t[10]=(o*f*n-p*a*n+p*i*h-e*f*h-o*i*g+e*a*g)*P,t[11]=(l*a*n-o*u*n-l*i*h+e*u*h+o*i*m-e*a*m)*P,t[12]=v*P,t[13]=(l*f*s-p*u*s+p*i*d-e*f*d-l*i*y+e*u*y)*P,t[14]=(p*a*s-o*f*s-p*i*r+e*f*r+o*i*y-e*a*y)*P,t[15]=(o*u*s-l*a*s+l*i*r-e*u*r-o*i*d+e*a*d)*P,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,o=t.x,a=t.y,r=t.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-s*r,h*r+s*a,0,h*a+s*r,l*a+i,l*r-s*o,0,h*r-s*a,l*r+s*o,n*r*r+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,o){return this.set(1,i,n,0,t,1,o,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,o=e._y,a=e._z,r=e._w,h=n+n,l=o+o,u=a+a,d=n*h,m=n*l,p=n*u,f=o*l,y=o*u,g=a*u,b=r*h,M=r*l,w=r*u,v=i.x,C=i.y,P=i.z;return s[0]=(1-(f+g))*v,s[1]=(m+w)*v,s[2]=(p-M)*v,s[3]=0,s[4]=(m-w)*C,s[5]=(1-(d+g))*C,s[6]=(y+b)*C,s[7]=0,s[8]=(p+M)*P,s[9]=(y-b)*P,s[10]=(1-(d+f))*P,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Bt.set(s[0],s[1],s[2]).length();const o=Bt.set(s[4],s[5],s[6]).length(),a=Bt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],J.copy(this);const h=1/n,l=1/o,u=1/a;return J.elements[0]*=h,J.elements[1]*=h,J.elements[2]*=h,J.elements[4]*=l,J.elements[5]*=l,J.elements[6]*=l,J.elements[8]*=u,J.elements[9]*=u,J.elements[10]*=u,e.setFromRotationMatrix(J),i.x=n,i.y=o,i.z=a,this}makePerspective(t,e,i,s,n,o,a=2e3){const r=this.elements,h=2*n/(e-t),l=2*n/(i-s),u=(e+t)/(e-t),d=(i+s)/(i-s);let m,p;if(a===2e3)m=-(o+n)/(o-n),p=-2*o*n/(o-n);else if(a===2001)m=-o/(o-n),p=-o*n/(o-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return r[0]=h,r[4]=0,r[8]=u,r[12]=0,r[1]=0,r[5]=l,r[9]=d,r[13]=0,r[2]=0,r[6]=0,r[10]=m,r[14]=p,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,e,i,s,n,o,a=2e3){const r=this.elements,h=1/(e-t),l=1/(i-s),u=1/(o-n),d=(e+t)*h,m=(i+s)*l;let p,f;if(a===2e3)p=(o+n)*u,f=-2*u;else if(a===2001)p=n*u,f=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return r[0]=2*h,r[4]=0,r[8]=0,r[12]=-d,r[1]=0,r[5]=2*l,r[9]=0,r[13]=-m,r[2]=0,r[6]=0,r[10]=f,r[14]=-p,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Bt=new x,J=new H,Qs=new x(0,0,0),tn=new x(1,1,1),wt=new x,xe=new x,W=new x,Gi=new H,qi=new se;class Xt{constructor(t=0,e=0,i=0,s=Xt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],o=s[4],a=s[8],r=s[1],h=s[5],l=s[9],u=s[2],d=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(z(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,m),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-z(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(r,h)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(z(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(r,n));break;case"ZYX":this._y=Math.asin(-z(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(r,n)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(z(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-z(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Gi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Gi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return qi.setFromEuler(this),this.setFromQuaternion(qi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Xt.DEFAULT_ORDER="XYZ";class ys{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let en=0;const Xi=new x,Rt=new se,lt=new H,we=new x,Zt=new x,sn=new x,nn=new se,Ji=new x(1,0,0),Yi=new x(0,1,0),Zi=new x(0,0,1),Ki={type:"added"},on={type:"removed"},Dt={type:"childadded",child:null},ei={type:"childremoved",child:null};class Q extends Ue{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:en++}),this.uuid=qt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Q.DEFAULT_UP.clone();const t=new x,e=new Xt,i=new se,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function o(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new H},normalMatrix:{value:new tt}}),this.matrix=new H,this.matrixWorld=new H,this.matrixAutoUpdate=Q.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Q.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ys,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Rt.setFromAxisAngle(t,e),this.quaternion.multiply(Rt),this}rotateOnWorldAxis(t,e){return Rt.setFromAxisAngle(t,e),this.quaternion.premultiply(Rt),this}rotateX(t){return this.rotateOnAxis(Ji,t)}rotateY(t){return this.rotateOnAxis(Yi,t)}rotateZ(t){return this.rotateOnAxis(Zi,t)}translateOnAxis(t,e){return Xi.copy(t).applyQuaternion(this.quaternion),this.position.add(Xi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ji,t)}translateY(t){return this.translateOnAxis(Yi,t)}translateZ(t){return this.translateOnAxis(Zi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(lt.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?we.copy(t):we.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Zt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?lt.lookAt(Zt,we,this.up):lt.lookAt(we,Zt,this.up),this.quaternion.setFromRotationMatrix(lt),s&&(lt.extractRotation(s.matrixWorld),Rt.setFromRotationMatrix(lt),this.quaternion.premultiply(Rt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Ki),Dt.child=t,this.dispatchEvent(Dt),Dt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(on),ei.child=t,this.dispatchEvent(ei),ei.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),lt.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),lt.multiply(t.parent.matrixWorld)),t.applyMatrix4(lt),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Ki),Dt.child=t,this.dispatchEvent(Dt),Dt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,o=s.length;n<o;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zt,t,sn),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zt,nn,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let n=0,o=s.length;n<o;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(a,r){return a[r.uuid]===void 0&&(a[r.uuid]=r.toJSON(t)),r.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const r=a.shapes;if(Array.isArray(r))for(let h=0,l=r.length;h<l;h++){const u=r[h];n(t.shapes,u)}else n(t.shapes,r)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let r=0,h=this.material.length;r<h;r++)a.push(n(t.materials,this.material[r]));s.material=a}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const r=this.animations[a];s.animations.push(n(t.animations,r))}}if(e){const a=o(t.geometries),r=o(t.materials),h=o(t.textures),l=o(t.images),u=o(t.shapes),d=o(t.skeletons),m=o(t.animations),p=o(t.nodes);a.length>0&&(i.geometries=a),r.length>0&&(i.materials=r),h.length>0&&(i.textures=h),l.length>0&&(i.images=l),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),m.length>0&&(i.animations=m),p.length>0&&(i.nodes=p)}return i.object=s,i;function o(a){const r=[];for(const h in a){const l=a[h];delete l.metadata,r.push(l)}return r}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}Q.DEFAULT_UP=new x(0,1,0);Q.DEFAULT_MATRIX_AUTO_UPDATE=!0;Q.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Y=new x,ct=new x,ii=new x,ut=new x,kt=new x,It=new x,$i=new x,si=new x,ni=new x,oi=new x,ri=new O,ai=new O,hi=new O;class K{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),Y.subVectors(t,e),s.cross(Y);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){Y.subVectors(s,e),ct.subVectors(i,e),ii.subVectors(t,e);const o=Y.dot(Y),a=Y.dot(ct),r=Y.dot(ii),h=ct.dot(ct),l=ct.dot(ii),u=o*h-a*a;if(u===0)return n.set(0,0,0),null;const d=1/u,m=(h*r-a*l)*d,p=(o*l-a*r)*d;return n.set(1-m-p,p,m)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,ut)===null?!1:ut.x>=0&&ut.y>=0&&ut.x+ut.y<=1}static getInterpolation(t,e,i,s,n,o,a,r){return this.getBarycoord(t,e,i,s,ut)===null?(r.x=0,r.y=0,"z"in r&&(r.z=0),"w"in r&&(r.w=0),null):(r.setScalar(0),r.addScaledVector(n,ut.x),r.addScaledVector(o,ut.y),r.addScaledVector(a,ut.z),r)}static getInterpolatedAttribute(t,e,i,s,n,o){return ri.setScalar(0),ai.setScalar(0),hi.setScalar(0),ri.fromBufferAttribute(t,e),ai.fromBufferAttribute(t,i),hi.fromBufferAttribute(t,s),o.setScalar(0),o.addScaledVector(ri,n.x),o.addScaledVector(ai,n.y),o.addScaledVector(hi,n.z),o}static isFrontFacing(t,e,i,s){return Y.subVectors(i,e),ct.subVectors(t,e),Y.cross(ct).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Y.subVectors(this.c,this.b),ct.subVectors(this.a,this.b),Y.cross(ct).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return K.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return K.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return K.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return K.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return K.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let o,a;kt.subVectors(s,i),It.subVectors(n,i),si.subVectors(t,i);const r=kt.dot(si),h=It.dot(si);if(r<=0&&h<=0)return e.copy(i);ni.subVectors(t,s);const l=kt.dot(ni),u=It.dot(ni);if(l>=0&&u<=l)return e.copy(s);const d=r*u-l*h;if(d<=0&&r>=0&&l<=0)return o=r/(r-l),e.copy(i).addScaledVector(kt,o);oi.subVectors(t,n);const m=kt.dot(oi),p=It.dot(oi);if(p>=0&&m<=p)return e.copy(n);const f=m*h-r*p;if(f<=0&&h>=0&&p<=0)return a=h/(h-p),e.copy(i).addScaledVector(It,a);const y=l*p-m*u;if(y<=0&&u-l>=0&&m-p>=0)return $i.subVectors(n,s),a=(u-l)/(u-l+(m-p)),e.copy(s).addScaledVector($i,a);const g=1/(y+f+d);return o=f*g,a=d*g,e.copy(i).addScaledVector(kt,o).addScaledVector(It,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const xs={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},bt={h:0,s:0,l:0},be={h:0,s:0,l:0};function li(c,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?c+(t-c)*6*e:e<1/2?t:e<2/3?c+(t-c)*6*(2/3-e):c}class T{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Z){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,q.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=q.workingColorSpace){return this.r=t,this.g=e,this.b=i,q.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=q.workingColorSpace){if(t=vi(t,1),e=z(e,0,1),i=z(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,o=2*i-n;this.r=li(o,n,t+1/3),this.g=li(o,n,t),this.b=li(o,n,t-1/3)}return q.toWorkingColorSpace(this,s),this}setStyle(t,e=Z){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],o=n.length;if(o===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Z){const i=xs[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=mt(t.r),this.g=mt(t.g),this.b=mt(t.b),this}copyLinearToSRGB(t){return this.r=Ht(t.r),this.g=Ht(t.g),this.b=Ht(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Z){return q.fromWorkingColorSpace(V.copy(this),t),Math.round(z(V.r*255,0,255))*65536+Math.round(z(V.g*255,0,255))*256+Math.round(z(V.b*255,0,255))}getHexString(t=Z){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=q.workingColorSpace){q.fromWorkingColorSpace(V.copy(this),e);const i=V.r,s=V.g,n=V.b,o=Math.max(i,s,n),a=Math.min(i,s,n);let r,h;const l=(a+o)/2;if(a===o)r=0,h=0;else{const u=o-a;switch(h=l<=.5?u/(o+a):u/(2-o-a),o){case i:r=(s-n)/u+(s<n?6:0);break;case s:r=(n-i)/u+2;break;case n:r=(i-s)/u+4;break}r/=6}return t.h=r,t.s=h,t.l=l,t}getRGB(t,e=q.workingColorSpace){return q.fromWorkingColorSpace(V.copy(this),e),t.r=V.r,t.g=V.g,t.b=V.b,t}getStyle(t=Z){q.fromWorkingColorSpace(V.copy(this),t);const e=V.r,i=V.g,s=V.b;return t!==Z?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(bt),this.setHSL(bt.h+t,bt.s+e,bt.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(bt),t.getHSL(be);const i=te(bt.h,be.h,e),s=te(bt.s,be.s,e),n=te(bt.l,be.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const V=new T;T.NAMES=xs;let rn=0;class He extends Ue{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rn++}),this.uuid=qt(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new T(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const o=[];for(const a in n){const r=n[a];delete r.metadata,o.push(r)}return o}if(e){const n=s(t.textures),o=s(t.images);n.length>0&&(i.textures=n),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Lt extends He{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new T(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xt,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const B=new x,Me=new E;let an=0;class Nt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:an++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Me.fromBufferAttribute(this,e),Me.applyMatrix3(t),this.setXY(e,Me.x,Me.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyMatrix3(t),this.setXYZ(e,B.x,B.y,B.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyMatrix4(t),this.setXYZ(e,B.x,B.y,B.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.applyNormalMatrix(t),this.setXYZ(e,B.x,B.y,B.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)B.fromBufferAttribute(this,e),B.transformDirection(t),this.setXYZ(e,B.x,B.y,B.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Ot(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=N(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ot(e,this.array)),e}setX(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ot(e,this.array)),e}setY(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ot(e,this.array)),e}setZ(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ot(e,this.array)),e}setW(t,e){return this.normalized&&(e=N(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array),s=N(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=N(e,this.array),i=N(i,this.array),s=N(s,this.array),n=N(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class hn extends Nt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class ln extends Nt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class G extends Nt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let cn=0;const j=new H,ci=new Q,Vt=new x,L=new ne,Kt=new ne,D=new x;class U extends Ue{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:cn++}),this.uuid=qt(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(qs(t)?ln:hn)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new tt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return j.makeRotationFromQuaternion(t),this.applyMatrix4(j),this}rotateX(t){return j.makeRotationX(t),this.applyMatrix4(j),this}rotateY(t){return j.makeRotationY(t),this.applyMatrix4(j),this}rotateZ(t){return j.makeRotationZ(t),this.applyMatrix4(j),this}translate(t,e,i){return j.makeTranslation(t,e,i),this.applyMatrix4(j),this}scale(t,e,i){return j.makeScale(t,e,i),this.applyMatrix4(j),this}lookAt(t){return ci.lookAt(t),ci.updateMatrix(),this.applyMatrix4(ci.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Vt).negate(),this.translate(Vt.x,Vt.y,Vt.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const i=[];for(let s=0,n=t.length;s<n;s++){const o=t[s];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new G(i,3))}else{const i=Math.min(t.length,e.count);for(let s=0;s<i;s++){const n=t[s];e.setXYZ(s,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ne);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];L.setFromBufferAttribute(n),this.morphTargetsRelative?(D.addVectors(this.boundingBox.min,L.min),this.boundingBox.expandByPoint(D),D.addVectors(this.boundingBox.max,L.max),this.boundingBox.expandByPoint(D)):(this.boundingBox.expandByPoint(L.min),this.boundingBox.expandByPoint(L.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ci);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(L.setFromBufferAttribute(t),e)for(let n=0,o=e.length;n<o;n++){const a=e[n];Kt.setFromBufferAttribute(a),this.morphTargetsRelative?(D.addVectors(L.min,Kt.min),L.expandByPoint(D),D.addVectors(L.max,Kt.max),L.expandByPoint(D)):(L.expandByPoint(Kt.min),L.expandByPoint(Kt.max))}L.getCenter(i);let s=0;for(let n=0,o=t.count;n<o;n++)D.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(D));if(e)for(let n=0,o=e.length;n<o;n++){const a=e[n],r=this.morphTargetsRelative;for(let h=0,l=a.count;h<l;h++)D.fromBufferAttribute(a,h),r&&(Vt.fromBufferAttribute(t,h),D.add(Vt)),s=Math.max(s,i.distanceToSquared(D))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Nt(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],r=[];for(let S=0;S<i.count;S++)a[S]=new x,r[S]=new x;const h=new x,l=new x,u=new x,d=new E,m=new E,p=new E,f=new x,y=new x;function g(S,_,F){h.fromBufferAttribute(i,S),l.fromBufferAttribute(i,_),u.fromBufferAttribute(i,F),d.fromBufferAttribute(n,S),m.fromBufferAttribute(n,_),p.fromBufferAttribute(n,F),l.sub(h),u.sub(h),m.sub(d),p.sub(d);const R=1/(m.x*p.y-p.x*m.y);isFinite(R)&&(f.copy(l).multiplyScalar(p.y).addScaledVector(u,-m.y).multiplyScalar(R),y.copy(u).multiplyScalar(m.x).addScaledVector(l,-p.x).multiplyScalar(R),a[S].add(f),a[_].add(f),a[F].add(f),r[S].add(y),r[_].add(y),r[F].add(y))}let b=this.groups;b.length===0&&(b=[{start:0,count:t.count}]);for(let S=0,_=b.length;S<_;++S){const F=b[S],R=F.start,et=F.count;for(let k=R,ft=R+et;k<ft;k+=3)g(t.getX(k+0),t.getX(k+1),t.getX(k+2))}const M=new x,w=new x,v=new x,C=new x;function P(S){v.fromBufferAttribute(s,S),C.copy(v);const _=a[S];M.copy(_),M.sub(v.multiplyScalar(v.dot(_))).normalize(),w.crossVectors(C,_);const R=w.dot(r[S])<0?-1:1;o.setXYZW(S,M.x,M.y,M.z,R)}for(let S=0,_=b.length;S<_;++S){const F=b[S],R=F.start,et=F.count;for(let k=R,ft=R+et;k<ft;k+=3)P(t.getX(k+0)),P(t.getX(k+1)),P(t.getX(k+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Nt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,m=i.count;d<m;d++)i.setXYZ(d,0,0,0);const s=new x,n=new x,o=new x,a=new x,r=new x,h=new x,l=new x,u=new x;if(t)for(let d=0,m=t.count;d<m;d+=3){const p=t.getX(d+0),f=t.getX(d+1),y=t.getX(d+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,f),o.fromBufferAttribute(e,y),l.subVectors(o,n),u.subVectors(s,n),l.cross(u),a.fromBufferAttribute(i,p),r.fromBufferAttribute(i,f),h.fromBufferAttribute(i,y),a.add(l),r.add(l),h.add(l),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(f,r.x,r.y,r.z),i.setXYZ(y,h.x,h.y,h.z)}else for(let d=0,m=e.count;d<m;d+=3)s.fromBufferAttribute(e,d+0),n.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),l.subVectors(o,n),u.subVectors(s,n),l.cross(u),i.setXYZ(d+0,l.x,l.y,l.z),i.setXYZ(d+1,l.x,l.y,l.z),i.setXYZ(d+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)D.fromBufferAttribute(t,e),D.normalize(),t.setXYZ(e,D.x,D.y,D.z)}toNonIndexed(){function t(a,r){const h=a.array,l=a.itemSize,u=a.normalized,d=new h.constructor(r.length*l);let m=0,p=0;for(let f=0,y=r.length;f<y;f++){a.isInterleavedBufferAttribute?m=r[f]*a.data.stride+a.offset:m=r[f]*l;for(let g=0;g<l;g++)d[p++]=h[m++]}return new Nt(d,l,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new U,i=this.index.array,s=this.attributes;for(const a in s){const r=s[a],h=t(r,i);e.setAttribute(a,h)}const n=this.morphAttributes;for(const a in n){const r=[],h=n[a];for(let l=0,u=h.length;l<u;l++){const d=h[l],m=t(d,i);r.push(m)}e.morphAttributes[a]=r}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,r=o.length;a<r;a++){const h=o[a];e.addGroup(h.start,h.count,h.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const r=this.parameters;for(const h in r)r[h]!==void 0&&(t[h]=r[h]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const r in i){const h=i[r];t.data.attributes[r]=h.toJSON(t.data)}const s={};let n=!1;for(const r in this.morphAttributes){const h=this.morphAttributes[r],l=[];for(let u=0,d=h.length;u<d;u++){const m=h[u];l.push(m.toJSON(t.data))}l.length>0&&(s[r]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const h in s){const l=s[h];this.setAttribute(h,l.clone(e))}const n=t.morphAttributes;for(const h in n){const l=[],u=n[h];for(let d=0,m=u.length;d<m;d++)l.push(u[d].clone(e));this.morphAttributes[h]=l}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let h=0,l=o.length;h<l;h++){const u=o[h];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const r=t.boundingSphere;return r!==null&&(this.boundingSphere=r.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Qi=new H,zt=new Oe,ve=new Ci,ts=new x,Ce=new x,Pe=new x,Se=new x,ui=new x,ze=new x,es=new x,Ee=new x;class $ extends Q{constructor(t=new U,e=new Lt){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,o=s.length;n<o;n++){const a=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,o=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(n&&a){ze.set(0,0,0);for(let r=0,h=n.length;r<h;r++){const l=a[r],u=n[r];l!==0&&(ui.fromBufferAttribute(u,t),o?ze.addScaledVector(ui,l):ze.addScaledVector(ui.sub(e),l))}e.add(ze)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ve.copy(i.boundingSphere),ve.applyMatrix4(n),zt.copy(t.ray).recast(t.near),!(ve.containsPoint(zt.origin)===!1&&(zt.intersectSphere(ve,ts)===null||zt.origin.distanceToSquared(ts)>(t.far-t.near)**2))&&(Qi.copy(n).invert(),zt.copy(t.ray).applyMatrix4(Qi),!(i.boundingBox!==null&&zt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,zt)))}_computeIntersections(t,e,i){let s;const n=this.geometry,o=this.material,a=n.index,r=n.attributes.position,h=n.attributes.uv,l=n.attributes.uv1,u=n.attributes.normal,d=n.groups,m=n.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,f=d.length;p<f;p++){const y=d[p],g=o[y.materialIndex],b=Math.max(y.start,m.start),M=Math.min(a.count,Math.min(y.start+y.count,m.start+m.count));for(let w=b,v=M;w<v;w+=3){const C=a.getX(w),P=a.getX(w+1),S=a.getX(w+2);s=Ae(this,g,t,i,h,l,u,C,P,S),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,m.start),f=Math.min(a.count,m.start+m.count);for(let y=p,g=f;y<g;y+=3){const b=a.getX(y),M=a.getX(y+1),w=a.getX(y+2);s=Ae(this,o,t,i,h,l,u,b,M,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(r!==void 0)if(Array.isArray(o))for(let p=0,f=d.length;p<f;p++){const y=d[p],g=o[y.materialIndex],b=Math.max(y.start,m.start),M=Math.min(r.count,Math.min(y.start+y.count,m.start+m.count));for(let w=b,v=M;w<v;w+=3){const C=w,P=w+1,S=w+2;s=Ae(this,g,t,i,h,l,u,C,P,S),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,m.start),f=Math.min(r.count,m.start+m.count);for(let y=p,g=f;y<g;y+=3){const b=y,M=y+1,w=y+2;s=Ae(this,o,t,i,h,l,u,b,M,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function un(c,t,e,i,s,n,o,a){let r;if(t.side===1?r=i.intersectTriangle(o,n,s,!0,a):r=i.intersectTriangle(s,n,o,t.side===0,a),r===null)return null;Ee.copy(a),Ee.applyMatrix4(c.matrixWorld);const h=e.ray.origin.distanceTo(Ee);return h<e.near||h>e.far?null:{distance:h,point:Ee.clone(),object:c}}function Ae(c,t,e,i,s,n,o,a,r,h){c.getVertexPosition(a,Ce),c.getVertexPosition(r,Pe),c.getVertexPosition(h,Se);const l=un(c,t,e,i,Ce,Pe,Se,es);if(l){const u=new x;K.getBarycoord(es,Ce,Pe,Se,u),s&&(l.uv=K.getInterpolatedAttribute(s,a,r,h,u,new E)),n&&(l.uv1=K.getInterpolatedAttribute(n,a,r,h,u,new E)),o&&(l.normal=K.getInterpolatedAttribute(o,a,r,h,u,new x),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const d={a,b:r,c:h,normal:new x,materialIndex:0};K.getNormal(Ce,Pe,Se,d.normal),l.face=d,l.barycoord=u}return l}function dn(c){const t={};for(const e in c){t[e]={};for(const i in c[e]){const s=c[e][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][i]=null):t[e][i]=s.clone():Array.isArray(s)?t[e][i]=s.slice():t[e][i]=s}}return t}function mn(c){const t=[];for(let e=0;e<c.length;e++)t.push(c[e].clone());return t}var pn=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,fn=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class gn extends He{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=pn,this.fragmentShader=fn,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=dn(t.uniforms),this.uniformsGroups=mn(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?e.uniforms[s]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[s]={type:"m4",value:o.toArray()}:e.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class yn extends Q{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new H,this.projectionMatrix=new H,this.projectionMatrixInverse=new H,this.coordinateSystem=2e3}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Mt=new x,is=new E,ss=new E;class ws extends yn{constructor(t=50,e=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=De*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Qt*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return De*2*Math.atan(Math.tan(Qt*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){Mt.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Mt.x,Mt.y).multiplyScalar(-t/Mt.z),Mt.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Mt.x,Mt.y).multiplyScalar(-t/Mt.z)}getViewSize(t,e){return this.getViewBounds(t,is,ss),e.subVectors(ss,is)}setViewOffset(t,e,i,s,n,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Qt*.5*this.fov)/this.zoom,i=2*e,s=this.aspect*i,n=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const r=o.fullWidth,h=o.fullHeight;n+=o.offsetX*s/r,e-=o.offsetY*i/h,s*=o.width/r,i*=o.height/h}const a=this.filmOffset;a!==0&&(n+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+s,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}class ns extends rt{constructor(t=null,e=1,i=1,s,n,o,a,r,h=1003,l=1003,u,d){super(null,o,a,r,h,l,s,n,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class bs extends He{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new T(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const ke=new x,Ie=new x,os=new H,$t=new Oe,Te=new Ci,di=new x,rs=new x;class _e extends Q{constructor(t=new U,e=new bs){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let s=1,n=e.count;s<n;s++)ke.fromBufferAttribute(e,s-1),Ie.fromBufferAttribute(e,s),i[s]=i[s-1],i[s]+=ke.distanceTo(Ie);t.setAttribute("lineDistance",new G(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Te.copy(i.boundingSphere),Te.applyMatrix4(s),Te.radius+=n,t.ray.intersectsSphere(Te)===!1)return;os.copy(s).invert(),$t.copy(t.ray).applyMatrix4(os);const a=n/((this.scale.x+this.scale.y+this.scale.z)/3),r=a*a,h=this.isLineSegments?2:1,l=i.index,d=i.attributes.position;if(l!==null){const m=Math.max(0,o.start),p=Math.min(l.count,o.start+o.count);for(let f=m,y=p-1;f<y;f+=h){const g=l.getX(f),b=l.getX(f+1),M=Fe(this,t,$t,r,g,b,f);M&&e.push(M)}if(this.isLineLoop){const f=l.getX(p-1),y=l.getX(m),g=Fe(this,t,$t,r,f,y,p-1);g&&e.push(g)}}else{const m=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let f=m,y=p-1;f<y;f+=h){const g=Fe(this,t,$t,r,f,f+1,f);g&&e.push(g)}if(this.isLineLoop){const f=Fe(this,t,$t,r,p-1,m,p-1);f&&e.push(f)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,o=s.length;n<o;n++){const a=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}}function Fe(c,t,e,i,s,n,o){const a=c.geometry.attributes.position;if(ke.fromBufferAttribute(a,s),Ie.fromBufferAttribute(a,n),e.distanceSqToSegment(ke,Ie,di,rs)>i)return;di.applyMatrix4(c.matrixWorld);const h=t.ray.origin.distanceTo(di);if(!(h<t.near||h>t.far))return{distance:h,point:rs.clone().applyMatrix4(c.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:c}}class oe extends U{constructor(t=1,e=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:s};const n=t/2,o=e/2,a=Math.floor(i),r=Math.floor(s),h=a+1,l=r+1,u=t/a,d=e/r,m=[],p=[],f=[],y=[];for(let g=0;g<l;g++){const b=g*d-o;for(let M=0;M<h;M++){const w=M*u-n;p.push(w,-b,0),f.push(0,0,1),y.push(M/a),y.push(1-g/r)}}for(let g=0;g<r;g++)for(let b=0;b<a;b++){const M=b+h*g,w=b+h*(g+1),v=b+1+h*(g+1),C=b+1+h*g;m.push(M,w,C),m.push(w,v,C)}this.setIndex(m),this.setAttribute("position",new G(p,3)),this.setAttribute("normal",new G(f,3)),this.setAttribute("uv",new G(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new oe(t.width,t.height,t.widthSegments,t.heightSegments)}}class Pi extends U{constructor(t=.5,e=1,i=32,s=1,n=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:s,thetaStart:n,thetaLength:o},i=Math.max(3,i),s=Math.max(1,s);const a=[],r=[],h=[],l=[];let u=t;const d=(e-t)/s,m=new x,p=new E;for(let f=0;f<=s;f++){for(let y=0;y<=i;y++){const g=n+y/i*o;m.x=u*Math.cos(g),m.y=u*Math.sin(g),r.push(m.x,m.y,m.z),h.push(0,0,1),p.x=(m.x/e+1)/2,p.y=(m.y/e+1)/2,l.push(p.x,p.y)}u+=d}for(let f=0;f<s;f++){const y=f*(i+1);for(let g=0;g<i;g++){const b=g+y,M=b,w=b+i+1,v=b+i+2,C=b+1;a.push(M,w,C),a.push(w,v,C)}}this.setIndex(a),this.setAttribute("position",new G(r,3)),this.setAttribute("normal",new G(h,3)),this.setAttribute("uv",new G(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Pi(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Si extends U{constructor(t=1,e=32,i=16,s=0,n=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:s,phiLength:n,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const r=Math.min(o+a,Math.PI);let h=0;const l=[],u=new x,d=new x,m=[],p=[],f=[],y=[];for(let g=0;g<=i;g++){const b=[],M=g/i;let w=0;g===0&&o===0?w=.5/e:g===i&&r===Math.PI&&(w=-.5/e);for(let v=0;v<=e;v++){const C=v/e;u.x=-t*Math.cos(s+C*n)*Math.sin(o+M*a),u.y=t*Math.cos(o+M*a),u.z=t*Math.sin(s+C*n)*Math.sin(o+M*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),f.push(d.x,d.y,d.z),y.push(C+w,1-M),b.push(h++)}l.push(b)}for(let g=0;g<i;g++)for(let b=0;b<e;b++){const M=l[g][b+1],w=l[g][b],v=l[g+1][b],C=l[g+1][b+1];(g!==0||o>0)&&m.push(M,w,C),(g!==i-1||r<Math.PI)&&m.push(w,v,C)}this.setIndex(m),this.setAttribute("position",new G(p,3)),this.setAttribute("normal",new G(f,3)),this.setAttribute("uv",new G(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Si(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class zi extends He{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new T(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new T(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xt,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const as=new H;class xn{constructor(t,e,i=0,s=1/0){this.ray=new Oe(t,e),this.near=i,this.far=s,this.camera=null,this.layers=new ys,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return as.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(as),this}intersectObject(t,e=!0,i=[]){return xi(t,this,i,e),i.sort(hs),i}intersectObjects(t,e=!0,i=[]){for(let s=0,n=t.length;s<n;s++)xi(t[s],this,i,e);return i.sort(hs),i}}function hs(c,t){return c.distance-t.distance}function xi(c,t,e,i){let s=!0;if(c.layers.test(t.layers)&&c.raycast(t,e)===!1&&(s=!1),s===!0&&i===!0){const n=c.children;for(let o=0,a=n.length;o<a;o++)xi(n[o],t,e,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:fs}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=fs);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ls={common:{diffuse:{value:new T(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new tt},alphaMap:{value:null},alphaMapTransform:{value:new tt},alphaTest:{value:0}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}}},Et={allEvents:new Map,generalEvents:new Map,viewportEvents:new Map,inspectorEvents:new Map,hierarchyEvents:new Map,subscribe(c,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}i.has(c)||i.set(c,[]),i.get(c).push(e)},unsubscribe(c,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(c)){const s=i.get(c).indexOf(e);s!==-1&&i.get(c).splice(s,1)}},notify(c,t,e){let i;switch(t){case"all":{for(const s of[this.allEvents,this.generalEvents,this.viewportEvents,this.inspectorEvents,this.hierarchyEvents])if(s.has(c))for(const n of s.get(c))n(e);return}case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(c))for(const s of i.get(c))s(e);if(this.allEvents.has(c))for(const s of this.allEvents.get(c))s(e)}};var Ct=(c=>(c.ALL="all",c.GENERAL="general",c.VIEWPORT="viewport",c.INSPECTOR="inspector",c.HIERARCHY="hierarchy",c))(Ct||{});class Ei{data;width;height;texture;columnConnectionVisuals;rowConnectionVisuals;connectionParentMesh=null;connectionMaterial;constructor(t=4,e=4,i=1.25){this.width=t,this.height=e,this.data=new Float32Array(this.width*this.height*4),this.texture=new ns(this.data,this.width,this.height,1023,1015),this.texture.minFilter=this.texture.magFilter=1003,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0,this.connectionMaterial=new bs({color:ki(),depthTest:!1,transparent:!0}),this.columnConnectionVisuals=[];for(let s=0;s<this.width;s++){const n=new U().setFromPoints(this.getColumn(s)),o=new _e(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,this.columnConnectionVisuals.push(o)}this.rowConnectionVisuals=[];for(let s=0;s<this.height;s++){const n=new U().setFromPoints(this.getRow(s)),o=new _e(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,this.rowConnectionVisuals.push(o)}}getTexture(){return this.texture}getWidth(){return this.width}getHeight(){return this.height}toString(){let t=`DynamicVec3Grid: ${this.width}x${this.height}
`;for(let e=0;e<this.height;e++){for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t+=`(${this.data[s].toFixed(2)}, ${this.data[s+1].toFixed(2)}, ${this.data[s+2].toFixed(2)}, ${this.data[s+3].toFixed(2)}) `}t+=`
`}return t}addVisuals(t){if(this.connectionParentMesh===null){this.connectionParentMesh=t;for(let e=0;e<this.width;e++)this.columnConnectionVisuals[e].visible=!1,t.add(this.columnConnectionVisuals[e]);for(let e=0;e<this.height;e++)this.rowConnectionVisuals[e].visible=!1,t.add(this.rowConnectionVisuals[e])}}showVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!0;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!0}hideVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!1;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!1}getPoint4(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new O(this.data[i],this.data[i+1],this.data[i+2],this.data[i+3])}getPoint(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new x(this.data[i],this.data[i+1],this.data[i+2])}getPoints4(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t.push(new O(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return t}getPoints(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t.push(new x(this.data[s],this.data[s+1],this.data[s+2]))}return t}setPoint4(t,e,i){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const s=(t*this.width+e)*4;this.data[s]=i.x,this.data[s+1]=i.y,this.data[s+2]=i.z,this.data[s+3]=i.w,this.texture.needsUpdate=!0;const n=new U().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=n;const o=new U().setFromPoints(this.getRow(t));this.rowConnectionVisuals[t].geometry.dispose(),this.rowConnectionVisuals[t].geometry=o}setPoint(t,e,i){this.setPoint4(t,e,new O(i.x,i.y,i.z,1))}getColumn4(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const s=(i*this.width+t)*4;e.push(new O(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return e}getColumn(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const s=(i*this.width+t)*4;e.push(new x(this.data[s],this.data[s+1],this.data[s+2]))}return e}getRow4(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const s=(t*this.width+i)*4;e.push(new O(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return e}getRow(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const s=(t*this.width+i)*4;e.push(new x(this.data[s],this.data[s+1],this.data[s+2]))}return e}addColumn(t,e=!1){this.resizeBuffer(this.width+1,this.height),e&&this.shiftColumnRight();const i=e?0:this.width-1,s=e?1:this.width-2,n=new U().setFromPoints(this.getColumn(i)),o=new _e(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,e?this.columnConnectionVisuals.unshift(o):this.columnConnectionVisuals.push(o),this.connectionParentMesh?.add(this.columnConnectionVisuals[i]);const a=this.getColumn(s);for(let r=0;r<this.height;r++){const h=a[r].clone().sub(t);this.setPoint(r,i,h)}}removeColumn(t=!1){if(!(this.width<=2)){t&&this.shiftColumnLeft(),this.resizeBuffer(this.width-1,this.height),t?(this.connectionParentMesh?.remove(this.columnConnectionVisuals[0]),this.columnConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.columnConnectionVisuals[this.width]),this.columnConnectionVisuals.pop());for(let e=0;e<this.height;e++){const i=new U().setFromPoints(this.getRow(e));this.rowConnectionVisuals[e].geometry.dispose(),this.rowConnectionVisuals[e].geometry=i}}}addRow(t,e=!1){this.resizeBuffer(this.width,this.height+1),e&&this.shiftRowDown();const i=e?0:this.height-1,s=e?1:this.height-2,n=new U().setFromPoints(this.getRow(i)),o=new _e(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,e?this.rowConnectionVisuals.unshift(o):this.rowConnectionVisuals.push(o),this.connectionParentMesh?.add(this.rowConnectionVisuals[i]);const a=this.getRow(s);for(let r=0;r<this.width;r++){const h=a[r].clone().sub(t);this.setPoint(i,r,h)}}removeRow(t=!1){if(!(this.height<=2)){t&&this.shiftRowUp(),this.resizeBuffer(this.width,this.height-1),t?(this.connectionParentMesh?.remove(this.rowConnectionVisuals[0]),this.rowConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.rowConnectionVisuals[this.height]),this.rowConnectionVisuals.pop());for(let e=0;e<this.width;e++){const i=new U().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=i}}}shiftColumnRight(){for(let t=0;t<this.height;t++)for(let e=this.width-1;e>0;e--){const i=(t*this.width+e)*4,s=(t*this.width+(e-1))*4;this.data.set(this.data.slice(s,s+4),i)}}shiftColumnLeft(){for(let t=0;t<this.height;t++)for(let e=0;e<this.width-1;e++){const i=(t*this.width+e)*4,s=(t*this.width+(e+1))*4;this.data.set(this.data.slice(s,s+4),i)}}shiftRowDown(){for(let t=this.height-1;t>0;t--)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,s=((t-1)*this.width+e)*4;this.data.set(this.data.slice(s,s+4),i)}}shiftRowUp(){for(let t=0;t<this.height-1;t++)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,s=((t+1)*this.width+e)*4;this.data.set(this.data.slice(s,s+4),i)}}resizeBuffer(t,e){const i=new Float32Array(t*e*4);for(let s=0;s<this.height&&!(s>=e);s++)for(let n=0;n<this.width&&!(n>=t);n++){const o=(s*this.width+n)*4,a=(s*t+n)*4;i.set(this.data.slice(o,o+4),a)}this.width=t,this.height=e,this.data=i,this.texture.dispose(),this.texture=new ns(this.data,t,e,1023,1015),this.texture.minFilter=this.texture.magFilter=1003,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0}}class wn{parentObject;index;radius;mesh;material;constructor(t,e,i=.2){this.parentObject=t,this.index=e,this.radius=i;const s=new Si(this.radius);this.material=new Lt({color:Be(),depthTest:!1,transparent:!0}),this.mesh=new $(s,this.material),this.mesh.castShadow=!0,this.mesh.renderOrder=1001,this.adjustScale(),A.onControlsChange(this.adjustScale.bind(this)),Et.subscribe("modeSwitched",Ct.ALL,()=>{this.material.color.set(Be())})}getMesh(){return this.mesh}getParentObject(){return this.parentObject}getIndex(){return this.index}getPosition(){return this.mesh.position.clone()}getWorldPosition(){return this.mesh.getWorldPosition(new x)}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}highlight(){this.material.color.set(je())}resetHighlight(){this.material.color.set(Be())}select(){this.material.color.set(ki())}resetSelect(){this.material.color.set(Be())}hide(){this.mesh.visible=!1}show(){this.mesh.visible=!0}getActive(){return this.mesh.visible}adjustScale(){if(A.dimension2D()){this.mesh.scale.set(1,1,1);return}const t=this.mesh.position.distanceTo(A.getCamera().position),i=Math.abs(t)/10,s=Math.max(1,Math.min(i,20));this.mesh.scale.set(s,s,s)}}class Ai{name;mesh;uuid;type;export;color=new T(0);editHandles;constructor(t,e,i=new x(0,0,0)){this.name=t,this.mesh=e,this.mesh.position.set(i.x,i.y,i.z),this.mesh.castShadow=!0,this.mesh.frustumCulled=!1,this.uuid=Gs.generateUUID(),this.type="VisualObject",this.export=null,this.editHandles=new Map}getName(){return this.name}setName(t){this.name=t}getColor(){return this.color.clone()}setColor(t){this.color.set(t)}getUUID(){return this.uuid}getType(){return this.type}getExport(){return this.export}getMesh(){return this.mesh}getPosition(){const t=new x;return t.copy(this.mesh.position),t}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}move(t,e,i){var s=this.getPosition();s&&(s.x+=t,s.y+=e,s.z+=i,this.setPosition(s))}moveX(t){this.move(t,0,0)}moveY(t){this.move(0,t,0)}moveZ(t){this.move(0,0,t)}edit(){return console.warn("VisualObject: Edit not implemented!"),()=>{console.error("VisualObject: Edit not implemented!")}}createEditHandle(t,e=.2){const i=new wn(this,t,e);this.editHandles.set(t,i),A.getObjectManager().addEditHandle(i)}hasEditHandle(t){return this.editHandles.has(t)}setEditHandlePosition(t,e){if(!this.editHandles.has(t)){console.error("VisualObject:setEditHandlePosition: Edit handle not found!");return}const i=this.editHandles.get(t);i&&i.setPosition(e)}getEditHandlePosition(t){if(!this.editHandles.has(t))return console.error("VisualObject:getEditHandlePosition: Edit handle not found!"),null;const e=this.editHandles.get(t);return e?e.getPosition():null}removeEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:removeEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&(A.getObjectManager().removeEditHandle(e),this.editHandles.delete(t))}removeEditHandles(){this.editHandles.forEach((t,e)=>{A.getObjectManager().removeEditHandle(t)}),this.editHandles.clear()}hideEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:hideEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.hide()}showEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:showEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.show()}hideEditHandles(){this.editHandles.forEach((t,e)=>{t.hide()})}showEditHandles(){this.editHandles.forEach((t,e)=>{t.show()})}unedit(){console.warn("VisualObject: Unedit not implemented!")}}function bn(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float binomial(int n, int k){
        if(k > n) return 0.0;
        if(k == 0 || k == n) return 1.0;
        float res = 1.0;
        for(int i = 0; i < k; i++){
            res *= float(n - i) / float(i + 1);
        }
        return res;
    }

    float bernstein(int n, int i, float t){
        return binomial(n, i) * pow(t, float(i)) * pow(1.0 - t, float(n - i));
    }

    // Derivative of the Bernstein polynomial with respect to t
    float bernsteinDerivative(int n, int i, float t) {
        if (i == 0) return -float(n) * bernstein(n - 1, i, t);
        if (i == n) return float(n) * bernstein(n - 1, i - 1, t);
        return float(n) * (bernstein(n - 1, i - 1, t) - bernstein(n - 1, i, t));
    }

    vec3 getControlPoint(int i, int j){
        vec2 texCoord = vec2(float(i) / float(controlPointsWidth - 1), float(j) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0001, 0.9999);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 bezierPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        for(int i = 0; i < controlPointsWidth; i++){
            float bernsteinU = bernstein(controlPointsWidth - 1, i, u);
            float bernsteinUDerivative = bernsteinDerivative(controlPointsWidth - 1, i, u);
            for(int j = 0; j < controlPointsHeight; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float bernsteinV = bernstein(controlPointsHeight - 1, j, v);
                float bernsteinVDerivative = bernsteinDerivative(controlPointsHeight - 1, j, v);
                bezierPoint += controlPoint * bernsteinU * bernsteinV;
                tangentU += controlPoint * bernsteinUDerivative * bernsteinV;
                tangentV += controlPoint * bernsteinU * bernsteinVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(bezierPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(bezierPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function pt(c,t,e){if(c.length!==t*e)throw console.error("Invalid points array length:",c.length,"Expected:",t*e,t,e),new Error("Points array length must match width * height");const i=new U,s=[],n=[];for(const o of c)s.push(o.x,o.y,o.z);for(let o=0;o<e-1;o++)for(let a=0;a<t-1;a++){const r=o*t+a,h=r+1,l=r+t,u=l+1;n.push(r,l,h),n.push(h,l,u)}return i.setAttribute("position",new G(s,3)),i.setIndex(n),i.computeVertexNormals(),i}const Ut={};function Mn(c,t){if(t===0||t===c)return 1;if(Ut[c]&&Ut[c][t])return Ut[c][t];for(var e=1,i=1;i<=t;i++)e*=(c-i+1)/i;return Ut[c]||(Ut[c]={}),Ut[c][t]=e,e}function vn(c,t,e,i,s){return i+(c-t)*(s-i)/(e-t)}function ot(c,t,e){return(c<0||t<0||t>c)&&console.log("berstein: Invalid arguments for n or i: ",c,t),(e<0||e>1)&&console.log("berstein: Invalid arguments for t: ",e),Mn(c,t)*Math.pow(e,t)*Math.pow(1-e,c-t)}function cs(c,t,e){return(c<0||t<0||t>c)&&console.log("bersteinDerivative: Invalid arguments for n or i: ",c,t),(e<0||e>1)&&console.log("bersteinDerivative: Invalid arguments for t: ",e),t===0?-c*ot(c-1,t,e):t===c?c*ot(c-1,t-1,e):c*(ot(c-1,t-1,e)-ot(c-1,t,e))}function mi(c,t,e){const i=[];for(let s=0;s<e;s++){const n=s/(e-1);for(let o=0;o<t;o++){const a=o/(t-1);i.push(Cn(c,a,n))}}return i}function Cn(c,t,e){const i=new x(0,0,0);for(let s=0;s<c.getWidth();s++){const n=ot(c.getWidth()-1,s,t);for(let o=0;o<c.getHeight();o++){const a=c.getPoint(o,s),r=ot(c.getHeight()-1,o,e);i.add(a.clone().multiplyScalar(n*r))}}return i}class Ms{uniforms;constructor(){this.uniforms=new Map}add(t){const e=this.uniforms.get(t.getName());if(e&&e.getType()===t.getType()){e.value=t.value;return}this.uniforms.set(t.getName(),t)}has(t){return this.uniforms.has(t)}get(t){return this.uniforms.get(t)}getAll(){return Array.from(this.uniforms.values())}mergeFrom(t){t.getAll().forEach(e=>{this.add(e)})}getTHREEUniforms(){const t={};return this.uniforms.forEach(e=>{t[e.getName()]={value:e.value}}),t}}class Ne{label;element;onChangeCallback=()=>{};updateCallbacks=[];constructor(t,e){this.label=t,this.element=e}onChange(t){return this.onChangeCallback=t,this}changed(){this.onChangeCallback();for(const t of this.updateCallbacks)t()}registerUpdateCallback(t){this.updateCallbacks.push(t)}deregisterUpdateCallback(t){const e=this.updateCallbacks.indexOf(t);e!==-1&&this.updateCallbacks.splice(e,1)}}class vs extends Ne{button;constructor(t,e,i,s={}){const{variant:n="default",outline:o=!0,pill:a=!1,previews:r=[],previewSize:h=40}=s,l=document.createElement("sl-dropdown");l.style.width="100%",l.style.paddingBottom="1rem";const u=document.createElement("sl-button");u.slot="trigger",u.caret=!0,u.variant=n,u.outline=o,u.pill=a,u.style.width="100%",u.style.display="block",u.appendChild(document.createTextNode(t)),l.appendChild(u);const d=document.createElement("sl-menu");l.appendChild(d);var m=0;const p=r.length>0&&r.length==Object.keys(e).length;r.length>0&&!p&&console.warn("Previews are not shown because the number of previews does not match the number of options.");for(const f in e){const y=document.createElement("sl-menu-item");if(y.value=f,y.classList.add("lacery-menu-item"),y.appendChild(document.createTextNode(e[f])),p){const g=document.createElement("img");g.src=r[m],g.style.width=`${h}px`,g.style.height=`${h}px`,g.slot="prefix",y.appendChild(g),m++}d.appendChild(y)}d.addEventListener("sl-select",f=>{const y=f.detail.item.value;i(y)}),super(t,l),this.button=u}getObj(){return null}getKeys(){return[]}update(){}setSize(t){this.button.size=t}}class ee extends Ne{obj;key;range;input;constructor(t,e,i,s={}){const{help:n="",min:o=0,max:a=100,step:r=1}=s,h=document.createElement("div");h.style.display="flex",h.style.flexDirection="row",h.style.alignItems="center",h.style.justifyContent="space-between";const l=document.createElement("sl-range");l.label=t,l.helpText=n,l.min=o,l.max=a,l.step=r,l.value=e[i];const u=document.createElement("sl-input");u.type="number",u.min=o,u.max=a,u.step=r,u.value=e[i],l.addEventListener("sl-input",()=>{e[i]=l.value,u.value=l.value.toString(),this.changed()}),u.addEventListener("sl-input",()=>{e[i]=parseFloat(u.value),l.value=parseFloat(u.value),this.changed()}),l.style.width="60%",l.style.marginRight="1em",u.style.width="40%",h.appendChild(l),h.appendChild(u),super(t,h),this.obj=e,this.key=i,this.range=l,this.input=u}getObj(){return this.obj}getKeys(){return[this.key]}update(){this.range.value=this.obj[this.key],this.input.value=this.obj[this.key].toString()}setSize(t){this.input.size=t,t==="small"&&this.range.classList.add("small"),this.range.style.setProperty("--thumb-size",t==="small"?"15px":t==="medium"?"20px":"25px"),this.range.style.setProperty("--track-height",t==="small"?"5px":t==="medium"?"6px":"7px")}setMin(t){this.range.min=t,this.input.min=t}setMax(t){this.range.max=t,this.input.max=t}}class it extends Ne{obj;key;img;name;size;hasTextureFlag=!1;constructor(t,e,i,s={}){const{size:n=80,onTextureAdded:o=()=>{},onTextureRemoved:a=()=>{}}=s,r=document.createElement("div");r.style.display="flex",r.style.flexDirection="row",r.style.alignItems="flex-start",r.style.justifyContent="space-between";const h=document.createElement("label");h.innerHTML=t;const l=document.createElement("div");l.style.position="relative",l.style.cursor="pointer",l.style.fontSize="30px";const u=document.createElement("img");u.style.width=n+"px",u.style.height=n+"px",u.style.objectFit="cover",u.style.borderRadius="3px",u.style.border="1px solid var(--sl-color-neutral-300)",u.style.transition="filter 0.1s ease",l.appendChild(u);const d=document.createElement("sl-icon");d.name="upload",d.style.position="absolute",d.style.top="50%",d.style.left="50%",d.style.transform="translate(-50%, -50%)",d.style.color="white",d.style.opacity="0",d.style.transition="opacity 0.1s ease",l.appendChild(d);const m=document.createElement("sl-icon");m.name="x-lg",m.style.position="absolute",m.style.top="50%",m.style.left="50%",m.style.transform="translate(-50%, -50%)",m.style.color="white",m.style.opacity="0",m.style.transition="opacity 0.1s ease",l.appendChild(m),r.appendChild(h),r.appendChild(l),super(t,r),this.obj=e,this.key=i,this.img=u,this.name=t,this.size=n,l.onclick=()=>{this.hasTextureFlag?(this.obj[this.key]=null,this.updateBlob(),this.changed(),a()):this.uploadImage(o)},l.onmouseover=()=>{this.img.style.filter="brightness(50%)",d.style.opacity=this.hasTextureFlag?"0":"1",m.style.opacity=this.hasTextureFlag?"1":"0"},l.onmouseout=()=>{this.img.style.filter="none",d.style.opacity="0",m.style.opacity="0"},this.updateBlob()}getObj(){return this.obj}getKeys(){return[this.key]}update(){}updateBlob(){this.img.src.startsWith("blob:")&&URL.revokeObjectURL(this.img.src);const t=this.obj[this.key];this.hasTextureFlag=t!=null,this.hasTextureFlag&&t instanceof Blob?this.img.src=URL.createObjectURL(t):this.img.src=`https://placehold.co/${this.size}?text=${this.name}&font=roboto`}setSize(t){}hasTexture(){return this.hasTextureFlag}uploadImage(t){const e=document.createElement("input");e.type="file",e.accept=".png, .jpg, .jpeg",e.onchange=i=>{try{const s=i.target,n=s.files?.item(0);n&&(this.obj[this.key]=n,this.updateBlob(),this.changed(),t())}catch(s){console.warn("Error while loading image file: ",s)}},e.click()}}class Ti extends Ne{obj;xKey;yKey;xInput;yInput;constructor(t,e,i,s,n={}){const{help:o="",xStep:a=1,yStep:r=1}=n,h=document.createElement("div");h.style.display="flex",h.style.flexDirection="row",h.style.alignItems="center",h.style.justifyContent="space-between";const l=document.createElement("sl-input");l.type="number",l.label=t,l.helpText=o,l.step=a,l.value=e[i];const u=document.createElement("sl-input");u.type="number",u.label=" ",u.step=r,u.value=e[s],l.addEventListener("sl-input",()=>{e[i]=isNaN(parseFloat(l.value))?0:parseFloat(l.value),this.changed()}),u.addEventListener("sl-input",()=>{e[s]=isNaN(parseFloat(u.value))?0:parseFloat(u.value),this.changed()}),l.style.width="45%",u.style.width="45%",h.appendChild(l),h.appendChild(u),super(t,h),this.obj=e,this.xKey=i,this.yKey=s,this.xInput=l,this.yInput=u}getObj(){return this.obj}getKeys(){return[this.xKey,this.yKey]}update(){this.xInput.value=this.obj[this.xKey],this.yInput.value=this.obj[this.yKey]}setSize(t){this.xInput.size=t,this.yInput.size=t}}class _i{uniforms;enviroment;updateCallback=void 0;constructor(){this.uniforms=new Ms,this.enviroment=!1}getUniforms(){return this.uniforms}setUpdateCallback(t){this.updateCallback=t}removeUpdateCallback(){this.updateCallback=void 0}}class We{name;type;value;constructor(t,e,i){this.name=t,this.type=e,this.value=i}getName(){return this.name}getType(){return this.type}}class ie extends We{constructor(t,e){super(t,1,e)}}class st extends We{constructor(t,e){super(t,2,e)}}class Fi extends We{constructor(t,e){super(t,3,e)}}class nt extends We{blob;image;constructor(t,e){const i=new rt;i.wrapS=i.wrapT=1e3,super(t,7,i),e!==null?(this.image=new Image,this.image.src=URL.createObjectURL(e),this.image.onload=()=>{i.image=this.image,i.needsUpdate=!0}):(this.image=null,this.value.image=A.getDefaultImage(),i.needsUpdate=!0),this.blob=e}update(){this.image!==null&&this.image.src&&URL.revokeObjectURL(this.image.src),this.value.dispose();const t=new rt;t.wrapS=t.wrapT=1e3,this.value=t,this.blob!==null?(this.image===null&&(this.image=new Image),this.image.src=URL.createObjectURL(this.blob),this.image.onload=()=>{this.value.image=this.image,this.value.needsUpdate=!0}):(this.image=null,this.value.image=A.getDefaultImage(),this.value.needsUpdate=!0)}}class Pn extends _i{tiling;useMainTexture;mainTexture;mainElement;constructor(){super(),this.tiling=new Fi("tiling",new E(1,1)),this.useMainTexture=new st("useMainTexture",!1),this.mainTexture=new nt("mainTexture",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture);const t=new it("Texture",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t}getName(){return"Diffuse"}getFragmentShader(){return Sn()}buildUI(t){const e=new Ti("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y]}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1]}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.mainElement.updateBlob()}}function Sn(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 color = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Calculate the normal
            vec3 normal = normalize(vNormal);

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor;
            vec3 diffuse = diff * lightColor;

            vec3 finalColor = (ambient + diffuse) * color;

            // Final output
            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}class Le extends _i{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;shininess;useNormalMap;normalMap;normalStrength;useAOMap;aoMap;mainElement;roughnessElement;normalElement;aoElement;constructor(){super(),this.tiling=new Fi("tiling",new E(1,1)),this.useMainTexture=new st("useMainTexture",!1),this.mainTexture=new nt("mainTexture",null),this.useRoughnessMap=new st("useRoughnessMap",!1),this.roughnessMap=new nt("roughnessMap",null),this.shininess=new ie("shininess",.5),this.useNormalMap=new st("useNormalMap",!1),this.normalMap=new nt("normalMap",null),this.normalStrength=new ie("normalStrength",1),this.useAOMap=new st("useAOMap",!1),this.aoMap=new nt("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.shininess),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new it("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new it("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new it("Normal",this.normalMap,"blob");i.onChange(()=>{this.useNormalMap.value=i.hasTexture(),this.normalMap.update()}),this.normalElement=i;const s=new it("Ambient Occlusion",this.aoMap,"blob");s.onChange(()=>{this.useAOMap.value=s.hasTexture(),this.aoMap.update()}),this.aoElement=s}getName(){return"Blinn-Phong"}getFragmentShader(){return zn()}buildUI(t){t.add(new vs("Load a preset...",{rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark",onyx:"Onyx"},this.presetSelect.bind(this),{previews:["textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg","textures/onyx/albedo.jpg"],previewSize:64}));const e=new Ti("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new ee("Shininess",this.shininess,"value",{min:.01,max:1,step:.01})),t.add(this.normalElement),t.add(new ee("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],shininess:this.shininess.value,normalStrength:this.normalStrength.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.shininess.value=t.shininess,this.normalStrength.value=t.normalStrength}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,s,n,o]=await Promise.all([dt(t,e.albedo),dt(t,e.ambientocclusion),dt(t,e.normal),dt(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=o,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.normalMap.blob=n,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=s,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function zn(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float shininess;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Get the normal (one minus as a weird fix beacause the vertex shader flips the sides)
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            // Calculate the ambient occlusion
            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the view direction
            vec3 viewDir = normalize(vViewPosition);

            // Calculate the half vector
            vec3 halfDir = normalize(lightDir + viewDir);

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the specular part
            float spec = pow(max(dot(halfDir, normal), 0.0), 200.0 * shininess);

            // Calculate the roughness
            float roughness = useRoughnessMap ? texture2D(roughnessMap, uv).r : 0.0;
            spec *= (1.0 - roughness);

            // Calculate the Blinn-Phong components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor * ao;
            vec3 diffuse = diff * lightColor;
            vec3 specular = spec * lightColor;

            vec3 blinnPhong = (ambient + diffuse + specular) * albedo;

            // Final output
            gl_FragColor = vec4(blinnPhong, 1.0);
        }
    `}class En extends _i{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;roughness;useNormalMap;normalMap;normalStrength;useMetallicMap;metallicMap;metallic;useAOMap;aoMap;mainElement;roughnessElement;metallicElement;normalElement;aoElement;constructor(){super(),this.enviroment=!0,this.tiling=new Fi("tiling",new E(1,1)),this.useMainTexture=new st("useMainTexture",!1),this.mainTexture=new nt("mainTexture",null),this.useRoughnessMap=new st("useRoughnessMap",!1),this.roughnessMap=new nt("roughnessMap",null),this.roughness=new ie("roughness",.5),this.useMetallicMap=new st("useMetallicMap",!1),this.metallicMap=new nt("metallicMap",null),this.metallic=new ie("metallic",.5),this.useNormalMap=new st("useNormalMap",!1),this.normalMap=new nt("normalMap",null),this.normalStrength=new ie("normalStrength",1),this.useAOMap=new st("useAOMap",!1),this.aoMap=new nt("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.roughness),this.uniforms.add(this.useMetallicMap),this.uniforms.add(this.metallicMap),this.uniforms.add(this.metallic),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new it("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new it("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new it("Metallic",this.metallicMap,"blob");i.onChange(()=>{this.useMetallicMap.value=i.hasTexture(),this.metallicMap.update()}),this.metallicElement=i;const s=new it("Normal",this.normalMap,"blob");s.onChange(()=>{this.useNormalMap.value=s.hasTexture(),this.normalMap.update()}),this.normalElement=s;const n=new it("Ambient Occlusion",this.aoMap,"blob");n.onChange(()=>{this.useAOMap.value=n.hasTexture(),this.aoMap.update()}),this.aoElement=n}getName(){return"PBR"}getFragmentShader(){return An()}buildUI(t){t.add(new vs("Load a preset...",{metal:"Metal",rustymetal:"Rusty Metal",facade:"Facade",onyx:"Onyx",rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark"},this.presetSelect.bind(this),{previews:["textures/metal/albedo.jpg","textures/rustymetal/albedo.jpg","textures/facade/albedo.jpg","textures/onyx/albedo.jpg","textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg"],previewSize:64}));const e=new Ti("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new ee("Roughness",this.roughness,"value",{min:.04,max:1,step:.01})),t.add(this.metallicElement),t.add(new ee("Metallic Strength",this.metallic,"value",{min:0,max:1,step:.01})),t.add(this.normalElement),t.add(new ee("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],roughness:this.roughness.value,normalStrength:this.normalStrength.value,metallic:this.metallic.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.roughness.value=t.roughness,this.normalStrength.value=t.normalStrength,this.metallic.value=t.metallic}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.metallicMap.blob=null,this.metallicMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",metallic:"metallic.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,s,n,o,a]=await Promise.all([dt(t,e.albedo),dt(t,e.ambientocclusion),dt(t,e.metallic),dt(t,e.normal),dt(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=a,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.metallicMap.blob=n,this.useMetallicMap.value=!0,this.metallicMap.update(),this.normalMap.blob=o,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=s,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function An(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float roughness;

        uniform bool useMetallicMap;
        uniform sampler2D metallicMap;
        uniform float metallic;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        uniform sampler2D envMap;
        uniform float envMapIntensity;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>

        vec3 getEnvColor(){
            vec3 envReflect = reflect(normalize(vPosition - cameraPosition), vWorldNormal);

            vec2 uv = vec2(atan(envReflect.z, envReflect.x) / (2.0 * PI) + 0.5, 
                   asin(envReflect.y) / PI + 0.5);
    
            vec3 envColor = texture2D(envMap, uv).rgb;

            return envColor;
        }

        vec3 fresnelSchlick(vec3 F0, float VdotH){
            return F0 + (1.0 - F0) * pow(1.0 - VdotH, 5.0);
        }

        float GSchlick(float dot, float k){
            return dot / (dot * (1.0 - k) + k);
        }

        float DGGX(float NdotH, float roughness){
            float alpha = roughness * roughness;
            float a2 = alpha * alpha;
            float inDenom = NdotH * NdotH * (a2 - 1.0) + 1.0;
            return a2 / (PI * inDenom * inDenom);
        }

        float SmithGGX(float NdotV, float NdotL, float roughness){
            float roughness1 = roughness + 1.0;
            float k = roughness1 * roughness1 / 8.0;
            return GSchlick(NdotV, k) * GSchlick(NdotL, k);
        }

        void main() {
            vec2 uv = vUV * tiling;

            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;
            
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            float rough = useRoughnessMap ? texture2D(roughnessMap, uv).r * roughness : roughness;

            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            float metal = useMetallicMap ? texture2D(metallicMap, uv).r * metallic : metallic;

            vec3 lightColor = directionalLights[0].color;
            vec3 ambientColor = ambientLightColor;
            vec3 envColor = getEnvColor();

            vec3 ambient = ambientColor * albedo * ao;

            vec3 N = normal;
            vec3 L = directionalLights[0].direction;
            vec3 V = normalize(vViewPosition);
            vec3 H = normalize(L + V);

            float NdotL = max(dot(N, L), 0.0);
            float NdotV = max(dot(N, V), 0.0);
            float NdotH = max(dot(N, H), 0.0);
            float VdotH = max(dot(V, H), 0.0);

            vec3 F0 = mix(vec3(0.04), albedo, metal);
            vec3 F = fresnelSchlick(F0, VdotH);
            float D = DGGX(NdotH, rough);
            float G = SmithGGX(NdotV, NdotL, rough);

            float denom = 4.0 * NdotV * NdotL + 0.001;
            vec3 specular = (D * F * G) / denom;

            vec3 kS = F;
            vec3 kD = (1.0 - kS) * (1.0 - metal);
            vec3 diffuse = kD * albedo / PI;

            vec3 Lo = (diffuse + specular) * lightColor * NdotL;

            vec3 reflection = envColor * F * envMapIntensity;

            vec3 finalColor = Lo + ambient + reflection * (1.0 - rough) * metal;

            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}function Bi(){return{Diffuse:{name:"Diffuse",create:()=>new Pn},"Blinn-Phong":{name:"Blinn-Phong",create:()=>new Le},PBR:{name:"PBR",create:()=>new En}}}class Ri{vertexShader;controlPoints;color;shadingModel;uniformSet;material;group=void 0;constructor(t,e,i,s,n={}){this.vertexShader=t,this.controlPoints=e,this.color=i.clone(),this.shadingModel=s,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet=new Ms,this.uniformSet.mergeFrom(s.getUniforms()),this.material=new gn({vertexShader:this.vertexShader,fragmentShader:this.shadingModel.getFragmentShader(),uniforms:{...this.getUniforms(),...this.getEnviromentUniforms(),...ls.common,...ls.lights,...n},side:2,lights:!0}),Et.subscribe("enviromentChanged",Ct.ALL,this.updateEnviroment.bind(this)),Et.subscribe("enviromentIntensityChanged",Ct.ALL,this.updateEnviromentIntensity.bind(this))}update(){this.updateUniforms()}updateControlPoints(){this.material.uniforms.controlPointsTexture.value=this.controlPoints.getTexture(),this.material.uniforms.controlPointsWidth.value=this.controlPoints.getWidth(),this.material.uniforms.controlPointsHeight.value=this.controlPoints.getHeight()}getMaterial(){return this.material}setColor(t){this.color.set(t),this.material.uniforms.color.value.set(t)}setShadingModel(t){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.shadingModel=t,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet.mergeFrom(t.getUniforms()),this.material.fragmentShader=t.getFragmentShader(),this.updateUniforms(),this.updateEnviroment(),this.material.needsUpdate=!0,this.group!==void 0&&(this.group.reset(),this.shadingModel.buildUI(this.group))}getShadingModelName(){return this.shadingModel.getName()}getShadingModelJSON(){return this.shadingModel.toJSON()}buildUI(t){this.group=t,this.group.onChange(this.updateUniforms.bind(this)),this.shadingModel.buildUI(this.group)}setCustomUniform(t,e){this.material.uniforms[t]?this.material.uniforms[t].value=e:this.material.uniforms[t]={value:e}}dispose(){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.material.dispose()}updateUniforms(){const t=this.getUniforms();for(const e in t)this.material.uniforms[e]&&this.material.uniforms[e].value!==t[e].value?this.material.uniforms[e].value=t[e].value:this.material.uniforms[e]=t[e]}updateEnviroment(){this.shadingModel.enviroment&&(this.material.uniforms.envMap.value=A.getScene().environment,this.material.uniforms.envMapIntensity.value=A.getScene().environmentIntensity)}updateEnviromentIntensity(){this.shadingModel.enviroment&&(this.material.uniforms.envMapIntensity.value=A.getScene().environmentIntensity)}getUniforms(){const t=this.shadingModel.getUniforms().getTHREEUniforms();return t.controlPointsTexture={value:this.controlPoints.getTexture()},t.controlPointsWidth={value:this.controlPoints.getWidth()},t.controlPointsHeight={value:this.controlPoints.getHeight()},t.color={value:this.color},t}getEnviromentUniforms(){return{envMap:{value:null},envMapIntensity:{value:1}}}}var Cs=(c=>(c[c.OBJECT=0]="OBJECT",c[c.CONTROL_POINTS=1]="CONTROL_POINTS",c[c.SHADING=2]="SHADING",c))(Cs||{});class Di extends Ai{mode;controlPoints;geometry;material;collisionGeometry;collisionMesh;radius=.1;reflectivity=0;constructor(t,e,i,s,n=new T(0),o=new x(0,0,0),a=1,r=new Le){const h=new Ei(i,s);for(let f=0;f<i;f++)for(let y=0;y<s;y++){const g=f+y*i;h.setPoint(y,f,e[g])}const l=new oe(0,0,100,100),u=new Ri(bn(),h,n,r),d=new $(l,u.getMaterial());super(t,d,o),this.controlPoints=h,this.geometry=l,this.material=u,this.mode=a,this.color=n,this.type="BezierPatchObject",this.export=this.exportMesh.bind(this);for(let f=0;f<i;f++)for(let y=0;y<s;y++){const g=f+y*i;this.createEditHandle(g,this.radius),this.setEditHandlePosition(g,e[g])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const m=this.controlPoints.getWidth()+1,p=this.controlPoints.getHeight()+1;this.collisionGeometry=pt(mi(this.controlPoints,p,m),p,m),this.collisionMesh=new $(this.collisionGeometry,new Lt({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),color:this.color.getHex(),mode:this.mode,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(h=>new x(h.x,h.y,h.z)),i=new T(t.color),s=new x(t.position.x,t.position.y,t.position.z),n=t.mode;if(Cs[n]===void 0)throw new Error("Invalid BezierPatchObjectMode mode");const a=Bi()[t.shadingModel.name].create();a.fromJSON(t.shadingModel.params);const r=new Di(t.name,e,t.controlPointsWidth,t.controlPointsHeight,i,s,n,a);return r.setReflectivity(t.reflectivity),r}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),a=new x(0,o.y,o.z),r=new x(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):this.addControlPointRowCol(s,n,o);for(let h=0;h<this.controlPoints.getWidth();h++)for(let l=0;l<this.controlPoints.getHeight();l++){const u=h+l*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(l,h))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=2||this.controlPoints.getHeight()<=2||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,s,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(je())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=pt(mi(this.controlPoints,t,e),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=mi(this.controlPoints,100,100),e=pt(t,100,100),i=new zi({color:this.color,side:2}),s=new $(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function Tn(){return 15528177}function _n(){return 3092528}function Fn(){return A.darkMode()?_n():Tn()}function je(){return 15105570}function ki(){return 15158332}function Be(){return A.darkMode()?11321297:3426654}class A{static app;static scene;static pCamera;static oCamera;static renderer;static effectComposer;static orbitControls;static oOrbitControls;static transformControls;static oTransformControls;static ambientLight;static directionalLight;static grid;static plane;static tooltip;static objectManager;static creationManager;static selectionManager;static editManager;static effectManager;static ioManager;static interactionsManager;static exportManager;static inspector;static hierarchy;static toolbar;static controls;static sceneProxy;static isOrbitingBool=!1;static isDraggingBool=!1;static is2D=!1;static isDarkMode=!1;static dimension2D(){return this.is2D}static switchDimension(){this.is2D?(this.is2D=!1,this.oTransformControls.detach(),this.orbitControls.enabled=!0,this.oOrbitControls.enabled=!1,this.directionalLight.position.set(10,25,0),this.directionalLight.target.position.set(0,0,0)):(this.is2D=!0,this.transformControls.detach(),this.orbitControls.enabled=!1,this.oOrbitControls.enabled=!0,this.directionalLight.position.set(0,100,0),this.directionalLight.target.position.set(0,0,0)),A.getEffectManager().setupRenderPass(),A.getSelectionManager().doResetSelectedEditHandle(),Et.notify("dimensionSwitched",Ct.ALL,this.is2D)}static darkMode(){return this.isDarkMode}static setMode(t=!1){t?(this.isDarkMode=!0,this.app.classList.remove("sl-theme-light"),this.app.classList.add("sl-theme-dark")):(this.isDarkMode=!1,this.app.classList.add("sl-theme-light"),this.app.classList.remove("sl-theme-dark")),A.getScene().background=new T(Fn()),A.getIOManager().setFlagCache("darkMode",this.isDarkMode),Et.notify("modeSwitched",Ct.ALL,this.isDarkMode)}static getApp(){return this.app}static setApp(t){this.app=t}static getScene(){return this.scene}static getCamera(){return this.is2D?this.oCamera:this.pCamera}static getPerspectiveCamera(){return this.is2D?null:this.pCamera}static getRenderer(){return this.renderer}static getOrbitControls(){return this.is2D?this.oOrbitControls:this.orbitControls}static onOrbitControlsChange(t){this.orbitControls.addEventListener("change",()=>{this.is2D||t()}),this.oOrbitControls.addEventListener("change",()=>{this.is2D&&t()})}static onTransformControlsChange(t){this.transformControls.addEventListener("change",()=>{this.is2D||t()}),this.oTransformControls.addEventListener("change",()=>{this.is2D&&t()})}static onControlsChange(t){this.onOrbitControlsChange(t),this.onTransformControlsChange(t),Et.subscribe("dimensionSwitched",Ct.ALL,()=>{t()})}static noScroll(){this.orbitControls.enableZoom=!1,this.oOrbitControls.enableZoom=!1}static scroll(){this.orbitControls.enableZoom=!0,this.oOrbitControls.enableZoom=!0}static getTransformControls(){return this.is2D?this.oTransformControls:this.transformControls}static getAmbientLight(){return this.ambientLight}static getDirectionalLight(){return this.directionalLight}static setupScene(t,e,i,s,n,o,a,r,h,l){this.scene=t,this.pCamera=e,this.oCamera=i,this.renderer=s,this.orbitControls=n,this.orbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.orbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.oOrbitControls=o,this.oOrbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.oOrbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.transformControls=a,this.transformControls.addEventListener("dragging-changed",u=>{this.orbitControls.enabled=!u.value,this.isDraggingBool=u.value}),this.scene.add(this.transformControls.getHelper()),this.oTransformControls=r,this.oTransformControls.addEventListener("dragging-changed",u=>{this.oOrbitControls.enabled=!u.value,this.isDraggingBool=u.value}),this.scene.add(this.oTransformControls.getHelper()),this.ambientLight=h,this.directionalLight=l}static getEffectComposer(){return this.effectComposer}static setEffectComposer(t){this.effectComposer=t}static getGrid(){return this.grid}static getPlane(){return this.plane}static setupGrid(t,e){this.grid=t,this.plane=e}static getTooltip(){return this.tooltip}static setTooltip(t){this.tooltip=t}static getObjectManager(){return this.objectManager}static setObjectManager(t){this.objectManager=t}static getCreationManager(){return this.creationManager}static setCreationManager(t){this.creationManager=t}static getSelectionManager(){return this.selectionManager}static setSelectionManager(t){this.selectionManager=t}static getEditManager(){return this.editManager}static setEditManager(t){this.editManager=t}static getEffectManager(){return this.effectManager}static setEffectManager(t){this.effectManager=t}static getIOManager(){return this.ioManager}static setIOManager(t){this.ioManager=t}static getInteractionsManager(){return this.interactionsManager}static setInteractionsManager(t){this.interactionsManager=t}static getExportManager(){return this.exportManager}static setExportManager(t){this.exportManager=t}static getInspector(){return this.inspector}static setInspector(t){this.inspector=t}static getHierarchy(){return this.hierarchy}static setHierarchy(t){this.hierarchy=t}static getToolbar(){return this.toolbar}static setToolbar(t){this.toolbar=t}static getControls(){return this.controls}static setControls(t){this.controls=t}static getSceneProxy(){return this.sceneProxy}static setSceneProxy(t){this.sceneProxy=t}static isOrbiting(){return this.isOrbitingBool}static isDragging(){return this.isDraggingBool}static getDefaultImage(){const t=new Image;t.width=1,t.height=1;const e=document.createElement("canvas");e.width=1,e.height=1;const i=e.getContext("2d");return i&&(i.fillStyle="#FFFFFF",i.fillRect(0,0,1,1),t.src=e.toDataURL()),t}}const dt=async(c,t)=>{const e=`textures/${c}/${t}`,i=await fetch(e);if(!i.ok)return null;const s=await i.blob();return s.size===0||s.type==="text/html"?null:s};var wi=(c=>(c[c.LOW=0]="LOW",c[c.MEDIUM=1]="MEDIUM",c[c.HIGH=2]="HIGH",c))(wi||{}),bi=(c=>(c[c.BezierPatch=0]="BezierPatch",c))(bi||{});class Bn{type;position;color;reflectivity;constructor(t,e,i,s=0){this.type=t,this.position=e,this.color=i,this.reflectivity=s}}class pi extends Bn{controlPoints;data={};constructor(t,e,i,s=0){super(0,e,i,s),this.controlPoints=t}}function Ge(c){return new x(c.x/c.w,c.y/c.w,c.z/c.w)}class Rn{dialog;preview;previewContainer;console;consolePanel;progressBar;downloadButton;closeButton;tabGroup;constructor(){this.dialog=document.createElement("sl-dialog"),this.dialog.classList.add("raytracer-dialog"),this.dialog.noHeader=!0,this.dialog.style.setProperty("--width","80vw"),this.dialog.style.color="var(--sl-input-color)",this.dialog.style.fontFamily="var(--sl-font-sans)",this.dialog.addEventListener("sl-request-close",u=>{u.preventDefault()});const t=document.createElement("div");t.style.display="flex",t.style.flexDirection="column",t.style.width="100%",t.style.height="70vh";const e=document.createElement("sl-tab-group");e.placement="start",e.style.width="100%",e.style.flex="1 1 0",e.style.minHeight="0",e.style.overflow="hidden",t.appendChild(e),e.addEventListener("sl-tab-show",u=>{this.scrollToBottom(),requestAnimationFrame(this.renderPreview.bind(this))}),this.tabGroup=e;const i=document.createElement("sl-tab");i.slot="nav",i.panel="preview";const s=document.createElement("sl-icon");s.name="eye",s.library="lucide",s.style.fontSize="1.3em",s.style.marginRight="5px",i.appendChild(s),i.appendChild(document.createTextNode("Preview")),e.appendChild(i);const n=document.createElement("sl-tab-panel");n.name="preview",e.appendChild(n),this.previewContainer=document.createElement("div"),this.previewContainer.style.display="flex",this.previewContainer.style.width="100%",this.previewContainer.style.height="100%",this.previewContainer.style.justifyContent="center",this.previewContainer.style.alignItems="center",n.appendChild(this.previewContainer),this.preview=document.createElement("canvas"),this.preview.style.borderRadius="var(--sl-border-radius-medium)",this.previewContainer.appendChild(this.preview);const o=document.createElement("sl-tab");o.slot="nav",o.panel="console";const a=document.createElement("sl-icon");a.name="square-terminal",a.library="lucide",a.style.fontSize="1.3em",a.style.marginRight="5px",o.appendChild(a),o.appendChild(document.createTextNode("Output")),e.appendChild(o),this.consolePanel=document.createElement("sl-tab-panel"),this.consolePanel.name="console",this.consolePanel.style.height="100%",this.consolePanel.style.overflowX="auto",e.appendChild(this.consolePanel),this.console=document.createElement("div"),this.console.style.height="100%",this.console.style.padding="10px",this.console.style.backgroundColor="var(--sl-color-neutral-200)",this.console.style.color="var(--sl-color-neutral-900)",this.console.style.fontFamily="var(--sl-font-mono)",this.console.style.fontSize="var(--sl-font-size-small)",this.console.style.fontWeight="var(--sl-font-weight-bold)",this.console.style.borderRadius="var(--sl-border-radius-medium)",this.console.style.overflow="auto",this.consolePanel.appendChild(this.console);const r=document.createElement("div");r.style.display="flex",r.style.flexDirection="row",r.style.alignContent="center",r.style.justifyContent="space-around",r.style.alignItems="center",r.style.marginTop="20px",t.appendChild(r),this.progressBar=document.createElement("sl-progress-bar"),this.progressBar.textContent="0%",this.progressBar.style.flex="1 1 0",this.progressBar.style.minWidth="0",this.progressBar.style.maxWidth="100%",r.appendChild(this.progressBar),this.progressBar.indeterminate=!0,this.downloadButton=document.createElement("sl-button"),this.downloadButton.variant="primary",this.downloadButton.outline=!0,this.downloadButton.style.marginLeft="10px";const h=document.createElement("sl-icon");h.slot="prefix",h.name="download",h.library="lucide",this.downloadButton.appendChild(h),this.downloadButton.appendChild(document.createTextNode("Download")),r.appendChild(this.downloadButton),this.downloadButton.loading=!0,this.closeButton=document.createElement("sl-button"),this.closeButton.variant="danger",this.closeButton.outline=!0,this.closeButton.style.marginLeft="10px";const l=document.createElement("sl-icon");l.slot="prefix",l.name="x",l.library="lucide",this.closeButton.appendChild(l),this.closeButton.appendChild(document.createTextNode("Close")),r.appendChild(this.closeButton),this.closeButton.disabled=!0,this.dialog.appendChild(t),A.getApp().appendChild(this.dialog)}show(){this.dialog.show()}hide(){this.dialog.hide(),this.console.innerHTML="",this.downloadButton.loading=!0,this.downloadButton.onclick=()=>{},this.closeButton.disabled=!0,this.closeButton.onclick=()=>{},this.progressBar.value=0,this.progressBar.textContent="0%",this.progressBar.indeterminate=!0}setProgress(t){this.progressBar.value=t,this.progressBar.textContent=t+"%",this.progressBar.indeterminate=!1}setProgressIndeterminate(){this.progressBar.indeterminate=!0}setPreview(t,e,i){const s=new ImageData(t,e,i);this.preview.width=e,this.preview.height=i;const n=this.preview.getContext("2d");n?n.putImageData(s,0,0):this.logError("Cannot show preview: no canvas context found"),requestAnimationFrame(this.renderPreview.bind(this))}renderPreview(){const t=this.preview.width/this.preview.height,e=this.previewContainer.clientWidth/this.tabGroup.clientHeight;t<e?(this.preview.style.width="auto",this.preview.style.height=this.tabGroup.clientHeight+"px"):(this.preview.style.width=this.previewContainer.clientWidth+"px",this.preview.style.height="auto")}allowDownload(t=()=>{}){this.downloadButton.onclick=t,this.downloadButton.loading=!1}allowClose(t=()=>{}){this.closeButton.onclick=t,this.closeButton.disabled=!1}log(t){this.addLog(t,"neutral-900")}logInfo(t){this.addLog(t,"primary-600")}logSuccess(t){this.addLog(t,"success-600")}logWarning(t){this.addLog(t,"warning-600")}logError(t){this.addLog(t,"danger-600")}addLog(t,e){const i=document.createElement("div"),s=document.createElement("span"),n=new Date().toLocaleTimeString();s.appendChild(document.createTextNode("["+n+"] ")),s.style.color="var(--sl-color-neutral-500)",s.style.fontWeight="var(--sl-font-weight-light)",i.appendChild(s),i.appendChild(document.createTextNode(t)),i.style.color="var(--sl-color-"+e+")",i.style.marginBottom="5px",i.style.whiteSpace="pre-wrap";const o=this.consolePanel.scrollTop+this.consolePanel.clientHeight>=this.consolePanel.scrollHeight-20;this.console.appendChild(i),o&&this.scrollToBottom()}scrollToBottom(){setTimeout(()=>{this.consolePanel.scrollTop=this.consolePanel.scrollHeight},0)}}function Dn(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec3 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 basisPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);
            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);
                basisPoint += controlPoint * basisU * basisV;
                tangentU += controlPoint * basisUDerivative * basisV;
                tangentV += controlPoint * basisU * basisVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function jt(c,t,e,i){if((e<i[0]||e>i[i.length-1])&&console.log("basis: Invalid arguments for t: ",e),c===0)return i[t]<=e&&e<i[t+1]?1:0;let s=i[t+c]-i[t],n=i[t+c+1]-i[t+1],o=s===0?0:(e-i[t])/s*jt(c-1,t,e,i),a=n===0?0:(i[t+c+1]-e)/n*jt(c-1,t+1,e,i);return o+a}function Gt(c,t){let e=[];for(let i=0;i<=t+c+1;i++)e.push(i);return e}function fi(c,t,e,i,s=!1,n=!1){const o=[],a=s?i:0,r=n?i:0,h=Gt(i,c.getWidth()-1+a),l=Gt(i,c.getHeight()-1+r);for(let u=0;u<e;u++){const d=u/(e-1);for(let m=0;m<t;m++){const p=m/(t-1);o.push(kn(c,p,d,i,h,l,s,n))}}return o}function kn(c,t,e,i,s,n,o=!1,a=!1){const r=new x(0,0,0),h=o?i:0,l=a?i:0;for(let u=0;u<c.getWidth()+h;u++){const d=s[i]+t*(s[s.length-i-1]-s[i]),m=jt(i,u,d,s);for(let p=0;p<c.getHeight()+l;p++){const f=c.getPoint(p%c.getHeight(),u%c.getWidth()),y=n[i]+e*(n[n.length-i-1]-n[i]),g=jt(i,p,y,n);r.add(f.clone().multiplyScalar(m*g))}}return r}function gi(c,t,e,i,s=!1,n=!1){const o=[],a=s?i:0,r=n?i:0,h=Gt(i,c.getWidth()-1+a),l=Gt(i,c.getHeight()-1+r);for(let u=0;u<e;u++){const d=u/(e-1);for(let m=0;m<t;m++){const p=m/(t-1);o.push(In(c,p,d,i,h,l,s,n))}}return o}function In(c,t,e,i,s,n,o=!1,a=!1){const r=new x(0,0,0);var h=0;const l=o?i:0,u=a?i:0;for(let d=0;d<c.getWidth()+l;d++){const m=s[i]+t*(s[s.length-i-1]-s[i]),p=jt(i,d,m,s);for(let f=0;f<c.getHeight()+u;f++){const y=c.getPoint(f%c.getHeight(),d%c.getWidth()),g=c.getPoint4(f%c.getHeight(),d%c.getWidth()).w,b=n[i]+e*(n[n.length-i-1]-n[i]),M=jt(i,f,b,n),w=g*p*M;r.add(y.clone().multiplyScalar(w)),h+=w}}return r.divideScalar(h)}var Ps=(c=>(c[c.OBJECT=0]="OBJECT",c[c.CONTROL_POINTS=1]="CONTROL_POINTS",c[c.SHADING=2]="SHADING",c))(Ps||{});class Ii extends Ai{mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;closedU;closedV;reflectivity=0;constructor(t,e,i,s,n=2,o=new T(0),a=new x(0,0,0),r=1,h=new Le,l=!1,u=!1){if(l&&u)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const d=new Ei(i,s);for(let b=0;b<i;b++)for(let M=0;M<s;M++){const w=b+M*i;d.setPoint(M,b,e[w])}const m=new oe(0,0,100,100),p=new Ri(Dn(),d,o,h,{degree:{value:n},closedU:{value:l},closedV:{value:u}}),f=new $(m,p.getMaterial());super(t,f,a),this.controlPoints=d,this.geometry=m,this.material=p,this.mode=r,this.color=o,this.degree=n,this.closedU=l,this.closedV=u,this.type="UniformBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let b=0;b<i;b++)for(let M=0;M<s;M++){const w=b+M*i;this.createEditHandle(w,this.radius),this.setEditHandlePosition(w,e[w])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const y=this.controlPoints.getWidth()+3,g=this.controlPoints.getHeight()+3;this.collisionGeometry=pt(fi(this.controlPoints,y,g,this.degree,this.closedU,this.closedV),y,g),this.collisionMesh=new $(this.collisionGeometry,new Lt({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(h=>new x(h.x,h.y,h.z)),i=new T(t.color),s=new x(t.position.x,t.position.y,t.position.z),n=t.mode;if(Ps[n]===void 0)throw new Error("Invalid UniformBSplineSurfaceObjectMode mode");const a=Bi()[t.shadingModel.name].create();a.fromJSON(t.shadingModel.params);const r=new Ii(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree,i,s,n,a,t.closedU,t.closedV);return r.setReflectivity(t.reflectivity),r}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),a=new x(0,o.y,o.z),r=new x(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):this.addControlPointRowCol(s,n,o);for(let h=0;h<this.controlPoints.getWidth();h++)for(let l=0;l<this.controlPoints.getHeight();l++){const u=h+l*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(l,h))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,s,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(je())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+3,e=this.controlPoints.getHeight()+3;this.collisionGeometry=pt(fi(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=fi(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=pt(t,100,100),i=new zi({color:this.color,side:2}),s=new $(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function us(c,t){const{newPoints:e,uKnots:i,vKnots:s}=Vn(c,t),n=[];for(let o=t;o<i.length-t-1;o++)if(i[o]!==i[o+1])for(let a=t;a<s.length-t-1;a++){if(s[a]===s[a+1])continue;const r=[];for(let h=0;h<=t;h++){const l=[];for(let u=0;u<=t;u++)l.push(e[o-t+h][a-t+u]);r.push(l)}n.push(r)}return n}function Vn(c,t){let e=Gt(t,c.length-1),i=Gt(t,c[0].length-1),s=[],n=[],o=[];for(const r of c){const{newPoints:h,newKnots:l}=ds(r,t,i);s.push(h),o=l}const a=s[0].map((r,h)=>s.map(l=>l[h]));s=[];for(const r of a){const{newPoints:h,newKnots:l}=ds(r,t,e);s.push(h),n=l}return s=s[0].map((r,h)=>s.map(l=>l[h])),{newPoints:s,uKnots:n,vKnots:o}}function ds(c,t,e){let i=c.slice(),s=e.slice();for(let n=t;n<=e.length-t-1;n++){const o=e[n];for(let a=0;a<t-1;a++)({newPoints:i,newKnots:s}=Un(i,t,s,o))}return{newPoints:i,newKnots:s}}function Un(c,t,e,i){const s=e[t],n=e[e.length-t-1];if(i<s||i>n)return console.error("knotInsertion1D: t is out of bounds",i,"not in range [",s,",",n,"]"),{newPoints:[],newKnots:[]};let o=0,a=!1,r=[];for(let l=0;l<e.length;l++)r.push(e[l]),e[l]<=i&&i<e[l+1]&&!a&&(o=l,r.push(i),a=!0);let h=[];for(let l=0;l<=o-t;l++)h.push(c[l]);for(let l=o-t+1;l<=o;l++){const u=(i-e[l])/(e[l+t]-e[l]);if(u===0)h.push(c[l-1]);else if(u===1)h.push(c[l]);else{const d=c[l-1].clone().lerp(c[l],u);h.push(d)}}for(let l=o;l<c.length;l++)h.push(c[l]);return{newPoints:h,newKnots:r}}function On(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec4 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord);
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 numerator = vec3(0.0);
        float denominator = 0.0;
        vec3 numeratorU = vec3(0.0);
        float denominatorU = 0.0;
        vec3 numeratorV = vec3(0.0);
        float denominatorV = 0.0;

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);

            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec4 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);

                float weightedBasis = controlPoint.w * basisU * basisV;
                float weightedBasisU = controlPoint.w * basisUDerivative * basisV;
                float weightedBasisV = controlPoint.w * basisU * basisVDerivative;

                numerator += controlPoint.xyz * weightedBasis;
                denominator += weightedBasis;

                numeratorU += controlPoint.xyz * weightedBasisU;
                denominatorU += weightedBasisU;

                numeratorV += controlPoint.xyz * weightedBasisV;
                denominatorV += weightedBasisV;
            }
        }

        vec3 basisPoint = numerator / denominator;
        vec3 tangentU = (numeratorU / denominator) - (numerator * denominatorU / (denominator * denominator));
        vec3 tangentV = (numeratorV / denominator) - (numerator * denominatorV / (denominator * denominator));

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}var Ss=(c=>(c[c.OBJECT=0]="OBJECT",c[c.CONTROL_POINTS=1]="CONTROL_POINTS",c[c.SHADING=2]="SHADING",c))(Ss||{});class Vi extends Ai{mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;weightEditIndex=-1;weightEditRing;closedU;closedV;reflectivity=0;constructor(t,e,i,s,n=2,o=new T(0),a=new x(0,0,0),r=1,h=new Le,l=!1,u=!1){if(l&&u)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const d=new Ei(i,s);for(let w=0;w<i;w++)for(let v=0;v<s;v++){const C=w+v*i;d.setPoint4(v,w,e[C])}const m=new oe(0,0,100,100),p=new Ri(On(),d,o,h,{degree:{value:n},closedU:{value:l},closedV:{value:u}}),f=new $(m,p.getMaterial());super(t,f,a),this.controlPoints=d,this.geometry=m,this.material=p,this.mode=r,this.color=o,this.degree=n,this.closedU=l,this.closedV=u,this.type="UniformRationalBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let w=0;w<i;w++)for(let v=0;v<s;v++){const C=w+v*i;this.createEditHandle(C,this.radius),this.setEditHandlePosition(C,this.controlPoints.getPoint(v,w))}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const y=this.controlPoints.getWidth()+1,g=this.controlPoints.getHeight()+1;this.collisionGeometry=pt(gi(this.controlPoints,y,g,this.degree,this.closedU,this.closedV),y,g),this.collisionMesh=new $(this.collisionGeometry,new Lt({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh);const b=new Pi(.05,.06,32),M=new Lt({color:ki(),depthTest:!1,side:2});this.weightEditRing=new $(b,M),f.add(this.weightEditRing),this.weightEditRing.visible=!1,A.onOrbitControlsChange(()=>{this.weightEditIndex!==-1&&this.weightEditRing.lookAt(A.getCamera().position)}),window.addEventListener("wheel",w=>{if(this.weightEditIndex!==-1){const v=this.getControlPoint(this.weightEditIndex);v.w+=w.deltaY*.01,v.w<1&&(v.w=1),v.w>10&&(v.w=10),this.updateControlPoint(this.weightEditIndex,v),Et.notify("objectChanged",Ct.VIEWPORT,this)}})}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints4().map(t=>({x:t.x,y:t.y,z:t.z,w:t.w})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(h=>new O(h.x,h.y,h.z,h.w)),i=new T(t.color),s=new x(t.position.x,t.position.y,t.position.z),n=t.mode;if(Ss[n]===void 0)throw new Error("Invalid UniformRationalBSplineSurfaceObjectMode mode");const a=Bi()[t.shadingModel.name].create();a.fromJSON(t.shadingModel.params);const r=new Vi(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree,i,s,n,a,t.closedU,t.closedV);return r.setReflectivity(t.reflectivity),r}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint3(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing(),this.collisionMesh.userData.collision=!0}showWeightEditRing(t){this.weightEditIndex=t,this.updateWeightEditRing(),this.weightEditRing.visible=!0,A.noScroll()}hideWeightEditRing(){this.weightEditIndex=-1,this.weightEditRing.visible=!1,A.scroll()}updateWeightEditRing(){if(this.weightEditIndex===-1)return;const t=this.getControlPoint(this.weightEditIndex);this.weightEditRing.position.set(t.x,t.y,t.z);const e=vn(t.w,1,10,8,20);this.weightEditRing.scale.set(e,e,e),this.weightEditRing.lookAt(A.getCamera().position)}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),a=new x(0,o.y,o.z),r=new x(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,a),this.addControlPointRowCol(-1,n,r)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,r),this.addControlPointRowCol(s,-1,a)):this.addControlPointRowCol(s,n,o);for(let h=0;h<this.controlPoints.getWidth();h++)for(let l=0;l<this.controlPoints.getHeight();l++){const u=h+l*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(l,h))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint3(t,e){this.updateControlPoint(t,new O(e.x,e.y,e.z,this.getControlPoint(t).w))}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();if(this.controlPoints.setPoint4(i,s,e),this.hasEditHandle(t)){const n=new x(e.x,e.y,e.z);this.setEditHandlePosition(t,n)}this.updateCollisionGeometry(),this.weightEditIndex===t&&this.updateWeightEditRing()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint4(e,i)}highlight(){this.material.setColor(je())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=pt(gi(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=gi(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=pt(t,100,100),i=new zi({color:this.color,side:2}),s=new $(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function Hn(){const c=[],t=A.getObjectManager().getObjects();for(const e of t)if(e instanceof Di){const i=e.toJSON(),s=i.controlPointsWidth,n=i.controlPointsHeight,o=[];for(let r=0;r<n;r++){o[r]=[];for(let h=0;h<s;h++){const l=i.controlPoints[r*s+h];o[r][h]=new O(l.x,l.y,l.z,1)}}const a=new pi(o,e.getPosition(),new T(i.color),e.getReflectivity());c.push(a)}else if(e instanceof Ii){const i=e.toJSON(),s=i.controlPointsWidth+(i.closedU?i.degree:0),n=i.controlPointsHeight+(i.closedV?i.degree:0),o=[];for(let r=0;r<n;r++){o[r]=[];for(let h=0;h<s;h++){const l=r%i.controlPointsHeight,u=h%i.controlPointsWidth,d=i.controlPoints[l*i.controlPointsWidth+u];o[r][h]=new O(d.x,d.y,d.z,1)}}const a=us(o,i.degree);for(const r of a){const h=new pi(r,e.getPosition(),new T(i.color),i.reflectivity);c.push(h)}}else if(e instanceof Vi){const i=e.toJSON(),s=i.controlPointsWidth+(i.closedU?i.degree:0),n=i.controlPointsHeight+(i.closedV?i.degree:0),o=[];for(let r=0;r<n;r++){o[r]=[];for(let h=0;h<s;h++){const l=r%i.controlPointsHeight,u=h%i.controlPointsWidth,d=i.controlPoints[l*i.controlPointsWidth+u];o[r][h]=new O(d.x*d.w,d.y*d.w,d.z*d.w,d.w)}}const a=us(o,i.degree);for(const r of a){const h=new pi(r,e.getPosition(),new T(i.color),i.reflectivity);c.push(h)}}return c}var Mi=(c=>(c.INFO="INFO",c.SUCCESS="SUCCESS",c))(Mi||{});const yi=128;var vt=[],Re=0,zs=[],Wt=new Uint8ClampedArray(0);function Nn(c,t,e,i){const s=[],{width:n,height:o}=c;for(let a=0;a<o;a+=t)for(let r=0;r<n;r+=t){const h=Math.min(t,n-r),l=Math.min(t,o-a);s.push({started:!1,batch:{workerId:-1,task:c,xStart:r,yStart:a,width:h,height:l,supersamplingFactor:e,suppixelOffsets:i}})}return s}function Wn(c){const t=[],e=1/c;for(let i=0;i<c;i++)for(let s=0;s<c;s++)t.push({dx:(i+.5)*e-.5,dy:(s+.5)*e-.5});return t}function Ln(c,t,e,i,s,n,o,a){for(let h=0;h<n;h++)for(let l=0;l<s;l++){const u=(h*s+l)*4,d=e+l,m=i+h;if(d>=o||m>=a)continue;const p=(m*o+d)*4;for(let f=0;f<4;f++)c[p+f]=t[u+f]}}self.onmessage=async c=>{const t=c.data,e=t.ambientLight,i=t.directionalLight,s=t.camera,n=new ws(s.fov,t.width/t.height,.1,1e3);n.position.copy(s.position),n.rotation.copy(s.rotation),n.up.copy(s.up),n.updateProjectionMatrix(),n.updateMatrixWorld(),e.color=new T(e.color.r,e.color.g,e.color.b),i.direction=new x(i.direction.x,i.direction.y,i.direction.z).normalize(),i.color=new T(i.color.r,i.color.g,i.color.b),Wt=new Uint8ClampedArray(t.width*t.height*4);const o=Wn(t.supersamplingFactor),a={type:"INFO",messages:["Dimensions: "+t.width+"x"+t.height,"Found "+t.objects.length+" objects","Bounces: "+t.bounces,"Supersampling: "+t.supersamplingFactor*t.supersamplingFactor+"x","Starting to raytrace..."],progress:0,data:Wt,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(a);var r=[];vt=Nn(t,yi,t.supersamplingFactor,o),r.push("Created "+vt.length+" batches with size "+yi+"x"+yi+"!");const h=Math.min(Math.max(4,navigator.hardwareConcurrency-6),vt.length);r.push("Using "+h+" workers!");try{for(let u=0;u<h;u++){r.push("Creating Worker-"+u+" ...");const d=new Worker(t.workerURL,{type:"module"});zs.push(d),d.onmessage=jn,r.push("Starting Worker-"+u+" ...");const m=vt[u];m.started=!0,m.batch.workerId=u,d.postMessage(m.batch)}}catch(u){r.push("Error creating workers: "+u)}const l={type:"INFO",messages:r,progress:0,data:Wt,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(l)};function jn(c){const t=c.data;Ln(Wt,t.data,t.xStart,t.yStart,t.width,t.height,t.task.width,t.task.height),Re++;const e=Math.round(Re/vt.length*100),i={type:"INFO",messages:["Batch "+Re+" of "+vt.length+" finished!"],progress:e,data:Wt,width:t.task.width,height:t.task.height,startTime:t.startTime};if(self.postMessage(i),Re<vt.length){const n=vt.filter(a=>!a.started)[0],o=zs[t.workerId];n&&(n.started=!0,n.batch.workerId=t.workerId,o.postMessage(n.batch));return}const s={type:"SUCCESS",messages:["All batches finished!","Raytracing finished!"],progress:100,data:Wt,width:t.task.width,height:t.task.height,startTime:t.startTime,objects:t.task.objects};self.postMessage(s)}var Gn=self.location.href;function qn(c,t,e){const i=t.clone().sub(c.position),s=new Oe(i,e.clone().normalize()),n=Jn(s),o=$n(c),a=Es(o,n,7);if(a.length===0)return{hit:!1,distance:0,u:0,v:0,normal:new x};a[0];let r=[];for(const p of a){const y=Qn(p).distanceToSquared(i);r.push({patch:p,distance:y})}r.sort((p,f)=>p.distance-f.distance);var h={u:0,v:0},l=!1;for(const p of r){const f=p.patch,y=new E((f.u.x+f.u.y)/2,(f.v.x+f.v.y)/2),b=io(i,e,c.controlPoints,{u:y.x,v:y.y},10,Ve.EPSILON);if(b.converged){p.patch,h=b,l=!0;break}}if(!l)return{hit:!1,distance:0,u:0,v:0,normal:new x};const u=As(c.controlPoints,h.u,h.v),d=eo(u.du,u.dv);return{hit:!0,distance:u.point.distanceTo(i),u:h.u,v:h.v,normal:d}}function Xn(c,t,e,i,s,n,o){if(!t.hit)return{color:new T(0,0,0),normal:new x(0,0,0)};const a=e.clone().add(i.clone().normalize().multiplyScalar(t.distance)),r=t.normal.clone().normalize(),h=n.direction.clone().normalize(),l=e.clone().sub(a).normalize(),u=h.clone().add(l).normalize(),d=o?0:Math.max(0,r.dot(h))*n.intensity,p=o?0:Math.pow(Math.max(0,r.dot(u)),32)*n.intensity,f=n.color.clone().multiplyScalar(d),y=n.color.clone().multiplyScalar(p),b=s.color.clone().multiplyScalar(s.intensity).add(f).add(y),w=new T(c.color.r,c.color.g,c.color.b).multiply(b);return t.debugColor&&w.copy(t.debugColor),{color:w,normal:r}}function Jn(c){const t=c.origin,e=c.direction.clone().normalize(),i=new x;Math.abs(e.y)<.99?i.set(0,1,0):i.set(1,0,0);const s=new x().crossVectors(e,i).normalize(),n=new x().crossVectors(e,s).normalize(),o=new tt;return o.set(s.x,n.x,e.x,s.y,n.y,e.y,s.z,n.z,e.z),o.transpose(),{origin:t,direction:e,projectionMatrix:o}}function Yn(c,t){const i=Ge(c.position).clone().sub(t.origin);return i.applyMatrix3(t.projectionMatrix),new E(i.x,i.y)}function Zn(c){const t=new E(1/0,1/0),e=new E(-1/0,-1/0);for(const i of c)t.min(i),e.max(i);return t.x<=0&&e.x>=0&&t.y<=0&&e.y>=0}function ms(c,t=.5){const e=[c.map(n=>({position:n.position.clone(),uv:n.uv.clone()}))];for(let n=1;n<c.length;n++){const o=e[n-1],a=[];for(let r=0;r<o.length-1;r++){const h=o[r],l=o[r+1],u=h.position.clone().lerp(l.position,t),d=h.uv.clone().lerp(l.uv,t);a.push({position:u,uv:d})}e.push(a)}const i=e.map(n=>n[0]),s=e.map(n=>n[n.length-1]).reverse();return{left:i,right:s}}function Kn(c,t=.5){const{controlPoints:e,u:i,v:s}=c,n=e.length,o=e[0].length,a=[],r=[];for(let C=0;C<o;C++){const P=e.map(F=>F[C]),{left:S,right:_}=ms(P,t);a.push(S),r.push(_)}const h=ps(a),l=ps(r),u=C=>{const P=[],S=[];for(let _=0;_<n;_++){const F=C[_],{left:R,right:et}=ms(F,t);P.push(R),S.push(et)}return[P,S]},[d,m]=u(h),[p,f]=u(l),y=i.x+(i.y-i.x)*t,g=s.x+(s.y-s.x)*t,b={controlPoints:d,u:new E(i.x,y),v:new E(s.x,g),level:c.level+1},M={controlPoints:p,u:new E(y,i.y),v:new E(s.x,g),level:c.level+1},w={controlPoints:m,u:new E(i.x,y),v:new E(g,s.y),level:c.level+1},v={controlPoints:f,u:new E(y,i.y),v:new E(g,s.y),level:c.level+1};return[b,M,w,v]}function ps(c){return c[0].map((t,e)=>c.map(i=>i[e]))}function $n(c){if(c.data.patch)return c.data.patch;const t=[];for(let i=0;i<c.controlPoints.length;i++){const s=[];for(let n=0;n<c.controlPoints[i].length;n++){const o=c.controlPoints[i][n],a=new O(o.x,o.y,o.z,o.w);s.push({position:a,uv:new E(i/(c.controlPoints.length-1),n/(c.controlPoints[i].length-1))})}t.push(s)}const e={controlPoints:t,u:new E(0,1),v:new E(0,1),level:0};return c.data.patch=e,e}function Es(c,t,e){if(to(c,t))return[];const i=c.controlPoints.map(a=>a.map(r=>Yn(r,t)));if(!Zn(i.flat()))return[];if(e<=0)return[c];const n=c.subdivisions?c.subdivisions:Kn(c,.5);c.level<5&&(c.subdivisions=n);const o=[];for(const a of n){const r=Es(a,t,e-1);o.push(...r)}return o}function Qn(c){const t=c.controlPoints.length-1,e=c.controlPoints[0].length-1,i=new x(0,0,0);var s=0;for(let n=0;n<=t;n++){const o=ot(t,n,.5);for(let a=0;a<=e;a++){const r=Ge(c.controlPoints[n][a].position),h=c.controlPoints[n][a].position.w,l=ot(e,a,.5),u=h*o*l;i.add(r.multiplyScalar(u)),s+=u}}return i.divideScalar(s)}function to(c,t){for(const e of c.controlPoints.flat())if(Ge(e.position).sub(t.origin).dot(t.direction)>0)return!1;return!0}function As(c,t,e){const i=c.length-1,s=c[0].length-1,n=new x(0,0,0);var o=0;const a=new x(0,0,0);var r=0;const h=new x(0,0,0);var l=0;for(let p=0;p<=i;p++){const f=ot(i,p,t),y=cs(i,p,t);for(let g=0;g<=s;g++){const b=Ge(c[p][g]),M=c[p][g].w,w=ot(s,g,e),v=cs(s,g,e),C=M*f*w,P=M*y*w,S=M*f*v;n.add(b.clone().multiplyScalar(C)),o+=C,a.add(b.clone().multiplyScalar(P)),r+=P,h.add(b.clone().multiplyScalar(S)),l+=S}}const u=n.clone().divideScalar(o),d=a.clone().divideScalar(o).sub(n.clone().multiplyScalar(r/(o*o))),m=h.clone().divideScalar(o).sub(n.clone().multiplyScalar(l/(o*o)));return{point:u,du:d,dv:m}}function eo(c,t){const e=new x;return e.crossVectors(c,t),e.normalize(),e}function io(c,t,e,i,s=10,n=Ve.EPSILON){let o=i.u,a=i.v;const r=t.clone().normalize(),h=new x,l=new x;for(let u=0;u<s;u++){const{point:d,du:m,dv:p}=As(e,o,a);h.copy(d).sub(c);const f=h.dot(r);l.copy(r).multiplyScalar(f).add(c);const y=d.clone().sub(l),g=[y.dot(m),y.dot(p)],b=m.dot(r),M=p.dot(r),w=[[m.dot(m)-b*b,m.dot(p)-b*M],[p.dot(m)-M*b,p.dot(p)-M*M]],v=w[0][0]*w[1][1]-w[0][1]*w[1][0];if(!isFinite(v)||Math.abs(v)<n*n)break;const C=[[w[1][1]/v,-w[0][1]/v],[-w[1][0]/v,w[0][0]/v]],P=-(C[0][0]*g[0]+C[0][1]*g[1]),S=-(C[1][0]*g[0]+C[1][1]*g[1]);if(o+=P,a+=S,o=Math.max(0,Math.min(1,o)),a=Math.max(0,Math.min(1,a)),Math.sqrt(P*P+S*S)<n&&y.lengthSq()<n*n)return{converged:!0,u:o,v:a,steps:u+1}}return{converged:!1,u:o,v:a,steps:s}}class Ve{static dialog=null;static EPSILON=1e-4;static prepareTask(t,e,i,s,n){const o=A.getPerspectiveCamera();if(o===null)throw new Error("Trying to raytrace in 2D mode!");const r=A.getDirectionalLight().position.clone().normalize(),h=Hn();return{startTime:0,width:t,height:e,bounces:i,skybox:s,supersamplingFactor:n,quality:wi.HIGH,objects:h,ambientLight:{color:A.getAmbientLight().color.clone(),intensity:A.getAmbientLight().intensity},directionalLight:{direction:r,color:A.getDirectionalLight().color.clone(),intensity:A.getDirectionalLight().intensity},camera:{position:o.position.clone(),rotation:o.rotation.clone(),fov:o.fov,up:o.up.clone()},workerURL:Gn}}static execute(t){this.dialog||(this.dialog=new Rn),this.dialog.show(),this.dialog.setProgress(0),this.dialog.log("Starting Raytracer..."),this.dialog.log("Creating Worker...");const e=new Worker(new URL("/assets/raytracerWorker-B8wlQnE5.js",import.meta.url),{type:"module"});e.onmessage=this.onMessage.bind(this),this.dialog.log("Starting Worker..."),t.startTime=Date.now(),e.postMessage(t)}static onMessage(t){if(!this.dialog)return;const e=t.data.type;if(e===Mi.INFO)t.data.messages.forEach(i=>{this.dialog&&this.dialog.logInfo("Worker: "+i)}),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.setProgress(t.data.progress);else if(e===Mi.SUCCESS){this.dialog.setProgress(100),this.dialog.logInfo("Worker: "+t.data.messages[0]),this.dialog.logSuccess("Worker finished!");const i=Date.now()-t.data.startTime,s=Math.floor(i/6e4),n=(i%6e4/1e3).toFixed(2);s>0?this.dialog.logSuccess(`Raytracing took ${s.toString()} minutes and ${n} seconds`):this.dialog.logSuccess(`Raytracing took ${n} seconds`),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.allowDownload(()=>{this.dialog&&(this.dialog.logSuccess("Download started..."),this.downloadImage(t.data.data,t.data.width,t.data.height))}),this.dialog.allowClose(()=>{this.dialog&&this.dialog.hide()})}}static raytrace(t,e,i,s,n,o,a,r){if(i<0)return s?this.raytraceSkybox(e,new T(.5,.7,1)):new T(0,0,0);var h=void 0,l=void 0,u=Number.MAX_VALUE;for(const d of n){const m=this.rayhitObject(d,t,e,r);m.hit&&m.distance<u&&(u=m.distance,h=d,l=m)}if(h&&l){const d=t.clone().add(e.clone().multiplyScalar(u)).add(l.normal.clone().multiplyScalar(.1)),m=this.shadowRay(d,n,h,a),p=this.raytraceObject(h,l,t,e,o,a,m,r);if(h.reflectivity>0){const f=e.clone().reflect(l.normal).normalize(),y=n,g=this.raytrace(d,f,i-1,s,y,o,a,r);p.color.lerp(g,h.reflectivity)}return p.color}else return s?this.raytraceSkybox(e,new T(.5,.7,1)):new T(0,0,0)}static raytraceObject(t,e,i,s,n,o,a,r){switch(t.type){case bi.BezierPatch:return Xn(t,e,i,s,n,o,a)}return{color:new T(0,0,0),normal:new x(0,0,0)}}static rayhitObject(t,e,i,s,n=!1){switch(t.type){case bi.BezierPatch:return qn(t,e,i)}return{hit:!1,distance:0,u:0,v:0,normal:new x}}static shadowRay(t,e,i,s){const n=s.direction.clone().normalize(),o=t.clone();for(const a of e)if(this.rayhitObject(a,o,n,wi.LOW,!0).hit)return!0;return!1}static raytraceSkybox(t,e){const i=t.y,s=new T(.5,.5,.5),n=new T(.2,.2,.2),o=e.clone().multiplyScalar(.5),a=e.clone(),r=.5*(i+1);return i>0?a.clone().lerp(o,r):n.clone().lerp(s,r)}static setPixel(t,e,i,s,n){const o=(s*e+i)*4;t[o]=Math.floor(n.r*255),t[o+1]=Math.floor(n.g*255),t[o+2]=Math.floor(n.b*255),t[o+3]=255}static downloadImage(t,e,i){const s=new ImageData(t,e,i),n=document.createElement("canvas");n.width=e,n.height=i;const o=n.getContext("2d");if(o){o.putImageData(s,0,0);const a=n.toDataURL("image/png"),r=document.createElement("a");r.href=a,r.download="raytrace.png",r.click()}else throw new Error("Failed to get canvas context")}}self.onmessage=async c=>{const t=c.data,e=t.task,i=e.ambientLight,s=e.directionalLight,n=e.camera,o=new ws(n.fov,e.width/e.height,.1,1e3);o.position.copy(n.position),o.rotation.copy(n.rotation),o.up.copy(n.up),o.updateProjectionMatrix(),o.updateMatrixWorld(),i.color=new T(i.color.r,i.color.g,i.color.b),s.direction=new x(s.direction.x,s.direction.y,s.direction.z).normalize(),s.color=new T(s.color.r,s.color.g,s.color.b);const a=new Uint8ClampedArray(t.width*t.height*4),r=o.position.clone();for(let l=t.xStart;l<t.xStart+t.width;l++)for(let u=t.yStart;u<t.yStart+t.height;u++){const d=l-t.xStart,m=u-t.yStart,p=new T(0,0,0);for(const f of t.suppixelOffsets){const y=(l+f.dx)/e.width*2-1,g=1-(u+f.dy)/e.height*2,b=new xn;b.setFromCamera(new E(y,g),o);const M=b.ray.direction.clone().normalize(),w=Ve.raytrace(r,M,e.bounces,e.skybox,e.objects,i,s,e.quality);p.add(w)}p.multiplyScalar(1/(t.supersamplingFactor*t.supersamplingFactor)),Ve.setPixel(a,t.width,d,m,p)}const h={workerId:t.workerId,progress:100,data:a,xStart:t.xStart,yStart:t.yStart,width:t.width,height:t.height,startTime:e.startTime,task:e};self.postMessage(h)};
