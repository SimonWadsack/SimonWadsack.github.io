/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ls="174";const Ws="",ot="srgb",hs="srgb-linear",ls="linear",ci="srgb";class $e{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return i===void 0?!1:i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){const i=this._listeners;if(i===void 0)return;const s=i[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const i=e[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,o=s.length;n<o;n++)s[n].call(this,t);t.target=null}}}const k=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let cs=1234567;const de=Math.PI/180,qe=180/Math.PI;function oe(){const h=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(k[h&255]+k[h>>8&255]+k[h>>16&255]+k[h>>24&255]+"-"+k[t&255]+k[t>>8&255]+"-"+k[t>>16&15|64]+k[t>>24&255]+"-"+k[e&63|128]+k[e>>8&255]+"-"+k[e>>16&255]+k[e>>24&255]+k[i&255]+k[i>>8&255]+k[i>>16&255]+k[i>>24&255]).toLowerCase()}function T(h,t,e){return Math.max(t,Math.min(e,h))}function ji(h,t){return(h%t+t)%t}function dn(h,t,e,i,s){return i+(h-t)*(s-i)/(e-t)}function mn(h,t,e){return h!==t?(e-h)/(t-h):0}function me(h,t,e){return(1-e)*h+e*t}function pn(h,t,e,i){return me(h,t,1-Math.exp(-e*i))}function gn(h,t=1){return t-Math.abs(ji(h,t*2)-t)}function fn(h,t,e){return h<=t?0:h>=e?1:(h=(h-t)/(e-t),h*h*(3-2*h))}function yn(h,t,e){return h<=t?0:h>=e?1:(h=(h-t)/(e-t),h*h*h*(h*(h*6-15)+10))}function xn(h,t){return h+Math.floor(Math.random()*(t-h+1))}function wn(h,t){return h+Math.random()*(t-h)}function vn(h){return h*(.5-Math.random())}function bn(h){h!==void 0&&(cs=h);let t=cs+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Mn(h){return h*de}function Pn(h){return h*qe}function Cn(h){return(h&h-1)===0&&h!==0}function Sn(h){return Math.pow(2,Math.ceil(Math.log(h)/Math.LN2))}function En(h){return Math.pow(2,Math.floor(Math.log(h)/Math.LN2))}function zn(h,t,e,i,s){const n=Math.cos,o=Math.sin,r=n(e/2),a=o(e/2),l=n((t+i)/2),c=o((t+i)/2),u=n((t-i)/2),d=o((t-i)/2),m=n((i-t)/2),p=o((i-t)/2);switch(s){case"XYX":h.set(r*c,a*u,a*d,r*l);break;case"YZY":h.set(a*d,r*c,a*u,r*l);break;case"ZXZ":h.set(a*u,a*d,r*c,r*l);break;case"XZX":h.set(r*c,a*p,a*m,r*l);break;case"YXY":h.set(a*m,r*c,a*p,r*l);break;case"ZYZ":h.set(a*p,a*m,r*c,r*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function ee(h,t){switch(t.constructor){case Float32Array:return h;case Uint32Array:return h/4294967295;case Uint16Array:return h/65535;case Uint8Array:return h/255;case Int32Array:return Math.max(h/2147483647,-1);case Int16Array:return Math.max(h/32767,-1);case Int8Array:return Math.max(h/127,-1);default:throw new Error("Invalid component type.")}}function L(h,t){switch(t.constructor){case Float32Array:return h;case Uint32Array:return Math.round(h*4294967295);case Uint16Array:return Math.round(h*65535);case Uint8Array:return Math.round(h*255);case Int32Array:return Math.round(h*2147483647);case Int16Array:return Math.round(h*32767);case Int8Array:return Math.round(h*127);default:throw new Error("Invalid component type.")}}const js={DEG2RAD:de,RAD2DEG:qe,generateUUID:oe,clamp:T,euclideanModulo:ji,mapLinear:dn,inverseLerp:mn,lerp:me,damp:pn,pingpong:gn,smoothstep:fn,smootherstep:yn,randInt:xn,randFloat:wn,randFloatSpread:vn,seededRandom:bn,degToRad:Mn,radToDeg:Pn,isPowerOfTwo:Cn,ceilPowerOfTwo:Sn,floorPowerOfTwo:En,setQuaternionFromProperEuler:zn,normalize:L,denormalize:ee};class E{constructor(t=0,e=0){E.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=T(this.x,t.x,e.x),this.y=T(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=T(this.x,t,e),this.y=T(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(T(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(T(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,o=this.y-t.y;return this.x=n*i-o*s+t.x,this.y=n*s+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class lt{constructor(t,e,i,s,n,o,r,a,l){lt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,o,r,a,l)}set(t,e,i,s,n,o,r,a,l){const c=this.elements;return c[0]=t,c[1]=s,c[2]=r,c[3]=e,c[4]=n,c[5]=a,c[6]=i,c[7]=o,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,o=i[0],r=i[3],a=i[6],l=i[1],c=i[4],u=i[7],d=i[2],m=i[5],p=i[8],f=s[0],x=s[3],y=s[6],b=s[1],v=s[4],w=s[7],M=s[2],P=s[5],C=s[8];return n[0]=o*f+r*b+a*M,n[3]=o*x+r*v+a*P,n[6]=o*y+r*w+a*C,n[1]=l*f+c*b+u*M,n[4]=l*x+c*v+u*P,n[7]=l*y+c*w+u*C,n[2]=d*f+m*b+p*M,n[5]=d*x+m*v+p*P,n[8]=d*y+m*w+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],r=t[5],a=t[6],l=t[7],c=t[8];return e*o*c-e*r*l-i*n*c+i*r*a+s*n*l-s*o*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],r=t[5],a=t[6],l=t[7],c=t[8],u=c*o-r*l,d=r*a-c*n,m=l*n-o*a,p=e*u+i*d+s*m;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=u*f,t[1]=(s*l-c*i)*f,t[2]=(r*i-s*o)*f,t[3]=d*f,t[4]=(c*e-s*a)*f,t[5]=(s*n-r*e)*f,t[6]=m*f,t[7]=(i*a-l*e)*f,t[8]=(o*e-i*n)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,o,r){const a=Math.cos(n),l=Math.sin(n);return this.set(i*a,i*l,-i*(a*o+l*r)+o+t,-s*l,s*a,-s*(-l*o+a*r)+r+e,0,0,1),this}scale(t,e){return this.premultiply(ui.makeScale(t,e)),this}rotate(t){return this.premultiply(ui.makeRotation(-t)),this}translate(t,e){return this.premultiply(ui.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const ui=new lt;function An(h){for(let t=h.length-1;t>=0;--t)if(h[t]>=65535)return!0;return!1}function us(h){return document.createElementNS("http://www.w3.org/1999/xhtml",h)}const ds=new lt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),ms=new lt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Tn(){const h={enabled:!0,workingColorSpace:hs,spaces:{},convert:function(s,n,o){return this.enabled===!1||n===o||!n||!o||(this.spaces[n].transfer===ci&&(s.r=bt(s.r),s.g=bt(s.g),s.b=bt(s.b)),this.spaces[n].primaries!==this.spaces[o].primaries&&(s.applyMatrix3(this.spaces[n].toXYZ),s.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===ci&&(s.r=ie(s.r),s.g=ie(s.g),s.b=ie(s.b))),s},fromWorkingColorSpace:function(s,n){return this.convert(s,this.workingColorSpace,n)},toWorkingColorSpace:function(s,n){return this.convert(s,n,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Ws?ls:this.spaces[s].transfer},getLuminanceCoefficients:function(s,n=this.workingColorSpace){return s.fromArray(this.spaces[n].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,n,o){return s.copy(this.spaces[n].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],i=[.3127,.329];return h.define({[hs]:{primaries:t,whitePoint:i,transfer:ls,toXYZ:ds,fromXYZ:ms,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:ot},outputColorSpaceConfig:{drawingBufferColorSpace:ot}},[ot]:{primaries:t,whitePoint:i,transfer:ci,toXYZ:ds,fromXYZ:ms,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:ot}}}),h}const et=Tn();function bt(h){return h<.04045?h*.0773993808:Math.pow(h*.9478672986+.0521327014,2.4)}function ie(h){return h<.0031308?h*12.92:1.055*Math.pow(h,.41666)-.055}let jt;class Bn{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{jt===void 0&&(jt=us("canvas")),jt.width=t.width,jt.height=t.height;const i=jt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=jt}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=us("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let o=0;o<n.length;o++)n[o]=bt(n[o]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(bt(e[i]/255)*255):e[i]=bt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let _n=0;class Vn{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:_n++}),this.uuid=oe(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let o=0,r=s.length;o<r;o++)s[o].isDataTexture?n.push(di(s[o].image)):n.push(di(s[o]))}else n=di(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function di(h){return typeof HTMLImageElement<"u"&&h instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&h instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&h instanceof ImageBitmap?Bn.getDataURL(h):h.data?{data:Array.from(h.data),width:h.width,height:h.height,type:h.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Fn=0;class mt extends $e{constructor(t=mt.DEFAULT_IMAGE,e=mt.DEFAULT_MAPPING,i=1001,s=1001,n=1006,o=1008,r=1023,a=1009,l=mt.DEFAULT_ANISOTROPY,c=Ws){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Fn++}),this.uuid=oe(),this.name="",this.source=new Vn(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=o,this.anisotropy=l,this.format=r,this.internalFormat=null,this.type=a,this.offset=new E(0,0),this.repeat=new E(1,1),this.center=new E(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}mt.DEFAULT_IMAGE=null;mt.DEFAULT_MAPPING=300;mt.DEFAULT_ANISOTROPY=1;class R{constructor(t=0,e=0,i=0,s=1){R.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*s+o[12]*n,this.y=o[1]*e+o[5]*i+o[9]*s+o[13]*n,this.z=o[2]*e+o[6]*i+o[10]*s+o[14]*n,this.w=o[3]*e+o[7]*i+o[11]*s+o[15]*n,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,n;const a=t.elements,l=a[0],c=a[4],u=a[8],d=a[1],m=a[5],p=a[9],f=a[2],x=a[6],y=a[10];if(Math.abs(c-d)<.01&&Math.abs(u-f)<.01&&Math.abs(p-x)<.01){if(Math.abs(c+d)<.1&&Math.abs(u+f)<.1&&Math.abs(p+x)<.1&&Math.abs(l+m+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,w=(m+1)/2,M=(y+1)/2,P=(c+d)/4,C=(u+f)/4,S=(p+x)/4;return v>w&&v>M?v<.01?(i=0,s=.707106781,n=.707106781):(i=Math.sqrt(v),s=P/i,n=C/i):w>M?w<.01?(i=.707106781,s=0,n=.707106781):(s=Math.sqrt(w),i=P/s,n=S/s):M<.01?(i=.707106781,s=.707106781,n=0):(n=Math.sqrt(M),i=C/n,s=S/n),this.set(i,s,n,e),this}let b=Math.sqrt((x-p)*(x-p)+(u-f)*(u-f)+(d-c)*(d-c));return Math.abs(b)<.001&&(b=1),this.x=(x-p)/b,this.y=(u-f)/b,this.z=(d-c)/b,this.w=Math.acos((l+m+y-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=T(this.x,t.x,e.x),this.y=T(this.y,t.y,e.y),this.z=T(this.z,t.z,e.z),this.w=T(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=T(this.x,t,e),this.y=T(this.y,t,e),this.z=T(this.z,t,e),this.w=T(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(T(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class we{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,o,r){let a=i[s+0],l=i[s+1],c=i[s+2],u=i[s+3];const d=n[o+0],m=n[o+1],p=n[o+2],f=n[o+3];if(r===0){t[e+0]=a,t[e+1]=l,t[e+2]=c,t[e+3]=u;return}if(r===1){t[e+0]=d,t[e+1]=m,t[e+2]=p,t[e+3]=f;return}if(u!==f||a!==d||l!==m||c!==p){let x=1-r;const y=a*d+l*m+c*p+u*f,b=y>=0?1:-1,v=1-y*y;if(v>Number.EPSILON){const M=Math.sqrt(v),P=Math.atan2(M,y*b);x=Math.sin(x*P)/M,r=Math.sin(r*P)/M}const w=r*b;if(a=a*x+d*w,l=l*x+m*w,c=c*x+p*w,u=u*x+f*w,x===1-r){const M=1/Math.sqrt(a*a+l*l+c*c+u*u);a*=M,l*=M,c*=M,u*=M}}t[e]=a,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,s,n,o){const r=i[s],a=i[s+1],l=i[s+2],c=i[s+3],u=n[o],d=n[o+1],m=n[o+2],p=n[o+3];return t[e]=r*p+c*u+a*m-l*d,t[e+1]=a*p+c*d+l*u-r*m,t[e+2]=l*p+c*m+r*d-a*u,t[e+3]=c*p-r*u-a*d-l*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,o=t._order,r=Math.cos,a=Math.sin,l=r(i/2),c=r(s/2),u=r(n/2),d=a(i/2),m=a(s/2),p=a(n/2);switch(o){case"XYZ":this._x=d*c*u+l*m*p,this._y=l*m*u-d*c*p,this._z=l*c*p+d*m*u,this._w=l*c*u-d*m*p;break;case"YXZ":this._x=d*c*u+l*m*p,this._y=l*m*u-d*c*p,this._z=l*c*p-d*m*u,this._w=l*c*u+d*m*p;break;case"ZXY":this._x=d*c*u-l*m*p,this._y=l*m*u+d*c*p,this._z=l*c*p+d*m*u,this._w=l*c*u-d*m*p;break;case"ZYX":this._x=d*c*u-l*m*p,this._y=l*m*u+d*c*p,this._z=l*c*p-d*m*u,this._w=l*c*u+d*m*p;break;case"YZX":this._x=d*c*u+l*m*p,this._y=l*m*u+d*c*p,this._z=l*c*p-d*m*u,this._w=l*c*u-d*m*p;break;case"XZY":this._x=d*c*u-l*m*p,this._y=l*m*u-d*c*p,this._z=l*c*p+d*m*u,this._w=l*c*u+d*m*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],o=e[1],r=e[5],a=e[9],l=e[2],c=e[6],u=e[10],d=i+r+u;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(c-a)*m,this._y=(n-l)*m,this._z=(o-s)*m}else if(i>r&&i>u){const m=2*Math.sqrt(1+i-r-u);this._w=(c-a)/m,this._x=.25*m,this._y=(s+o)/m,this._z=(n+l)/m}else if(r>u){const m=2*Math.sqrt(1+r-i-u);this._w=(n-l)/m,this._x=(s+o)/m,this._y=.25*m,this._z=(a+c)/m}else{const m=2*Math.sqrt(1+u-i-r);this._w=(o-s)/m,this._x=(n+l)/m,this._y=(a+c)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(T(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,o=t._w,r=e._x,a=e._y,l=e._z,c=e._w;return this._x=i*c+o*r+s*l-n*a,this._y=s*c+o*a+n*r-i*l,this._z=n*c+o*l+i*a-s*r,this._w=o*c-i*r-s*a-n*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,o=this._w;let r=o*t._w+i*t._x+s*t._y+n*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=o,this._x=i,this._y=s,this._z=n,this;const a=1-r*r;if(a<=Number.EPSILON){const m=1-e;return this._w=m*o+e*this._w,this._x=m*i+e*this._x,this._y=m*s+e*this._y,this._z=m*n+e*this._z,this.normalize(),this}const l=Math.sqrt(a),c=Math.atan2(l,r),u=Math.sin((1-e)*c)/l,d=Math.sin(e*c)/l;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=s*u+this._y*d,this._z=n*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class g{constructor(t=0,e=0,i=0){g.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ps.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ps.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,o=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*o,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*o,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*o,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,r=t.z,a=t.w,l=2*(o*s-r*i),c=2*(r*e-n*s),u=2*(n*i-o*e);return this.x=e+a*l+o*u-r*c,this.y=i+a*c+r*l-n*u,this.z=s+a*u+n*c-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=T(this.x,t.x,e.x),this.y=T(this.y,t.y,e.y),this.z=T(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=T(this.x,t,e),this.y=T(this.y,t,e),this.z=T(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(T(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,o=e.x,r=e.y,a=e.z;return this.x=s*a-n*r,this.y=n*o-i*a,this.z=i*r-s*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return mi.copy(this).projectOnVector(t),this.sub(mi)}reflect(t){return this.sub(mi.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(T(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const mi=new g,ps=new we;class ve{constructor(t=new g(1/0,1/0,1/0),e=new g(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(it.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(it.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=it.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let o=0,r=n.count;o<r;o++)t.isMesh===!0?t.getVertexPosition(o,it):it.fromBufferAttribute(n,o),it.applyMatrix4(t.matrixWorld),this.expandByPoint(it);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Se.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Se.copy(i.boundingBox)),Se.applyMatrix4(t.matrixWorld),this.union(Se)}const s=t.children;for(let n=0,o=s.length;n<o;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,it),it.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ae),Ee.subVectors(this.max,ae),Gt.subVectors(t.a,ae),Jt.subVectors(t.b,ae),qt.subVectors(t.c,ae),Ct.subVectors(Jt,Gt),St.subVectors(qt,Jt),Ot.subVectors(Gt,qt);let e=[0,-Ct.z,Ct.y,0,-St.z,St.y,0,-Ot.z,Ot.y,Ct.z,0,-Ct.x,St.z,0,-St.x,Ot.z,0,-Ot.x,-Ct.y,Ct.x,0,-St.y,St.x,0,-Ot.y,Ot.x,0];return!pi(e,Gt,Jt,qt,Ee)||(e=[1,0,0,0,1,0,0,0,1],!pi(e,Gt,Jt,qt,Ee))?!1:(ze.crossVectors(Ct,St),e=[ze.x,ze.y,ze.z],pi(e,Gt,Jt,qt,Ee))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,it).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(it).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(gt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),gt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),gt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),gt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),gt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),gt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),gt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),gt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(gt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const gt=[new g,new g,new g,new g,new g,new g,new g,new g],it=new g,Se=new ve,Gt=new g,Jt=new g,qt=new g,Ct=new g,St=new g,Ot=new g,ae=new g,Ee=new g,ze=new g,Nt=new g;function pi(h,t,e,i,s){for(let n=0,o=h.length-3;n<=o;n+=3){Nt.fromArray(h,n);const r=s.x*Math.abs(Nt.x)+s.y*Math.abs(Nt.y)+s.z*Math.abs(Nt.z),a=t.dot(Nt),l=e.dot(Nt),c=i.dot(Nt);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>r)return!1}return!0}const Rn=new ve,he=new g,gi=new g;class Gi{constructor(t=new g,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):Rn.setFromPoints(t).getCenter(i);let s=0;for(let n=0,o=t.length;n<o;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;he.subVectors(t,this.center);const e=he.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(he,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(gi.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(he.copy(t.center).add(gi)),this.expandByPoint(he.copy(t.center).sub(gi))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ft=new g,fi=new g,Ae=new g,Et=new g,yi=new g,Te=new g,xi=new g;class Qe{constructor(t=new g,e=new g(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ft)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ft.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ft.copy(this.origin).addScaledVector(this.direction,e),ft.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){fi.copy(t).add(e).multiplyScalar(.5),Ae.copy(e).sub(t).normalize(),Et.copy(this.origin).sub(fi);const n=t.distanceTo(e)*.5,o=-this.direction.dot(Ae),r=Et.dot(this.direction),a=-Et.dot(Ae),l=Et.lengthSq(),c=Math.abs(1-o*o);let u,d,m,p;if(c>0)if(u=o*a-r,d=o*r-a,p=n*c,u>=0)if(d>=-p)if(d<=p){const f=1/c;u*=f,d*=f,m=u*(u+o*d+2*r)+d*(o*u+d+2*a)+l}else d=n,u=Math.max(0,-(o*d+r)),m=-u*u+d*(d+2*a)+l;else d=-n,u=Math.max(0,-(o*d+r)),m=-u*u+d*(d+2*a)+l;else d<=-p?(u=Math.max(0,-(-o*n+r)),d=u>0?-n:Math.min(Math.max(-n,-a),n),m=-u*u+d*(d+2*a)+l):d<=p?(u=0,d=Math.min(Math.max(-n,-a),n),m=d*(d+2*a)+l):(u=Math.max(0,-(o*n+r)),d=u>0?n:Math.min(Math.max(-n,-a),n),m=-u*u+d*(d+2*a)+l);else d=o>0?-n:n,u=Math.max(0,-(o*d+r)),m=-u*u+d*(d+2*a)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(fi).addScaledVector(Ae,d),m}intersectSphere(t,e){ft.subVectors(t.center,this.origin);const i=ft.dot(this.direction),s=ft.dot(ft)-i*i,n=t.radius*t.radius;if(s>n)return null;const o=Math.sqrt(n-s),r=i-o,a=i+o;return a<0?null:r<0?this.at(a,e):this.at(r,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,o,r,a;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(i=(t.min.x-d.x)*l,s=(t.max.x-d.x)*l):(i=(t.max.x-d.x)*l,s=(t.min.x-d.x)*l),c>=0?(n=(t.min.y-d.y)*c,o=(t.max.y-d.y)*c):(n=(t.max.y-d.y)*c,o=(t.min.y-d.y)*c),i>o||n>s||((n>i||isNaN(i))&&(i=n),(o<s||isNaN(s))&&(s=o),u>=0?(r=(t.min.z-d.z)*u,a=(t.max.z-d.z)*u):(r=(t.max.z-d.z)*u,a=(t.min.z-d.z)*u),i>a||r>s)||((r>i||i!==i)&&(i=r),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,ft)!==null}intersectTriangle(t,e,i,s,n){yi.subVectors(e,t),Te.subVectors(i,t),xi.crossVectors(yi,Te);let o=this.direction.dot(xi),r;if(o>0){if(s)return null;r=1}else if(o<0)r=-1,o=-o;else return null;Et.subVectors(this.origin,t);const a=r*this.direction.dot(Te.crossVectors(Et,Te));if(a<0)return null;const l=r*this.direction.dot(yi.cross(Et));if(l<0||a+l>o)return null;const c=-r*Et.dot(xi);return c<0?null:this.at(c/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class H{constructor(t,e,i,s,n,o,r,a,l,c,u,d,m,p,f,x){H.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,o,r,a,l,c,u,d,m,p,f,x)}set(t,e,i,s,n,o,r,a,l,c,u,d,m,p,f,x){const y=this.elements;return y[0]=t,y[4]=e,y[8]=i,y[12]=s,y[1]=n,y[5]=o,y[9]=r,y[13]=a,y[2]=l,y[6]=c,y[10]=u,y[14]=d,y[3]=m,y[7]=p,y[11]=f,y[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new H().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Xt.setFromMatrixColumn(t,0).length(),n=1/Xt.setFromMatrixColumn(t,1).length(),o=1/Xt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,o=Math.cos(i),r=Math.sin(i),a=Math.cos(s),l=Math.sin(s),c=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const d=o*c,m=o*u,p=r*c,f=r*u;e[0]=a*c,e[4]=-a*u,e[8]=l,e[1]=m+p*l,e[5]=d-f*l,e[9]=-r*a,e[2]=f-d*l,e[6]=p+m*l,e[10]=o*a}else if(t.order==="YXZ"){const d=a*c,m=a*u,p=l*c,f=l*u;e[0]=d+f*r,e[4]=p*r-m,e[8]=o*l,e[1]=o*u,e[5]=o*c,e[9]=-r,e[2]=m*r-p,e[6]=f+d*r,e[10]=o*a}else if(t.order==="ZXY"){const d=a*c,m=a*u,p=l*c,f=l*u;e[0]=d-f*r,e[4]=-o*u,e[8]=p+m*r,e[1]=m+p*r,e[5]=o*c,e[9]=f-d*r,e[2]=-o*l,e[6]=r,e[10]=o*a}else if(t.order==="ZYX"){const d=o*c,m=o*u,p=r*c,f=r*u;e[0]=a*c,e[4]=p*l-m,e[8]=d*l+f,e[1]=a*u,e[5]=f*l+d,e[9]=m*l-p,e[2]=-l,e[6]=r*a,e[10]=o*a}else if(t.order==="YZX"){const d=o*a,m=o*l,p=r*a,f=r*l;e[0]=a*c,e[4]=f-d*u,e[8]=p*u+m,e[1]=u,e[5]=o*c,e[9]=-r*c,e[2]=-l*c,e[6]=m*u+p,e[10]=d-f*u}else if(t.order==="XZY"){const d=o*a,m=o*l,p=r*a,f=r*l;e[0]=a*c,e[4]=-u,e[8]=l*c,e[1]=d*u+f,e[5]=o*c,e[9]=m*u-p,e[2]=p*u-m,e[6]=r*c,e[10]=f*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Dn,t,In)}lookAt(t,e,i){const s=this.elements;return Y.subVectors(t,e),Y.lengthSq()===0&&(Y.z=1),Y.normalize(),zt.crossVectors(i,Y),zt.lengthSq()===0&&(Math.abs(i.z)===1?Y.x+=1e-4:Y.z+=1e-4,Y.normalize(),zt.crossVectors(i,Y)),zt.normalize(),Be.crossVectors(Y,zt),s[0]=zt.x,s[4]=Be.x,s[8]=Y.x,s[1]=zt.y,s[5]=Be.y,s[9]=Y.y,s[2]=zt.z,s[6]=Be.z,s[10]=Y.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,o=i[0],r=i[4],a=i[8],l=i[12],c=i[1],u=i[5],d=i[9],m=i[13],p=i[2],f=i[6],x=i[10],y=i[14],b=i[3],v=i[7],w=i[11],M=i[15],P=s[0],C=s[4],S=s[8],_=s[12],V=s[1],F=s[5],j=s[9],I=s[13],$=s[2],Dt=s[6],Wt=s[10],It=s[14],re=s[3],Me=s[7],Pe=s[11],Ce=s[15];return n[0]=o*P+r*V+a*$+l*re,n[4]=o*C+r*F+a*Dt+l*Me,n[8]=o*S+r*j+a*Wt+l*Pe,n[12]=o*_+r*I+a*It+l*Ce,n[1]=c*P+u*V+d*$+m*re,n[5]=c*C+u*F+d*Dt+m*Me,n[9]=c*S+u*j+d*Wt+m*Pe,n[13]=c*_+u*I+d*It+m*Ce,n[2]=p*P+f*V+x*$+y*re,n[6]=p*C+f*F+x*Dt+y*Me,n[10]=p*S+f*j+x*Wt+y*Pe,n[14]=p*_+f*I+x*It+y*Ce,n[3]=b*P+v*V+w*$+M*re,n[7]=b*C+v*F+w*Dt+M*Me,n[11]=b*S+v*j+w*Wt+M*Pe,n[15]=b*_+v*I+w*It+M*Ce,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],o=t[1],r=t[5],a=t[9],l=t[13],c=t[2],u=t[6],d=t[10],m=t[14],p=t[3],f=t[7],x=t[11],y=t[15];return p*(+n*a*u-s*l*u-n*r*d+i*l*d+s*r*m-i*a*m)+f*(+e*a*m-e*l*d+n*o*d-s*o*m+s*l*c-n*a*c)+x*(+e*l*u-e*r*m-n*o*u+i*o*m+n*r*c-i*l*c)+y*(-s*r*c-e*a*u+e*r*d+s*o*u-i*o*d+i*a*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],o=t[4],r=t[5],a=t[6],l=t[7],c=t[8],u=t[9],d=t[10],m=t[11],p=t[12],f=t[13],x=t[14],y=t[15],b=u*x*l-f*d*l+f*a*m-r*x*m-u*a*y+r*d*y,v=p*d*l-c*x*l-p*a*m+o*x*m+c*a*y-o*d*y,w=c*f*l-p*u*l+p*r*m-o*f*m-c*r*y+o*u*y,M=p*u*a-c*f*a-p*r*d+o*f*d+c*r*x-o*u*x,P=e*b+i*v+s*w+n*M;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/P;return t[0]=b*C,t[1]=(f*d*n-u*x*n-f*s*m+i*x*m+u*s*y-i*d*y)*C,t[2]=(r*x*n-f*a*n+f*s*l-i*x*l-r*s*y+i*a*y)*C,t[3]=(u*a*n-r*d*n-u*s*l+i*d*l+r*s*m-i*a*m)*C,t[4]=v*C,t[5]=(c*x*n-p*d*n+p*s*m-e*x*m-c*s*y+e*d*y)*C,t[6]=(p*a*n-o*x*n-p*s*l+e*x*l+o*s*y-e*a*y)*C,t[7]=(o*d*n-c*a*n+c*s*l-e*d*l-o*s*m+e*a*m)*C,t[8]=w*C,t[9]=(p*u*n-c*f*n-p*i*m+e*f*m+c*i*y-e*u*y)*C,t[10]=(o*f*n-p*r*n+p*i*l-e*f*l-o*i*y+e*r*y)*C,t[11]=(c*r*n-o*u*n-c*i*l+e*u*l+o*i*m-e*r*m)*C,t[12]=M*C,t[13]=(c*f*s-p*u*s+p*i*d-e*f*d-c*i*x+e*u*x)*C,t[14]=(p*r*s-o*f*s-p*i*a+e*f*a+o*i*x-e*r*x)*C,t[15]=(o*u*s-c*r*s+c*i*a-e*u*a-o*i*d+e*r*d)*C,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,o=t.x,r=t.y,a=t.z,l=n*o,c=n*r;return this.set(l*o+i,l*r-s*a,l*a+s*r,0,l*r+s*a,c*r+i,c*a-s*o,0,l*a-s*r,c*a+s*o,n*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,o){return this.set(1,i,n,0,t,1,o,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,o=e._y,r=e._z,a=e._w,l=n+n,c=o+o,u=r+r,d=n*l,m=n*c,p=n*u,f=o*c,x=o*u,y=r*u,b=a*l,v=a*c,w=a*u,M=i.x,P=i.y,C=i.z;return s[0]=(1-(f+y))*M,s[1]=(m+w)*M,s[2]=(p-v)*M,s[3]=0,s[4]=(m-w)*P,s[5]=(1-(d+y))*P,s[6]=(x+b)*P,s[7]=0,s[8]=(p+v)*C,s[9]=(x-b)*C,s[10]=(1-(d+f))*C,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Xt.set(s[0],s[1],s[2]).length();const o=Xt.set(s[4],s[5],s[6]).length(),r=Xt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],st.copy(this);const l=1/n,c=1/o,u=1/r;return st.elements[0]*=l,st.elements[1]*=l,st.elements[2]*=l,st.elements[4]*=c,st.elements[5]*=c,st.elements[6]*=c,st.elements[8]*=u,st.elements[9]*=u,st.elements[10]*=u,e.setFromRotationMatrix(st),i.x=n,i.y=o,i.z=r,this}makePerspective(t,e,i,s,n,o,r=2e3){const a=this.elements,l=2*n/(e-t),c=2*n/(i-s),u=(e+t)/(e-t),d=(i+s)/(i-s);let m,p;if(r===2e3)m=-(o+n)/(o-n),p=-2*o*n/(o-n);else if(r===2001)m=-o/(o-n),p=-o*n/(o-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=m,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,n,o,r=2e3){const a=this.elements,l=1/(e-t),c=1/(i-s),u=1/(o-n),d=(e+t)*l,m=(i+s)*c;let p,f;if(r===2e3)p=(o+n)*u,f=-2*u;else if(r===2001)p=n*u,f=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+r);return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-m,a[2]=0,a[6]=0,a[10]=f,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Xt=new g,st=new H,Dn=new g(0,0,0),In=new g(1,1,1),zt=new g,Be=new g,Y=new g,gs=new H,fs=new we;class Ut{constructor(t=0,e=0,i=0,s=Ut.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],o=s[4],r=s[8],a=s[1],l=s[5],c=s[9],u=s[2],d=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(T(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-c,m),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-T(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(r,m),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(T(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-T(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(T(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(r,m));break;case"XZY":this._z=Math.asin(-T(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-c,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return gs.makeRotationFromQuaternion(t),this.setFromRotationMatrix(gs,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return fs.setFromEuler(this),this.setFromQuaternion(fs,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ut.DEFAULT_ORDER="XYZ";class Gs{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let On=0;const ys=new g,Yt=new we,yt=new H,_e=new g,le=new g,Nn=new g,Hn=new we,xs=new g(1,0,0),ws=new g(0,1,0),vs=new g(0,0,1),bs={type:"added"},kn={type:"removed"},Zt={type:"childadded",child:null},wi={type:"childremoved",child:null};class ht extends $e{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:On++}),this.uuid=oe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ht.DEFAULT_UP.clone();const t=new g,e=new Ut,i=new we,s=new g(1,1,1);function n(){i.setFromEuler(e,!1)}function o(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new H},normalMatrix:{value:new lt}}),this.matrix=new H,this.matrixWorld=new H,this.matrixAutoUpdate=ht.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ht.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Gs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Yt.setFromAxisAngle(t,e),this.quaternion.multiply(Yt),this}rotateOnWorldAxis(t,e){return Yt.setFromAxisAngle(t,e),this.quaternion.premultiply(Yt),this}rotateX(t){return this.rotateOnAxis(xs,t)}rotateY(t){return this.rotateOnAxis(ws,t)}rotateZ(t){return this.rotateOnAxis(vs,t)}translateOnAxis(t,e){return ys.copy(t).applyQuaternion(this.quaternion),this.position.add(ys.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(xs,t)}translateY(t){return this.translateOnAxis(ws,t)}translateZ(t){return this.translateOnAxis(vs,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(yt.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?_e.copy(t):_e.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),le.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?yt.lookAt(le,_e,this.up):yt.lookAt(_e,le,this.up),this.quaternion.setFromRotationMatrix(yt),s&&(yt.extractRotation(s.matrixWorld),Yt.setFromRotationMatrix(yt),this.quaternion.premultiply(Yt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(bs),Zt.child=t,this.dispatchEvent(Zt),Zt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(kn),wi.child=t,this.dispatchEvent(wi),wi.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),yt.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),yt.multiply(t.parent.matrixWorld)),t.applyMatrix4(yt),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(bs),Zt.child=t,this.dispatchEvent(Zt),Zt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,o=s.length;n<o;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(le,t,Nn),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(le,Hn,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let n=0,o=s.length;n<o;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(r=>({boxInitialized:r.boxInitialized,boxMin:r.box.min.toArray(),boxMax:r.box.max.toArray(),sphereInitialized:r.sphereInitialized,sphereRadius:r.sphere.radius,sphereCenter:r.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(r,a){return r[a.uuid]===void 0&&(r[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const a=r.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const u=a[l];n(t.shapes,u)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let a=0,l=this.material.length;a<l;a++)r.push(n(t.materials,this.material[a]));s.material=r}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let r=0;r<this.children.length;r++)s.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let r=0;r<this.animations.length;r++){const a=this.animations[r];s.animations.push(n(t.animations,a))}}if(e){const r=o(t.geometries),a=o(t.materials),l=o(t.textures),c=o(t.images),u=o(t.shapes),d=o(t.skeletons),m=o(t.animations),p=o(t.nodes);r.length>0&&(i.geometries=r),a.length>0&&(i.materials=a),l.length>0&&(i.textures=l),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),m.length>0&&(i.animations=m),p.length>0&&(i.nodes=p)}return i.object=s,i;function o(r){const a=[];for(const l in r){const c=r[l];delete c.metadata,a.push(c)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}ht.DEFAULT_UP=new g(0,1,0);ht.DEFAULT_MATRIX_AUTO_UPDATE=!0;ht.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const nt=new g,xt=new g,vi=new g,wt=new g,Kt=new g,$t=new g,Ms=new g,bi=new g,Mi=new g,Pi=new g,Ci=new R,Si=new R,Ei=new R;class rt{constructor(t=new g,e=new g,i=new g){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),nt.subVectors(t,e),s.cross(nt);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){nt.subVectors(s,e),xt.subVectors(i,e),vi.subVectors(t,e);const o=nt.dot(nt),r=nt.dot(xt),a=nt.dot(vi),l=xt.dot(xt),c=xt.dot(vi),u=o*l-r*r;if(u===0)return n.set(0,0,0),null;const d=1/u,m=(l*a-r*c)*d,p=(o*c-r*a)*d;return n.set(1-m-p,p,m)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,wt)===null?!1:wt.x>=0&&wt.y>=0&&wt.x+wt.y<=1}static getInterpolation(t,e,i,s,n,o,r,a){return this.getBarycoord(t,e,i,s,wt)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,wt.x),a.addScaledVector(o,wt.y),a.addScaledVector(r,wt.z),a)}static getInterpolatedAttribute(t,e,i,s,n,o){return Ci.setScalar(0),Si.setScalar(0),Ei.setScalar(0),Ci.fromBufferAttribute(t,e),Si.fromBufferAttribute(t,i),Ei.fromBufferAttribute(t,s),o.setScalar(0),o.addScaledVector(Ci,n.x),o.addScaledVector(Si,n.y),o.addScaledVector(Ei,n.z),o}static isFrontFacing(t,e,i,s){return nt.subVectors(i,e),xt.subVectors(t,e),nt.cross(xt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return nt.subVectors(this.c,this.b),xt.subVectors(this.a,this.b),nt.cross(xt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return rt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return rt.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return rt.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return rt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return rt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let o,r;Kt.subVectors(s,i),$t.subVectors(n,i),bi.subVectors(t,i);const a=Kt.dot(bi),l=$t.dot(bi);if(a<=0&&l<=0)return e.copy(i);Mi.subVectors(t,s);const c=Kt.dot(Mi),u=$t.dot(Mi);if(c>=0&&u<=c)return e.copy(s);const d=a*u-c*l;if(d<=0&&a>=0&&c<=0)return o=a/(a-c),e.copy(i).addScaledVector(Kt,o);Pi.subVectors(t,n);const m=Kt.dot(Pi),p=$t.dot(Pi);if(p>=0&&m<=p)return e.copy(n);const f=m*l-a*p;if(f<=0&&l>=0&&p<=0)return r=l/(l-p),e.copy(i).addScaledVector($t,r);const x=c*p-m*u;if(x<=0&&u-c>=0&&m-p>=0)return Ms.subVectors(n,s),r=(u-c)/(u-c+(m-p)),e.copy(s).addScaledVector(Ms,r);const y=1/(x+f+d);return o=f*y,r=d*y,e.copy(i).addScaledVector(Kt,o).addScaledVector($t,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Js={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},At={h:0,s:0,l:0},Ve={h:0,s:0,l:0};function zi(h,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?h+(t-h)*6*e:e<1/2?t:e<2/3?h+(t-h)*6*(2/3-e):h}class z{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ot){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,et.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=et.workingColorSpace){return this.r=t,this.g=e,this.b=i,et.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=et.workingColorSpace){if(t=ji(t,1),e=T(e,0,1),i=T(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,o=2*i-n;this.r=zi(o,n,t+1/3),this.g=zi(o,n,t),this.b=zi(o,n,t-1/3)}return et.toWorkingColorSpace(this,s),this}setStyle(t,e=ot){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const o=s[1],r=s[2];switch(o){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],o=n.length;if(o===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ot){const i=Js[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=bt(t.r),this.g=bt(t.g),this.b=bt(t.b),this}copyLinearToSRGB(t){return this.r=ie(t.r),this.g=ie(t.g),this.b=ie(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ot){return et.fromWorkingColorSpace(U.copy(this),t),Math.round(T(U.r*255,0,255))*65536+Math.round(T(U.g*255,0,255))*256+Math.round(T(U.b*255,0,255))}getHexString(t=ot){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=et.workingColorSpace){et.fromWorkingColorSpace(U.copy(this),e);const i=U.r,s=U.g,n=U.b,o=Math.max(i,s,n),r=Math.min(i,s,n);let a,l;const c=(r+o)/2;if(r===o)a=0,l=0;else{const u=o-r;switch(l=c<=.5?u/(o+r):u/(2-o-r),o){case i:a=(s-n)/u+(s<n?6:0);break;case s:a=(n-i)/u+2;break;case n:a=(i-s)/u+4;break}a/=6}return t.h=a,t.s=l,t.l=c,t}getRGB(t,e=et.workingColorSpace){return et.fromWorkingColorSpace(U.copy(this),e),t.r=U.r,t.g=U.g,t.b=U.b,t}getStyle(t=ot){et.fromWorkingColorSpace(U.copy(this),t);const e=U.r,i=U.g,s=U.b;return t!==ot?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(At),this.setHSL(At.h+t,At.s+e,At.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(At),t.getHSL(Ve);const i=me(At.h,Ve.h,e),s=me(At.s,Ve.s,e),n=me(At.l,Ve.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const U=new z;z.NAMES=Js;let Un=0;class ti extends $e{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Un++}),this.uuid=oe(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new z(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const o=[];for(const r in n){const a=n[r];delete a.metadata,o.push(a)}return o}if(e){const n=s(t.textures),o=s(t.images);n.length>0&&(i.textures=n),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class J extends ti{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new z(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ut,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const D=new g,Fe=new E;let Ln=0;class se{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Ln++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.applyMatrix3(t),this.setXY(e,Fe.x,Fe.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)D.fromBufferAttribute(this,e),D.applyMatrix3(t),this.setXYZ(e,D.x,D.y,D.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)D.fromBufferAttribute(this,e),D.applyMatrix4(t),this.setXYZ(e,D.x,D.y,D.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)D.fromBufferAttribute(this,e),D.applyNormalMatrix(t),this.setXYZ(e,D.x,D.y,D.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)D.fromBufferAttribute(this,e),D.transformDirection(t),this.setXYZ(e,D.x,D.y,D.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=ee(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=L(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=ee(e,this.array)),e}setX(t,e){return this.normalized&&(e=L(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=ee(e,this.array)),e}setY(t,e){return this.normalized&&(e=L(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=ee(e,this.array)),e}setZ(t,e){return this.normalized&&(e=L(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=ee(e,this.array)),e}setW(t,e){return this.normalized&&(e=L(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=L(e,this.array),i=L(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=L(e,this.array),i=L(i,this.array),s=L(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=L(e,this.array),i=L(i,this.array),s=L(s,this.array),n=L(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class Wn extends se{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class jn extends se{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class W extends se{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Gn=0;const Q=new H,Ai=new ht,Qt=new g,Z=new ve,ce=new ve,N=new g;class B extends $e{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Gn++}),this.uuid=oe(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(An(t)?jn:Wn)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new lt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Q.makeRotationFromQuaternion(t),this.applyMatrix4(Q),this}rotateX(t){return Q.makeRotationX(t),this.applyMatrix4(Q),this}rotateY(t){return Q.makeRotationY(t),this.applyMatrix4(Q),this}rotateZ(t){return Q.makeRotationZ(t),this.applyMatrix4(Q),this}translate(t,e,i){return Q.makeTranslation(t,e,i),this.applyMatrix4(Q),this}scale(t,e,i){return Q.makeScale(t,e,i),this.applyMatrix4(Q),this}lookAt(t){return Ai.lookAt(t),Ai.updateMatrix(),this.applyMatrix4(Ai.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qt).negate(),this.translate(Qt.x,Qt.y,Qt.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const i=[];for(let s=0,n=t.length;s<n;s++){const o=t[s];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new W(i,3))}else{const i=Math.min(t.length,e.count);for(let s=0;s<i;s++){const n=t[s];e.setXYZ(s,n.x,n.y,n.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ve);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new g(-1/0,-1/0,-1/0),new g(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];Z.setFromBufferAttribute(n),this.morphTargetsRelative?(N.addVectors(this.boundingBox.min,Z.min),this.boundingBox.expandByPoint(N),N.addVectors(this.boundingBox.max,Z.max),this.boundingBox.expandByPoint(N)):(this.boundingBox.expandByPoint(Z.min),this.boundingBox.expandByPoint(Z.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Gi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new g,1/0);return}if(t){const i=this.boundingSphere.center;if(Z.setFromBufferAttribute(t),e)for(let n=0,o=e.length;n<o;n++){const r=e[n];ce.setFromBufferAttribute(r),this.morphTargetsRelative?(N.addVectors(Z.min,ce.min),Z.expandByPoint(N),N.addVectors(Z.max,ce.max),Z.expandByPoint(N)):(Z.expandByPoint(ce.min),Z.expandByPoint(ce.max))}Z.getCenter(i);let s=0;for(let n=0,o=t.count;n<o;n++)N.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(N));if(e)for(let n=0,o=e.length;n<o;n++){const r=e[n],a=this.morphTargetsRelative;for(let l=0,c=r.count;l<c;l++)N.fromBufferAttribute(r,l),a&&(Qt.fromBufferAttribute(t,l),N.add(Qt)),s=Math.max(s,i.distanceToSquared(N))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new se(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),r=[],a=[];for(let S=0;S<i.count;S++)r[S]=new g,a[S]=new g;const l=new g,c=new g,u=new g,d=new E,m=new E,p=new E,f=new g,x=new g;function y(S,_,V){l.fromBufferAttribute(i,S),c.fromBufferAttribute(i,_),u.fromBufferAttribute(i,V),d.fromBufferAttribute(n,S),m.fromBufferAttribute(n,_),p.fromBufferAttribute(n,V),c.sub(l),u.sub(l),m.sub(d),p.sub(d);const F=1/(m.x*p.y-p.x*m.y);isFinite(F)&&(f.copy(c).multiplyScalar(p.y).addScaledVector(u,-m.y).multiplyScalar(F),x.copy(u).multiplyScalar(m.x).addScaledVector(c,-p.x).multiplyScalar(F),r[S].add(f),r[_].add(f),r[V].add(f),a[S].add(x),a[_].add(x),a[V].add(x))}let b=this.groups;b.length===0&&(b=[{start:0,count:t.count}]);for(let S=0,_=b.length;S<_;++S){const V=b[S],F=V.start,j=V.count;for(let I=F,$=F+j;I<$;I+=3)y(t.getX(I+0),t.getX(I+1),t.getX(I+2))}const v=new g,w=new g,M=new g,P=new g;function C(S){M.fromBufferAttribute(s,S),P.copy(M);const _=r[S];v.copy(_),v.sub(M.multiplyScalar(M.dot(_))).normalize(),w.crossVectors(P,_);const F=w.dot(a[S])<0?-1:1;o.setXYZW(S,v.x,v.y,v.z,F)}for(let S=0,_=b.length;S<_;++S){const V=b[S],F=V.start,j=V.count;for(let I=F,$=F+j;I<$;I+=3)C(t.getX(I+0)),C(t.getX(I+1)),C(t.getX(I+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new se(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,m=i.count;d<m;d++)i.setXYZ(d,0,0,0);const s=new g,n=new g,o=new g,r=new g,a=new g,l=new g,c=new g,u=new g;if(t)for(let d=0,m=t.count;d<m;d+=3){const p=t.getX(d+0),f=t.getX(d+1),x=t.getX(d+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,f),o.fromBufferAttribute(e,x),c.subVectors(o,n),u.subVectors(s,n),c.cross(u),r.fromBufferAttribute(i,p),a.fromBufferAttribute(i,f),l.fromBufferAttribute(i,x),r.add(c),a.add(c),l.add(c),i.setXYZ(p,r.x,r.y,r.z),i.setXYZ(f,a.x,a.y,a.z),i.setXYZ(x,l.x,l.y,l.z)}else for(let d=0,m=e.count;d<m;d+=3)s.fromBufferAttribute(e,d+0),n.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),c.subVectors(o,n),u.subVectors(s,n),c.cross(u),i.setXYZ(d+0,c.x,c.y,c.z),i.setXYZ(d+1,c.x,c.y,c.z),i.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)N.fromBufferAttribute(t,e),N.normalize(),t.setXYZ(e,N.x,N.y,N.z)}toNonIndexed(){function t(r,a){const l=r.array,c=r.itemSize,u=r.normalized,d=new l.constructor(a.length*c);let m=0,p=0;for(let f=0,x=a.length;f<x;f++){r.isInterleavedBufferAttribute?m=a[f]*r.data.stride+r.offset:m=a[f]*c;for(let y=0;y<c;y++)d[p++]=l[m++]}return new se(d,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new B,i=this.index.array,s=this.attributes;for(const r in s){const a=s[r],l=t(a,i);e.setAttribute(r,l)}const n=this.morphAttributes;for(const r in n){const a=[],l=n[r];for(let c=0,u=l.length;c<u;c++){const d=l[c],m=t(d,i);a.push(m)}e.morphAttributes[r]=a}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let r=0,a=o.length;r<a;r++){const l=o[r];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(t[l]=a[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const l=i[a];t.data.attributes[a]=l.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let u=0,d=l.length;u<d;u++){const m=l[u];c.push(m.toJSON(t.data))}c.length>0&&(s[a]=c,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const r=this.boundingSphere;return r!==null&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const l in s){const c=s[l];this.setAttribute(l,c.clone(e))}const n=t.morphAttributes;for(const l in n){const c=[],u=n[l];for(let d=0,m=u.length;d<m;d++)c.push(u[d].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,c=o.length;l<c;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const r=t.boundingBox;r!==null&&(this.boundingBox=r.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ps=new H,Ht=new Qe,Re=new Gi,Cs=new g,De=new g,Ie=new g,Oe=new g,Ti=new g,Ne=new g,Ss=new g,He=new g;class O extends ht{constructor(t=new B,e=new J){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,o=s.length;n<o;n++){const r=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,o=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const r=this.morphTargetInfluences;if(n&&r){Ne.set(0,0,0);for(let a=0,l=n.length;a<l;a++){const c=r[a],u=n[a];c!==0&&(Ti.fromBufferAttribute(u,t),o?Ne.addScaledVector(Ti,c):Ne.addScaledVector(Ti.sub(e),c))}e.add(Ne)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Re.copy(i.boundingSphere),Re.applyMatrix4(n),Ht.copy(t.ray).recast(t.near),!(Re.containsPoint(Ht.origin)===!1&&(Ht.intersectSphere(Re,Cs)===null||Ht.origin.distanceToSquared(Cs)>(t.far-t.near)**2))&&(Ps.copy(n).invert(),Ht.copy(t.ray).applyMatrix4(Ps),!(i.boundingBox!==null&&Ht.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,Ht)))}_computeIntersections(t,e,i){let s;const n=this.geometry,o=this.material,r=n.index,a=n.attributes.position,l=n.attributes.uv,c=n.attributes.uv1,u=n.attributes.normal,d=n.groups,m=n.drawRange;if(r!==null)if(Array.isArray(o))for(let p=0,f=d.length;p<f;p++){const x=d[p],y=o[x.materialIndex],b=Math.max(x.start,m.start),v=Math.min(r.count,Math.min(x.start+x.count,m.start+m.count));for(let w=b,M=v;w<M;w+=3){const P=r.getX(w),C=r.getX(w+1),S=r.getX(w+2);s=ke(this,y,t,i,l,c,u,P,C,S),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=x.materialIndex,e.push(s))}}else{const p=Math.max(0,m.start),f=Math.min(r.count,m.start+m.count);for(let x=p,y=f;x<y;x+=3){const b=r.getX(x),v=r.getX(x+1),w=r.getX(x+2);s=ke(this,o,t,i,l,c,u,b,v,w),s&&(s.faceIndex=Math.floor(x/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(o))for(let p=0,f=d.length;p<f;p++){const x=d[p],y=o[x.materialIndex],b=Math.max(x.start,m.start),v=Math.min(a.count,Math.min(x.start+x.count,m.start+m.count));for(let w=b,M=v;w<M;w+=3){const P=w,C=w+1,S=w+2;s=ke(this,y,t,i,l,c,u,P,C,S),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=x.materialIndex,e.push(s))}}else{const p=Math.max(0,m.start),f=Math.min(a.count,m.start+m.count);for(let x=p,y=f;x<y;x+=3){const b=x,v=x+1,w=x+2;s=ke(this,o,t,i,l,c,u,b,v,w),s&&(s.faceIndex=Math.floor(x/3),e.push(s))}}}}function Jn(h,t,e,i,s,n,o,r){let a;if(t.side===1?a=i.intersectTriangle(o,n,s,!0,r):a=i.intersectTriangle(s,n,o,t.side===0,r),a===null)return null;He.copy(r),He.applyMatrix4(h.matrixWorld);const l=e.ray.origin.distanceTo(He);return l<e.near||l>e.far?null:{distance:l,point:He.clone(),object:h}}function ke(h,t,e,i,s,n,o,r,a,l){h.getVertexPosition(r,De),h.getVertexPosition(a,Ie),h.getVertexPosition(l,Oe);const c=Jn(h,t,e,i,De,Ie,Oe,Ss);if(c){const u=new g;rt.getBarycoord(Ss,De,Ie,Oe,u),s&&(c.uv=rt.getInterpolatedAttribute(s,r,a,l,u,new E)),n&&(c.uv1=rt.getInterpolatedAttribute(n,r,a,l,u,new E)),o&&(c.normal=rt.getInterpolatedAttribute(o,r,a,l,u,new g),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const d={a:r,b:a,c:l,normal:new g,materialIndex:0};rt.getNormal(De,Ie,Oe,d.normal),c.face=d,c.barycoord=u}return c}function qn(h){const t={};for(const e in h){t[e]={};for(const i in h[e]){const s=h[e][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][i]=null):t[e][i]=s.clone():Array.isArray(s)?t[e][i]=s.slice():t[e][i]=s}}return t}function Xn(h){const t=[];for(let e=0;e<h.length;e++)t.push(h[e].clone());return t}var Yn=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Zn=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Kn extends ti{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Yn,this.fragmentShader=Zn,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=qn(t.uniforms),this.uniformsGroups=Xn(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?e.uniforms[s]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[s]={type:"m4",value:o.toArray()}:e.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class $n extends ht{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new H,this.projectionMatrix=new H,this.projectionMatrixInverse=new H,this.coordinateSystem=2e3}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Tt=new g,Es=new E,zs=new E;class qs extends $n{constructor(t=50,e=1,i=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=qe*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(de*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return qe*2*Math.atan(Math.tan(de*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){Tt.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Tt.x,Tt.y).multiplyScalar(-t/Tt.z),Tt.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Tt.x,Tt.y).multiplyScalar(-t/Tt.z)}getViewSize(t,e){return this.getViewBounds(t,Es,zs),e.subVectors(zs,Es)}setViewOffset(t,e,i,s,n,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(de*.5*this.fov)/this.zoom,i=2*e,s=this.aspect*i,n=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const a=o.fullWidth,l=o.fullHeight;n+=o.offsetX*s/a,e-=o.offsetY*i/l,s*=o.width/a,i*=o.height/l}const r=this.filmOffset;r!==0&&(n+=t*r/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+s,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}class As extends mt{constructor(t=null,e=1,i=1,s,n,o,r,a,l=1003,c=1003,u,d){super(null,o,r,a,l,c,s,n,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class pt extends ti{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new z(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Xe=new g,Ye=new g,Ts=new H,ue=new Qe,Ue=new Gi,Bi=new g,Bs=new g;class G extends ht{constructor(t=new B,e=new pt){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let s=1,n=e.count;s<n;s++)Xe.fromBufferAttribute(e,s-1),Ye.fromBufferAttribute(e,s),i[s]=i[s-1],i[s]+=Xe.distanceTo(Ye);t.setAttribute("lineDistance",new W(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ue.copy(i.boundingSphere),Ue.applyMatrix4(s),Ue.radius+=n,t.ray.intersectsSphere(Ue)===!1)return;Ts.copy(s).invert(),ue.copy(t.ray).applyMatrix4(Ts);const r=n/((this.scale.x+this.scale.y+this.scale.z)/3),a=r*r,l=this.isLineSegments?2:1,c=i.index,d=i.attributes.position;if(c!==null){const m=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);for(let f=m,x=p-1;f<x;f+=l){const y=c.getX(f),b=c.getX(f+1),v=Le(this,t,ue,a,y,b,f);v&&e.push(v)}if(this.isLineLoop){const f=c.getX(p-1),x=c.getX(m),y=Le(this,t,ue,a,f,x,p-1);y&&e.push(y)}}else{const m=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let f=m,x=p-1;f<x;f+=l){const y=Le(this,t,ue,a,f,f+1,f);y&&e.push(y)}if(this.isLineLoop){const f=Le(this,t,ue,a,p-1,m,p-1);f&&e.push(f)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,o=s.length;n<o;n++){const r=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}}function Le(h,t,e,i,s,n,o){const r=h.geometry.attributes.position;if(Xe.fromBufferAttribute(r,s),Ye.fromBufferAttribute(r,n),e.distanceSqToSegment(Xe,Ye,Bi,Bs)>i)return;Bi.applyMatrix4(h.matrixWorld);const l=t.ray.origin.distanceTo(Bi);if(!(l<t.near||l>t.far))return{distance:l,point:Bs.clone().applyMatrix4(h.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:h}}class K{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,s=this.getPoint(0),n=0;e.push(0);for(let o=1;o<=t;o++)i=this.getPoint(o/t),n+=i.distanceTo(s),e.push(n),s=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const i=this.getLengths();let s=0;const n=i.length;let o;e?o=e:o=t*i[n-1];let r=0,a=n-1,l;for(;r<=a;)if(s=Math.floor(r+(a-r)/2),l=i[s]-o,l<0)r=s+1;else if(l>0)a=s-1;else{a=s;break}if(s=a,i[s]===o)return s/(n-1);const c=i[s],d=i[s+1]-c,m=(o-c)/d;return(s+m)/(n-1)}getTangent(t,e){let s=t-1e-4,n=t+1e-4;s<0&&(s=0),n>1&&(n=1);const o=this.getPoint(s),r=this.getPoint(n),a=e||(o.isVector2?new E:new g);return a.copy(r).sub(o).normalize(),a}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e=!1){const i=new g,s=[],n=[],o=[],r=new g,a=new H;for(let m=0;m<=t;m++){const p=m/t;s[m]=this.getTangentAt(p,new g)}n[0]=new g,o[0]=new g;let l=Number.MAX_VALUE;const c=Math.abs(s[0].x),u=Math.abs(s[0].y),d=Math.abs(s[0].z);c<=l&&(l=c,i.set(1,0,0)),u<=l&&(l=u,i.set(0,1,0)),d<=l&&i.set(0,0,1),r.crossVectors(s[0],i).normalize(),n[0].crossVectors(s[0],r),o[0].crossVectors(s[0],n[0]);for(let m=1;m<=t;m++){if(n[m]=n[m-1].clone(),o[m]=o[m-1].clone(),r.crossVectors(s[m-1],s[m]),r.length()>Number.EPSILON){r.normalize();const p=Math.acos(T(s[m-1].dot(s[m]),-1,1));n[m].applyMatrix4(a.makeRotationAxis(r,p))}o[m].crossVectors(s[m],n[m])}if(e===!0){let m=Math.acos(T(n[0].dot(n[t]),-1,1));m/=t,s[0].dot(r.crossVectors(n[0],n[t]))>0&&(m=-m);for(let p=1;p<=t;p++)n[p].applyMatrix4(a.makeRotationAxis(s[p],m*p)),o[p].crossVectors(s[p],n[p])}return{tangents:s,normals:n,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Xs extends K{constructor(t=0,e=0,i=1,s=1,n=0,o=Math.PI*2,r=!1,a=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=s,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=r,this.aRotation=a}getPoint(t,e=new E){const i=e,s=Math.PI*2;let n=this.aEndAngle-this.aStartAngle;const o=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=s;for(;n>s;)n-=s;n<Number.EPSILON&&(o?n=0:n=s),this.aClockwise===!0&&!o&&(n===s?n=-s:n=n-s);const r=this.aStartAngle+t*n;let a=this.aX+this.xRadius*Math.cos(r),l=this.aY+this.yRadius*Math.sin(r);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=a-this.aX,m=l-this.aY;a=d*c-m*u+this.aX,l=d*u+m*c+this.aY}return i.set(a,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Qn extends Xs{constructor(t,e,i,s,n,o){super(t,e,i,i,s,n,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Ji(){let h=0,t=0,e=0,i=0;function s(n,o,r,a){h=n,t=r,e=-3*n+3*o-2*r-a,i=2*n-2*o+r+a}return{initCatmullRom:function(n,o,r,a,l){s(o,r,l*(r-n),l*(a-o))},initNonuniformCatmullRom:function(n,o,r,a,l,c,u){let d=(o-n)/l-(r-n)/(l+c)+(r-o)/c,m=(r-o)/c-(a-o)/(c+u)+(a-r)/u;d*=c,m*=c,s(o,r,d,m)},calc:function(n){const o=n*n,r=o*n;return h+t*n+e*o+i*r}}}const We=new g,_i=new Ji,Vi=new Ji,Fi=new Ji;class to extends K{constructor(t=[],e=!1,i="centripetal",s=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=s}getPoint(t,e=new g){const i=e,s=this.points,n=s.length,o=(n-(this.closed?0:1))*t;let r=Math.floor(o),a=o-r;this.closed?r+=r>0?0:(Math.floor(Math.abs(r)/n)+1)*n:a===0&&r===n-1&&(r=n-2,a=1);let l,c;this.closed||r>0?l=s[(r-1)%n]:(We.subVectors(s[0],s[1]).add(s[0]),l=We);const u=s[r%n],d=s[(r+1)%n];if(this.closed||r+2<n?c=s[(r+2)%n]:(We.subVectors(s[n-1],s[n-2]).add(s[n-1]),c=We),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),m),f=Math.pow(u.distanceToSquared(d),m),x=Math.pow(d.distanceToSquared(c),m);f<1e-4&&(f=1),p<1e-4&&(p=f),x<1e-4&&(x=f),_i.initNonuniformCatmullRom(l.x,u.x,d.x,c.x,p,f,x),Vi.initNonuniformCatmullRom(l.y,u.y,d.y,c.y,p,f,x),Fi.initNonuniformCatmullRom(l.z,u.z,d.z,c.z,p,f,x)}else this.curveType==="catmullrom"&&(_i.initCatmullRom(l.x,u.x,d.x,c.x,this.tension),Vi.initCatmullRom(l.y,u.y,d.y,c.y,this.tension),Fi.initCatmullRom(l.z,u.z,d.z,c.z,this.tension));return i.set(_i.calc(a),Vi.calc(a),Fi.calc(a)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(s.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const s=this.points[e];t.points.push(s.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(new g().fromArray(s))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function _s(h,t,e,i,s){const n=(i-t)*.5,o=(s-e)*.5,r=h*h,a=h*r;return(2*e-2*i+n+o)*a+(-3*e+3*i-2*n-o)*r+n*h+e}function eo(h,t){const e=1-h;return e*e*t}function io(h,t){return 2*(1-h)*h*t}function so(h,t){return h*h*t}function pe(h,t,e,i){return eo(h,t)+io(h,e)+so(h,i)}function no(h,t){const e=1-h;return e*e*e*t}function oo(h,t){const e=1-h;return 3*e*e*h*t}function ro(h,t){return 3*(1-h)*h*h*t}function ao(h,t){return h*h*h*t}function ge(h,t,e,i,s){return no(h,t)+oo(h,e)+ro(h,i)+ao(h,s)}class ho extends K{constructor(t=new E,e=new E,i=new E,s=new E){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=s}getPoint(t,e=new E){const i=e,s=this.v0,n=this.v1,o=this.v2,r=this.v3;return i.set(ge(t,s.x,n.x,o.x,r.x),ge(t,s.y,n.y,o.y,r.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class lo extends K{constructor(t=new g,e=new g,i=new g,s=new g){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=s}getPoint(t,e=new g){const i=e,s=this.v0,n=this.v1,o=this.v2,r=this.v3;return i.set(ge(t,s.x,n.x,o.x,r.x),ge(t,s.y,n.y,o.y,r.y),ge(t,s.z,n.z,o.z,r.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class co extends K{constructor(t=new E,e=new E){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new E){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new E){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class uo extends K{constructor(t=new g,e=new g){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new g){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new g){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class mo extends K{constructor(t=new E,e=new E,i=new E){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new E){const i=e,s=this.v0,n=this.v1,o=this.v2;return i.set(pe(t,s.x,n.x,o.x),pe(t,s.y,n.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Ys extends K{constructor(t=new g,e=new g,i=new g){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new g){const i=e,s=this.v0,n=this.v1,o=this.v2;return i.set(pe(t,s.x,n.x,o.x),pe(t,s.y,n.y,o.y),pe(t,s.z,n.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class po extends K{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new E){const i=e,s=this.points,n=(s.length-1)*t,o=Math.floor(n),r=n-o,a=s[o===0?o:o-1],l=s[o],c=s[o>s.length-2?s.length-1:o+1],u=s[o>s.length-3?s.length-1:o+2];return i.set(_s(r,a.x,l.x,c.x,u.x),_s(r,a.y,l.y,c.y,u.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(s.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const s=this.points[e];t.points.push(s.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const s=t.points[e];this.points.push(new E().fromArray(s))}return this}}var go=Object.freeze({__proto__:null,ArcCurve:Qn,CatmullRomCurve3:to,CubicBezierCurve:ho,CubicBezierCurve3:lo,EllipseCurve:Xs,LineCurve:co,LineCurve3:uo,QuadraticBezierCurve:mo,QuadraticBezierCurve3:Ys,SplineCurve:po});class be extends B{constructor(t=1,e=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:s};const n=t/2,o=e/2,r=Math.floor(i),a=Math.floor(s),l=r+1,c=a+1,u=t/r,d=e/a,m=[],p=[],f=[],x=[];for(let y=0;y<c;y++){const b=y*d-o;for(let v=0;v<l;v++){const w=v*u-n;p.push(w,-b,0),f.push(0,0,1),x.push(v/r),x.push(1-y/a)}}for(let y=0;y<a;y++)for(let b=0;b<r;b++){const v=b+l*y,w=b+l*(y+1),M=b+1+l*(y+1),P=b+1+l*y;m.push(v,w,P),m.push(w,M,P)}this.setIndex(m),this.setAttribute("position",new W(p,3)),this.setAttribute("normal",new W(f,3)),this.setAttribute("uv",new W(x,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new be(t.width,t.height,t.widthSegments,t.heightSegments)}}class ei extends B{constructor(t=.5,e=1,i=32,s=1,n=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:s,thetaStart:n,thetaLength:o},i=Math.max(3,i),s=Math.max(1,s);const r=[],a=[],l=[],c=[];let u=t;const d=(e-t)/s,m=new g,p=new E;for(let f=0;f<=s;f++){for(let x=0;x<=i;x++){const y=n+x/i*o;m.x=u*Math.cos(y),m.y=u*Math.sin(y),a.push(m.x,m.y,m.z),l.push(0,0,1),p.x=(m.x/e+1)/2,p.y=(m.y/e+1)/2,c.push(p.x,p.y)}u+=d}for(let f=0;f<s;f++){const x=f*(i+1);for(let y=0;y<i;y++){const b=y+x,v=b,w=b+i+1,M=b+i+2,P=b+1;r.push(v,w,P),r.push(w,M,P)}}this.setIndex(r),this.setAttribute("position",new W(a,3)),this.setAttribute("normal",new W(l,3)),this.setAttribute("uv",new W(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ei(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class xe extends B{constructor(t=1,e=32,i=16,s=0,n=Math.PI*2,o=0,r=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:s,phiLength:n,thetaStart:o,thetaLength:r},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const a=Math.min(o+r,Math.PI);let l=0;const c=[],u=new g,d=new g,m=[],p=[],f=[],x=[];for(let y=0;y<=i;y++){const b=[],v=y/i;let w=0;y===0&&o===0?w=.5/e:y===i&&a===Math.PI&&(w=-.5/e);for(let M=0;M<=e;M++){const P=M/e;u.x=-t*Math.cos(s+P*n)*Math.sin(o+v*r),u.y=t*Math.cos(o+v*r),u.z=t*Math.sin(s+P*n)*Math.sin(o+v*r),p.push(u.x,u.y,u.z),d.copy(u).normalize(),f.push(d.x,d.y,d.z),x.push(P+w,1-v),b.push(l++)}c.push(b)}for(let y=0;y<i;y++)for(let b=0;b<e;b++){const v=c[y][b+1],w=c[y][b],M=c[y+1][b],P=c[y+1][b+1];(y!==0||o>0)&&m.push(v,w,P),(y!==i-1||a<Math.PI)&&m.push(w,M,P)}this.setIndex(m),this.setAttribute("position",new W(p,3)),this.setAttribute("normal",new W(f,3)),this.setAttribute("uv",new W(x,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xe(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class tt extends B{constructor(t=new Ys(new g(-1,-1,0),new g(-1,1,0),new g(1,1,0)),e=64,i=1,s=8,n=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:s,closed:n};const o=t.computeFrenetFrames(e,n);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const r=new g,a=new g,l=new E;let c=new g;const u=[],d=[],m=[],p=[];f(),this.setIndex(p),this.setAttribute("position",new W(u,3)),this.setAttribute("normal",new W(d,3)),this.setAttribute("uv",new W(m,2));function f(){for(let v=0;v<e;v++)x(v);x(n===!1?e:0),b(),y()}function x(v){c=t.getPointAt(v/e,c);const w=o.normals[v],M=o.binormals[v];for(let P=0;P<=s;P++){const C=P/s*Math.PI*2,S=Math.sin(C),_=-Math.cos(C);a.x=_*w.x+S*M.x,a.y=_*w.y+S*M.y,a.z=_*w.z+S*M.z,a.normalize(),d.push(a.x,a.y,a.z),r.x=c.x+i*a.x,r.y=c.y+i*a.y,r.z=c.z+i*a.z,u.push(r.x,r.y,r.z)}}function y(){for(let v=1;v<=e;v++)for(let w=1;w<=s;w++){const M=(s+1)*(v-1)+(w-1),P=(s+1)*v+(w-1),C=(s+1)*v+w,S=(s+1)*(v-1)+w;p.push(M,P,S),p.push(P,C,S)}}function b(){for(let v=0;v<=e;v++)for(let w=0;w<=s;w++)l.x=v/e,l.y=w/s,m.push(l.x,l.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new tt(new go[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class qi extends ti{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new z(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new z(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ut,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const Vs=new H;class fo{constructor(t,e,i=0,s=1/0){this.ray=new Qe(t,e),this.near=i,this.far=s,this.camera=null,this.layers=new Gs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Vs.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Vs),this}intersectObject(t,e=!0,i=[]){return Li(t,this,i,e),i.sort(Fs),i}intersectObjects(t,e=!0,i=[]){for(let s=0,n=t.length;s<n;s++)Li(t[s],this,i,e);return i.sort(Fs),i}}function Fs(h,t){return h.distance-t.distance}function Li(h,t,e,i){let s=!0;if(h.layers.test(t.layers)&&h.raycast(t,e)===!1&&(s=!1),s===!0&&i===!0){const n=h.children;for(let o=0,r=n.length;o<r;o++)Li(n[o],t,e,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ls}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ls);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Rs={common:{diffuse:{value:new z(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}}},Vt={allEvents:new Map,generalEvents:new Map,viewportEvents:new Map,inspectorEvents:new Map,hierarchyEvents:new Map,subscribe(h,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}i.has(h)||i.set(h,[]),i.get(h).push(e)},unsubscribe(h,t,e){let i;switch(t){case"all":i=this.allEvents;break;case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(h)){const s=i.get(h).indexOf(e);s!==-1&&i.get(h).splice(s,1)}},notify(h,t,e){let i;switch(t){case"all":{for(const s of[this.allEvents,this.generalEvents,this.viewportEvents,this.inspectorEvents,this.hierarchyEvents])if(s.has(h))for(const n of s.get(h))n(e);return}case"general":i=this.generalEvents;break;case"viewport":i=this.viewportEvents;break;case"inspector":i=this.inspectorEvents;break;case"hierarchy":i=this.hierarchyEvents;break}if(i.has(h))for(const s of i.get(h))s(e);if(this.allEvents.has(h))for(const s of this.allEvents.get(h))s(e)}};var Mt=(h=>(h.ALL="all",h.GENERAL="general",h.VIEWPORT="viewport",h.INSPECTOR="inspector",h.HIERARCHY="hierarchy",h))(Mt||{});class Xi{data;width;height;texture;columnConnectionVisuals;rowConnectionVisuals;connectionParentMesh=null;connectionMaterial;constructor(t=4,e=4,i=1.25){this.width=t,this.height=e,this.data=new Float32Array(this.width*this.height*4),this.texture=new As(this.data,this.width,this.height,1023,1015),this.texture.minFilter=this.texture.magFilter=1003,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0,this.connectionMaterial=new pt({color:q(),depthTest:!1,transparent:!0}),this.columnConnectionVisuals=[];for(let s=0;s<this.width;s++){const n=new B().setFromPoints(this.getColumn(s)),o=new G(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,this.columnConnectionVisuals.push(o)}this.rowConnectionVisuals=[];for(let s=0;s<this.height;s++){const n=new B().setFromPoints(this.getRow(s)),o=new G(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,this.rowConnectionVisuals.push(o)}}getTexture(){return this.texture}getWidth(){return this.width}getHeight(){return this.height}toString(){let t=`DynamicVec3Grid: ${this.width}x${this.height}
`;for(let e=0;e<this.height;e++){for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t+=`(${this.data[s].toFixed(2)}, ${this.data[s+1].toFixed(2)}, ${this.data[s+2].toFixed(2)}, ${this.data[s+3].toFixed(2)}) `}t+=`
`}return t}addVisuals(t){if(this.connectionParentMesh===null){this.connectionParentMesh=t;for(let e=0;e<this.width;e++)this.columnConnectionVisuals[e].visible=!1,t.add(this.columnConnectionVisuals[e]);for(let e=0;e<this.height;e++)this.rowConnectionVisuals[e].visible=!1,t.add(this.rowConnectionVisuals[e])}}showVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!0;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!0}hideVisuals(){for(let t=0;t<this.width;t++)this.columnConnectionVisuals[t].visible=!1;for(let t=0;t<this.height;t++)this.rowConnectionVisuals[t].visible=!1}getPoint4(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new R(this.data[i],this.data[i+1],this.data[i+2],this.data[i+3])}getPoint(t,e){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const i=(t*this.width+e)*4;return new g(this.data[i],this.data[i+1],this.data[i+2])}getPoints4(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t.push(new R(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return t}getPoints(){const t=[];for(let e=0;e<this.height;e++)for(let i=0;i<this.width;i++){const s=(e*this.width+i)*4;t.push(new g(this.data[s],this.data[s+1],this.data[s+2]))}return t}setPoint4(t,e,i){if(t<0||t>=this.height||e<0||e>=this.width)throw new Error("Index out of bounds");const s=(t*this.width+e)*4;this.data[s]=i.x,this.data[s+1]=i.y,this.data[s+2]=i.z,this.data[s+3]=i.w,this.texture.needsUpdate=!0;const n=new B().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=n;const o=new B().setFromPoints(this.getRow(t));this.rowConnectionVisuals[t].geometry.dispose(),this.rowConnectionVisuals[t].geometry=o}setPoint(t,e,i){this.setPoint4(t,e,new R(i.x,i.y,i.z,1))}getColumn4(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const s=(i*this.width+t)*4;e.push(new R(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return e}getColumn(t){if(t<0||t>=this.width)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.height;i++){const s=(i*this.width+t)*4;e.push(new g(this.data[s],this.data[s+1],this.data[s+2]))}return e}getRow4(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const s=(t*this.width+i)*4;e.push(new R(this.data[s],this.data[s+1],this.data[s+2],this.data[s+3]))}return e}getRow(t){if(t<0||t>=this.height)throw new Error("Index out of bounds");const e=[];for(let i=0;i<this.width;i++){const s=(t*this.width+i)*4;e.push(new g(this.data[s],this.data[s+1],this.data[s+2]))}return e}addColumn(t,e=!1){this.resizeBuffer(this.width+1,this.height),e&&this.shiftColumnRight();const i=e?0:this.width-1,s=e?1:this.width-2,n=new B().setFromPoints(this.getColumn(i)),o=new G(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,e?this.columnConnectionVisuals.unshift(o):this.columnConnectionVisuals.push(o),this.connectionParentMesh?.add(this.columnConnectionVisuals[i]);const r=this.getColumn(s);for(let a=0;a<this.height;a++){const l=r[a].clone().sub(t);this.setPoint(a,i,l)}}removeColumn(t=!1){if(!(this.width<=2)){t&&this.shiftColumnLeft(),this.resizeBuffer(this.width-1,this.height),t?(this.connectionParentMesh?.remove(this.columnConnectionVisuals[0]),this.columnConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.columnConnectionVisuals[this.width]),this.columnConnectionVisuals.pop());for(let e=0;e<this.height;e++){const i=new B().setFromPoints(this.getRow(e));this.rowConnectionVisuals[e].geometry.dispose(),this.rowConnectionVisuals[e].geometry=i}}}addRow(t,e=!1){this.resizeBuffer(this.width,this.height+1),e&&this.shiftRowDown();const i=e?0:this.height-1,s=e?1:this.height-2,n=new B().setFromPoints(this.getRow(i)),o=new G(n,this.connectionMaterial);o.renderOrder=1e3,o.castShadow=!0,e?this.rowConnectionVisuals.unshift(o):this.rowConnectionVisuals.push(o),this.connectionParentMesh?.add(this.rowConnectionVisuals[i]);const r=this.getRow(s);for(let a=0;a<this.width;a++){const l=r[a].clone().sub(t);this.setPoint(i,a,l)}}removeRow(t=!1){if(!(this.height<=2)){t&&this.shiftRowUp(),this.resizeBuffer(this.width,this.height-1),t?(this.connectionParentMesh?.remove(this.rowConnectionVisuals[0]),this.rowConnectionVisuals.shift()):(this.connectionParentMesh?.remove(this.rowConnectionVisuals[this.height]),this.rowConnectionVisuals.pop());for(let e=0;e<this.width;e++){const i=new B().setFromPoints(this.getColumn(e));this.columnConnectionVisuals[e].geometry.dispose(),this.columnConnectionVisuals[e].geometry=i}}}shiftColumnRight(){for(let t=0;t<this.height;t++)for(let e=this.width-1;e>0;e--){const i=(t*this.width+e)*4,s=(t*this.width+(e-1))*4;this.data.set(this.data.slice(s,s+4),i)}}shiftColumnLeft(){for(let t=0;t<this.height;t++)for(let e=0;e<this.width-1;e++){const i=(t*this.width+e)*4,s=(t*this.width+(e+1))*4;this.data.set(this.data.slice(s,s+4),i)}}shiftRowDown(){for(let t=this.height-1;t>0;t--)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,s=((t-1)*this.width+e)*4;this.data.set(this.data.slice(s,s+4),i)}}shiftRowUp(){for(let t=0;t<this.height-1;t++)for(let e=0;e<this.width;e++){const i=(t*this.width+e)*4,s=((t+1)*this.width+e)*4;this.data.set(this.data.slice(s,s+4),i)}}resizeBuffer(t,e){const i=new Float32Array(t*e*4);for(let s=0;s<this.height&&!(s>=e);s++)for(let n=0;n<this.width&&!(n>=t);n++){const o=(s*this.width+n)*4,r=(s*t+n)*4;i.set(this.data.slice(o,o+4),r)}this.width=t,this.height=e,this.data=i,this.texture.dispose(),this.texture=new As(this.data,t,e,1023,1015),this.texture.minFilter=this.texture.magFilter=1003,this.texture.generateMipmaps=!1,this.texture.needsUpdate=!0}}class yo{parentObject;index;radius;mesh;material;constructor(t,e,i=.2){this.parentObject=t,this.index=e,this.radius=i;const s=new xe(this.radius);this.material=new J({color:je(),depthTest:!1,transparent:!0}),this.mesh=new O(s,this.material),this.mesh.castShadow=!0,this.mesh.renderOrder=1001,this.adjustScale(),A.onControlsChange(this.adjustScale.bind(this)),Vt.subscribe("modeSwitched",Mt.ALL,()=>{this.material.color.set(je())})}getMesh(){return this.mesh}getParentObject(){return this.parentObject}getIndex(){return this.index}getPosition(){return this.mesh.position.clone()}getWorldPosition(){return this.mesh.getWorldPosition(new g)}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}highlight(){this.material.color.set(Rt())}resetHighlight(){this.material.color.set(je())}select(){this.material.color.set(q())}resetSelect(){this.material.color.set(je())}hide(){this.mesh.visible=!1}show(){this.mesh.visible=!0}getActive(){return this.mesh.visible}adjustScale(){if(A.dimension2D()){this.mesh.scale.set(1,1,1);return}const t=this.mesh.position.distanceTo(A.getCamera().position),i=Math.abs(t)/10,s=Math.max(1,Math.min(i,20));this.mesh.scale.set(s,s,s)}}class Lt{name;mesh;uuid;type;export;color=new z(0);editHandles;constructor(t,e,i=new g(0,0,0)){this.name=t,this.mesh=e,this.mesh.position.set(i.x,i.y,i.z),this.mesh.castShadow=!0,this.mesh.frustumCulled=!1,this.uuid=js.generateUUID(),this.type="VisualObject",this.export=null,this.editHandles=new Map}getName(){return this.name}setName(t){this.name=t}getColor(){return this.color.clone()}setColor(t){this.color.set(t)}getUUID(){return this.uuid}getType(){return this.type}getExport(){return this.export}getMesh(){return this.mesh}getPosition(){const t=new g;return t.copy(this.mesh.position),t}setPosition(t){this.mesh.position.set(t.x,t.y,t.z)}move(t,e,i){var s=this.getPosition();s&&(s.x+=t,s.y+=e,s.z+=i,this.setPosition(s))}moveX(t){this.move(t,0,0)}moveY(t){this.move(0,t,0)}moveZ(t){this.move(0,0,t)}edit(){return console.warn("VisualObject: Edit not implemented!"),()=>{console.error("VisualObject: Edit not implemented!")}}createEditHandle(t,e=.2){const i=new yo(this,t,e);this.editHandles.set(t,i),A.getObjectManager().addEditHandle(i)}hasEditHandle(t){return this.editHandles.has(t)}setEditHandlePosition(t,e){if(!this.editHandles.has(t)){console.error("VisualObject:setEditHandlePosition: Edit handle not found!");return}const i=this.editHandles.get(t);i&&i.setPosition(e)}getEditHandlePosition(t){if(!this.editHandles.has(t))return console.error("VisualObject:getEditHandlePosition: Edit handle not found!"),null;const e=this.editHandles.get(t);return e?e.getPosition():null}removeEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:removeEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&(A.getObjectManager().removeEditHandle(e),this.editHandles.delete(t))}removeEditHandles(){this.editHandles.forEach((t,e)=>{A.getObjectManager().removeEditHandle(t)}),this.editHandles.clear()}hideEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:hideEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.hide()}showEditHandle(t){if(!this.editHandles.has(t)){console.error("VisualObject:showEditHandle: Edit handle not found!");return}const e=this.editHandles.get(t);e&&e.show()}hideEditHandles(){this.editHandles.forEach((t,e)=>{t.hide()})}showEditHandles(){this.editHandles.forEach((t,e)=>{t.show()})}unedit(){console.warn("VisualObject: Unedit not implemented!")}}function xo(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float binomial(int n, int k){
        if(k > n) return 0.0;
        if(k == 0 || k == n) return 1.0;
        float res = 1.0;
        for(int i = 0; i < k; i++){
            res *= float(n - i) / float(i + 1);
        }
        return res;
    }

    float bernstein(int n, int i, float t){
        return binomial(n, i) * pow(t, float(i)) * pow(1.0 - t, float(n - i));
    }

    // Derivative of the Bernstein polynomial with respect to t
    float bernsteinDerivative(int n, int i, float t) {
        if (i == 0) return -float(n) * bernstein(n - 1, i, t);
        if (i == n) return float(n) * bernstein(n - 1, i - 1, t);
        return float(n) * (bernstein(n - 1, i - 1, t) - bernstein(n - 1, i, t));
    }

    vec3 getControlPoint(int i, int j){
        vec2 texCoord = vec2(float(i) / float(controlPointsWidth - 1), float(j) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0001, 0.9999);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 bezierPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        for(int i = 0; i < controlPointsWidth; i++){
            float bernsteinU = bernstein(controlPointsWidth - 1, i, u);
            float bernsteinUDerivative = bernsteinDerivative(controlPointsWidth - 1, i, u);
            for(int j = 0; j < controlPointsHeight; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float bernsteinV = bernstein(controlPointsHeight - 1, j, v);
                float bernsteinVDerivative = bernsteinDerivative(controlPointsHeight - 1, j, v);
                bezierPoint += controlPoint * bernsteinU * bernsteinV;
                tangentU += controlPoint * bernsteinUDerivative * bernsteinV;
                tangentV += controlPoint * bernsteinU * bernsteinVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(bezierPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(bezierPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function Pt(h,t,e){if(h.length!==t*e)throw console.error("Invalid points array length:",h.length,"Expected:",t*e,t,e),new Error("Points array length must match width * height");const i=new B,s=[],n=[];for(const o of h)s.push(o.x,o.y,o.z);for(let o=0;o<e-1;o++)for(let r=0;r<t-1;r++){const a=o*t+r,l=a+1,c=a+t,u=c+1;n.push(a,c,l),n.push(l,c,u)}return i.setAttribute("position",new W(s,3)),i.setIndex(n),i.computeVertexNormals(),i}const te={};function wo(h,t){if(t===0||t===h)return 1;if(te[h]&&te[h][t])return te[h][t];for(var e=1,i=1;i<=t;i++)e*=(h-i+1)/i;return te[h]||(te[h]={}),te[h][t]=e,e}function Zs(h,t,e){return new g(Ri(h.x,t.x,e),Ri(h.y,t.y,e),Ri(h.z,t.z,e))}function vo(h,t,e){return Zs(h.position,t.position,e)}function Ri(h,t,e){return h+(t-h)*e}function Ks(h,t,e,i,s){return i+(h-t)*(s-i)/(e-t)}function at(h,t,e){return(h<0||t<0||t>h)&&console.log("berstein: Invalid arguments for n or i: ",h,t),(e<0||e>1)&&console.log("berstein: Invalid arguments for t: ",e),wo(h,t)*Math.pow(e,t)*Math.pow(1-e,h-t)}function Ds(h,t,e){return(h<0||t<0||t>h)&&console.log("bersteinDerivative: Invalid arguments for n or i: ",h,t),(e<0||e>1)&&console.log("bersteinDerivative: Invalid arguments for t: ",e),t===0?-h*at(h-1,t,e):t===h?h*at(h-1,t-1,e):h*(at(h-1,t-1,e)-at(h-1,t,e))}function Di(h,t,e){const i=[];for(let s=0;s<e;s++){const n=s/(e-1);for(let o=0;o<t;o++){const r=o/(t-1);i.push(bo(h,r,n))}}return i}function bo(h,t,e){const i=new g(0,0,0);for(let s=0;s<h.getWidth();s++){const n=at(h.getWidth()-1,s,t);for(let o=0;o<h.getHeight();o++){const r=h.getPoint(o,s),a=at(h.getHeight()-1,o,e);i.add(r.clone().multiplyScalar(n*a))}}return i}class $s{uniforms;constructor(){this.uniforms=new Map}add(t){const e=this.uniforms.get(t.getName());if(e&&e.getType()===t.getType()){e.value=t.value;return}this.uniforms.set(t.getName(),t)}has(t){return this.uniforms.has(t)}get(t){return this.uniforms.get(t)}getAll(){return Array.from(this.uniforms.values())}mergeFrom(t){t.getAll().forEach(e=>{this.add(e)})}getTHREEUniforms(){const t={};return this.uniforms.forEach(e=>{t[e.getName()]={value:e.value}}),t}}class ii{label;element;onChangeCallback=()=>{};updateCallbacks=[];constructor(t,e){this.label=t,this.element=e}onChange(t){return this.onChangeCallback=t,this}changed(){this.onChangeCallback();for(const t of this.updateCallbacks)t()}registerUpdateCallback(t){this.updateCallbacks.push(t)}deregisterUpdateCallback(t){const e=this.updateCallbacks.indexOf(t);e!==-1&&this.updateCallbacks.splice(e,1)}}class Qs extends ii{button;constructor(t,e,i,s={}){const{variant:n="default",outline:o=!0,pill:r=!1,previews:a=[],previewSize:l=40,hoist:c=!0}=s,u=document.createElement("sl-dropdown");u.style.width="100%",u.style.paddingBottom="1rem",u.hoist=c;const d=document.createElement("sl-button");d.slot="trigger",d.caret=!0,d.variant=n,d.outline=o,d.pill=r,d.style.width="100%",d.style.display="block",d.appendChild(document.createTextNode(t)),u.appendChild(d);const m=document.createElement("sl-menu");u.appendChild(m);var p=0;const f=a.length>0&&a.length==Object.keys(e).length;a.length>0&&!f&&console.warn("Previews are not shown because the number of previews does not match the number of options.");for(const x in e){const y=document.createElement("sl-menu-item");if(y.value=x,y.classList.add("lacery-menu-item"),y.appendChild(document.createTextNode(e[x])),f){const b=document.createElement("img");b.src=a[p],b.style.width=`${l}px`,b.style.height=`${l}px`,b.slot="prefix",y.appendChild(b),p++}m.appendChild(y)}m.addEventListener("sl-select",x=>{const y=x.detail.item.value;i(y)}),super(t,u),this.button=d}getObj(){return null}getKeys(){return[]}update(){}setSize(t){this.button.size=t}}class fe extends ii{obj;key;range;input;constructor(t,e,i,s={}){const{help:n="",min:o=0,max:r=100,step:a=1}=s,l=document.createElement("div");l.style.display="flex",l.style.flexDirection="row",l.style.alignItems="center",l.style.justifyContent="space-between";const c=document.createElement("sl-range");c.label=t,c.helpText=n,c.min=o,c.max=r,c.step=a,c.value=e[i];const u=document.createElement("sl-input");u.type="number",u.min=o,u.max=r,u.step=a,u.value=e[i],c.addEventListener("sl-input",()=>{e[i]=c.value,u.value=c.value.toString(),this.changed()}),u.addEventListener("sl-input",()=>{e[i]=parseFloat(u.value),c.value=parseFloat(u.value),this.changed()}),c.style.width="60%",c.style.marginRight="1em",u.style.width="40%",l.appendChild(c),l.appendChild(u),super(t,l),this.obj=e,this.key=i,this.range=c,this.input=u}getObj(){return this.obj}getKeys(){return[this.key]}update(){this.range.value=this.obj[this.key],this.input.value=this.obj[this.key].toString()}setSize(t){this.input.size=t,t==="small"&&this.range.classList.add("small"),this.range.style.setProperty("--thumb-size",t==="small"?"15px":t==="medium"?"20px":"25px"),this.range.style.setProperty("--track-height",t==="small"?"5px":t==="medium"?"6px":"7px")}setMin(t){this.range.min=t,this.input.min=t}setMax(t){this.range.max=t,this.input.max=t}}class ct extends ii{obj;key;img;name;size;hasTextureFlag=!1;constructor(t,e,i,s={}){const{size:n=80,onTextureAdded:o=()=>{},onTextureRemoved:r=()=>{}}=s,a=document.createElement("div");a.style.display="flex",a.style.flexDirection="row",a.style.alignItems="flex-start",a.style.justifyContent="space-between";const l=document.createElement("label");l.innerHTML=t;const c=document.createElement("div");c.style.position="relative",c.style.cursor="pointer",c.style.fontSize="30px";const u=document.createElement("img");u.style.width=n+"px",u.style.height=n+"px",u.style.objectFit="cover",u.style.borderRadius="3px",u.style.border="1px solid var(--sl-color-neutral-300)",u.style.transition="filter 0.1s ease",c.appendChild(u);const d=document.createElement("sl-icon");d.name="upload",d.style.position="absolute",d.style.top="50%",d.style.left="50%",d.style.transform="translate(-50%, -50%)",d.style.color="white",d.style.opacity="0",d.style.transition="opacity 0.1s ease",c.appendChild(d);const m=document.createElement("sl-icon");m.name="x-lg",m.style.position="absolute",m.style.top="50%",m.style.left="50%",m.style.transform="translate(-50%, -50%)",m.style.color="white",m.style.opacity="0",m.style.transition="opacity 0.1s ease",c.appendChild(m),a.appendChild(l),a.appendChild(c),super(t,a),this.obj=e,this.key=i,this.img=u,this.name=t,this.size=n,c.onclick=()=>{this.hasTextureFlag?(this.obj[this.key]=null,this.updateBlob(),this.changed(),r()):this.uploadImage(o)},c.onmouseover=()=>{this.img.style.filter="brightness(50%)",d.style.opacity=this.hasTextureFlag?"0":"1",m.style.opacity=this.hasTextureFlag?"1":"0"},c.onmouseout=()=>{this.img.style.filter="none",d.style.opacity="0",m.style.opacity="0"},this.updateBlob()}getObj(){return this.obj}getKeys(){return[this.key]}update(){}updateBlob(){this.img.src.startsWith("blob:")&&URL.revokeObjectURL(this.img.src);const t=this.obj[this.key];this.hasTextureFlag=t!=null,this.hasTextureFlag&&t instanceof Blob?this.img.src=URL.createObjectURL(t):this.img.src=`https://placehold.co/${this.size}?text=${this.name}&font=roboto`}setSize(t){}hasTexture(){return this.hasTextureFlag}uploadImage(t){const e=document.createElement("input");e.type="file",e.accept=".png, .jpg, .jpeg",e.onchange=i=>{try{const s=i.target,n=s.files?.item(0);n&&(this.obj[this.key]=n,this.updateBlob(),this.changed(),t())}catch(s){console.warn("Error while loading image file: ",s)}},e.click()}}class Yi extends ii{obj;xKey;yKey;xInput;yInput;constructor(t,e,i,s,n={}){const{help:o="",xStep:r=1,yStep:a=1}=n,l=document.createElement("div");l.style.display="flex",l.style.flexDirection="row",l.style.alignItems="center",l.style.justifyContent="space-between";const c=document.createElement("sl-input");c.type="number",c.label=t,c.helpText=o,c.step=r,c.value=e[i];const u=document.createElement("sl-input");u.type="number",u.label=" ",u.step=a,u.value=e[s],c.addEventListener("sl-input",()=>{e[i]=isNaN(parseFloat(c.value))?0:parseFloat(c.value),this.changed()}),u.addEventListener("sl-input",()=>{e[s]=isNaN(parseFloat(u.value))?0:parseFloat(u.value),this.changed()}),c.style.width="45%",u.style.width="45%",l.appendChild(c),l.appendChild(u),super(t,l),this.obj=e,this.xKey=i,this.yKey=s,this.xInput=c,this.yInput=u}getObj(){return this.obj}getKeys(){return[this.xKey,this.yKey]}update(){this.xInput.value=this.obj[this.xKey],this.yInput.value=this.obj[this.yKey]}setSize(t){this.xInput.size=t,this.yInput.size=t}}class Zi{uniforms;enviroment;updateCallback=void 0;constructor(){this.uniforms=new $s,this.enviroment=!1}getUniforms(){return this.uniforms}setUpdateCallback(t){this.updateCallback=t}removeUpdateCallback(){this.updateCallback=void 0}}class si{name;type;value;constructor(t,e,i){this.name=t,this.type=e,this.value=i}getName(){return this.name}getType(){return this.type}}class ye extends si{constructor(t,e){super(t,1,e)}}class ut extends si{constructor(t,e){super(t,2,e)}}class Ki extends si{constructor(t,e){super(t,3,e)}}class dt extends si{blob;image;constructor(t,e){const i=new mt;i.wrapS=i.wrapT=1e3,super(t,7,i),e!==null?(this.image=new Image,this.image.src=URL.createObjectURL(e),this.image.onload=()=>{i.image=this.image,i.needsUpdate=!0}):(this.image=null,this.value.image=A.getDefaultImage(),i.needsUpdate=!0),this.blob=e}update(){this.image!==null&&this.image.src&&URL.revokeObjectURL(this.image.src),this.value.dispose();const t=new mt;t.wrapS=t.wrapT=1e3,this.value=t,this.blob!==null?(this.image===null&&(this.image=new Image),this.image.src=URL.createObjectURL(this.blob),this.image.onload=()=>{this.value.image=this.image,this.value.needsUpdate=!0}):(this.image=null,this.value.image=A.getDefaultImage(),this.value.needsUpdate=!0)}}class Mo extends Zi{tiling;useMainTexture;mainTexture;mainElement;constructor(){super(),this.tiling=new Ki("tiling",new E(1,1)),this.useMainTexture=new ut("useMainTexture",!1),this.mainTexture=new dt("mainTexture",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture);const t=new ct("Texture",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t}getName(){return"Diffuse"}getFragmentShader(){return Po()}buildUI(t){const e=new Yi("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y]}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1]}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.mainElement.updateBlob()}}function Po(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 color = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Calculate the normal
            vec3 normal = normalize(vNormal);

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor;
            vec3 diffuse = diff * lightColor;

            vec3 finalColor = (ambient + diffuse) * color;

            // Final output
            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}class ni extends Zi{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;shininess;useNormalMap;normalMap;normalStrength;useAOMap;aoMap;mainElement;roughnessElement;normalElement;aoElement;constructor(){super(),this.tiling=new Ki("tiling",new E(1,1)),this.useMainTexture=new ut("useMainTexture",!1),this.mainTexture=new dt("mainTexture",null),this.useRoughnessMap=new ut("useRoughnessMap",!1),this.roughnessMap=new dt("roughnessMap",null),this.shininess=new ye("shininess",.5),this.useNormalMap=new ut("useNormalMap",!1),this.normalMap=new dt("normalMap",null),this.normalStrength=new ye("normalStrength",1),this.useAOMap=new ut("useAOMap",!1),this.aoMap=new dt("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.shininess),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new ct("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new ct("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new ct("Normal",this.normalMap,"blob");i.onChange(()=>{this.useNormalMap.value=i.hasTexture(),this.normalMap.update()}),this.normalElement=i;const s=new ct("Ambient Occlusion",this.aoMap,"blob");s.onChange(()=>{this.useAOMap.value=s.hasTexture(),this.aoMap.update()}),this.aoElement=s}getName(){return"Blinn-Phong"}getFragmentShader(){return Co()}buildUI(t){t.add(new Qs("Load a preset...",{rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark",onyx:"Onyx"},this.presetSelect.bind(this),{previews:["textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg","textures/onyx/albedo.jpg"],previewSize:64}));const e=new Yi("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new fe("Shininess",this.shininess,"value",{min:.01,max:1,step:.01})),t.add(this.normalElement),t.add(new fe("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],shininess:this.shininess.value,normalStrength:this.normalStrength.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.shininess.value=t.shininess,this.normalStrength.value=t.normalStrength}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,s,n,o]=await Promise.all([vt(t,e.albedo),vt(t,e.ambientocclusion),vt(t,e.normal),vt(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=o,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.normalMap.blob=n,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=s,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function Co(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float shininess;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>
    
        void main(){
            // Get the tilied UV
            vec2 uv = vUV * tiling;

            // Get the base color
            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;

            // Get the normal (one minus as a weird fix beacause the vertex shader flips the sides)
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            // Calculate the ambient occlusion
            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            // Calculate the light direction
            vec3 lightDir = directionalLights[0].direction;

            // Calculate the view direction
            vec3 viewDir = normalize(vViewPosition);

            // Calculate the half vector
            vec3 halfDir = normalize(lightDir + viewDir);

            // Calculate the diffuse part
            float diff = max(dot(lightDir, normal), 0.0);

            // Calculate the specular part
            float spec = pow(max(dot(halfDir, normal), 0.0), 200.0 * shininess);

            // Calculate the roughness
            float roughness = useRoughnessMap ? texture2D(roughnessMap, uv).r : 0.0;
            spec *= (1.0 - roughness);

            // Calculate the Blinn-Phong components
            vec3 lightColor = directionalLights[0].color;
            vec3 ambient = ambientLightColor * ao;
            vec3 diffuse = diff * lightColor;
            vec3 specular = spec * lightColor;

            vec3 blinnPhong = (ambient + diffuse + specular) * albedo;

            // Final output
            gl_FragColor = vec4(blinnPhong, 1.0);
        }
    `}class So extends Zi{tiling;useMainTexture;mainTexture;useRoughnessMap;roughnessMap;roughness;useNormalMap;normalMap;normalStrength;useMetallicMap;metallicMap;metallic;useAOMap;aoMap;mainElement;roughnessElement;metallicElement;normalElement;aoElement;constructor(){super(),this.enviroment=!0,this.tiling=new Ki("tiling",new E(1,1)),this.useMainTexture=new ut("useMainTexture",!1),this.mainTexture=new dt("mainTexture",null),this.useRoughnessMap=new ut("useRoughnessMap",!1),this.roughnessMap=new dt("roughnessMap",null),this.roughness=new ye("roughness",.5),this.useMetallicMap=new ut("useMetallicMap",!1),this.metallicMap=new dt("metallicMap",null),this.metallic=new ye("metallic",.5),this.useNormalMap=new ut("useNormalMap",!1),this.normalMap=new dt("normalMap",null),this.normalStrength=new ye("normalStrength",1),this.useAOMap=new ut("useAOMap",!1),this.aoMap=new dt("aoMap",null),this.uniforms.add(this.tiling),this.uniforms.add(this.useMainTexture),this.uniforms.add(this.mainTexture),this.uniforms.add(this.roughnessMap),this.uniforms.add(this.useRoughnessMap),this.uniforms.add(this.roughness),this.uniforms.add(this.useMetallicMap),this.uniforms.add(this.metallicMap),this.uniforms.add(this.metallic),this.uniforms.add(this.useNormalMap),this.uniforms.add(this.normalMap),this.uniforms.add(this.normalStrength),this.uniforms.add(this.useAOMap),this.uniforms.add(this.aoMap);const t=new ct("Albedo",this.mainTexture,"blob");t.onChange(()=>{this.useMainTexture.value=t.hasTexture(),this.mainTexture.update()}),this.mainElement=t;const e=new ct("Roughness",this.roughnessMap,"blob");e.onChange(()=>{this.useRoughnessMap.value=e.hasTexture(),this.roughnessMap.update()}),this.roughnessElement=e;const i=new ct("Metallic",this.metallicMap,"blob");i.onChange(()=>{this.useMetallicMap.value=i.hasTexture(),this.metallicMap.update()}),this.metallicElement=i;const s=new ct("Normal",this.normalMap,"blob");s.onChange(()=>{this.useNormalMap.value=s.hasTexture(),this.normalMap.update()}),this.normalElement=s;const n=new ct("Ambient Occlusion",this.aoMap,"blob");n.onChange(()=>{this.useAOMap.value=n.hasTexture(),this.aoMap.update()}),this.aoElement=n}getName(){return"PBR"}getFragmentShader(){return Eo()}buildUI(t){t.add(new Qs("Load a preset...",{metal:"Metal",rustymetal:"Rusty Metal",facade:"Facade",onyx:"Onyx",rock:"Rock",mossyrock:"Mossy Rock",bark:"Bark"},this.presetSelect.bind(this),{previews:["textures/metal/albedo.jpg","textures/rustymetal/albedo.jpg","textures/facade/albedo.jpg","textures/onyx/albedo.jpg","textures/rock/albedo.jpg","textures/mossyrock/albedo.jpg","textures/bark/albedo.jpg"],previewSize:64}));const e=new Yi("Tiling",this.tiling.value,"x","y",{xStep:.1,yStep:.1});t.add(e.onChange(()=>{this.tiling.value.x<.1&&(this.tiling.value.x=.1),this.tiling.value.y<.1&&(this.tiling.value.y=.1),e.update()})),t.add(this.mainElement),t.add(this.roughnessElement),t.add(new fe("Roughness",this.roughness,"value",{min:.04,max:1,step:.01})),t.add(this.metallicElement),t.add(new fe("Metallic Strength",this.metallic,"value",{min:0,max:1,step:.01})),t.add(this.normalElement),t.add(new fe("Normal Strength",this.normalStrength,"value",{min:0,max:1,step:.01})),t.add(this.aoElement)}toJSON(){return{tiling:[this.tiling.value.x,this.tiling.value.y],roughness:this.roughness.value,normalStrength:this.normalStrength.value,metallic:this.metallic.value}}fromJSON(t){this.tiling.value.x=t.tiling[0],this.tiling.value.y=t.tiling[1],this.roughness.value=t.roughness,this.normalStrength.value=t.normalStrength,this.metallic.value=t.metallic}dispose(){this.mainTexture.blob=null,this.mainTexture.update(),this.roughnessMap.blob=null,this.roughnessMap.update(),this.metallicMap.blob=null,this.metallicMap.update(),this.normalMap.blob=null,this.normalMap.update(),this.aoMap.blob=null,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob()}async presetSelect(t){const e={albedo:"albedo.jpg",ambientocclusion:"ao.jpg",metallic:"metallic.jpg",normal:"normal.jpg",roughness:"roughness.jpg"};try{const[i,s,n,o,r]=await Promise.all([vt(t,e.albedo),vt(t,e.ambientocclusion),vt(t,e.metallic),vt(t,e.normal),vt(t,e.roughness)]);this.mainTexture.blob=i,this.useMainTexture.value=!0,this.mainTexture.update(),this.roughnessMap.blob=r,this.useRoughnessMap.value=!0,this.roughnessMap.update(),this.metallicMap.blob=n,this.useMetallicMap.value=!0,this.metallicMap.update(),this.normalMap.blob=o,this.useNormalMap.value=!0,this.normalMap.update(),this.aoMap.blob=s,this.useAOMap.value=!0,this.aoMap.update(),this.mainElement.updateBlob(),this.roughnessElement.updateBlob(),this.metallicElement.updateBlob(),this.normalElement.updateBlob(),this.aoElement.updateBlob(),this.updateCallback?.()}catch(i){console.error("Error loading textures",i);return}}}function Eo(){return`
        uniform vec2 tiling;

        uniform bool useMainTexture;
        uniform sampler2D mainTexture;
        
        uniform bool useRoughnessMap;
        uniform sampler2D roughnessMap;
        uniform float roughness;

        uniform bool useMetallicMap;
        uniform sampler2D metallicMap;
        uniform float metallic;
        
        uniform bool useNormalMap;
        uniform sampler2D normalMap;
        uniform float normalStrength;

        uniform bool useAOMap;
        uniform sampler2D aoMap;

        uniform sampler2D envMap;
        uniform float envMapIntensity;

        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        varying vec2 vUV;
        varying vec3 vViewPosition;
        varying mat3 vTBN;
        varying vec3 vWorldNormal;

        #include <common>
        #include <lights_pars_begin>

        vec3 getEnvColor(){
            vec3 envReflect = reflect(normalize(vPosition - cameraPosition), vWorldNormal);

            vec2 uv = vec2(atan(envReflect.z, envReflect.x) / (2.0 * PI) + 0.5, 
                   asin(envReflect.y) / PI + 0.5);
    
            vec3 envColor = texture2D(envMap, uv).rgb;

            return envColor;
        }

        vec3 fresnelSchlick(vec3 F0, float VdotH){
            return F0 + (1.0 - F0) * pow(1.0 - VdotH, 5.0);
        }

        float GSchlick(float dot, float k){
            return dot / (dot * (1.0 - k) + k);
        }

        float DGGX(float NdotH, float roughness){
            float alpha = roughness * roughness;
            float a2 = alpha * alpha;
            float inDenom = NdotH * NdotH * (a2 - 1.0) + 1.0;
            return a2 / (PI * inDenom * inDenom);
        }

        float SmithGGX(float NdotV, float NdotL, float roughness){
            float roughness1 = roughness + 1.0;
            float k = roughness1 * roughness1 / 8.0;
            return GSchlick(NdotV, k) * GSchlick(NdotL, k);
        }

        void main() {
            vec2 uv = vUV * tiling;

            vec3 albedo = useMainTexture ? texture2D(mainTexture, uv).rgb : vColor;
            
            vec3 normal = normalize(vNormal);
            if(useNormalMap){
                vec3 tangentNormal = texture2D(normalMap, uv).xyz * 2.0 - 1.0;
                float nrmStrength = normalStrength;
                vec3 worldNormal = normalize(vTBN * tangentNormal);
                normal = normalize(mix(normal, worldNormal, nrmStrength));
            }

            float rough = useRoughnessMap ? texture2D(roughnessMap, uv).r * roughness : roughness;

            float ao = useAOMap ? texture2D(aoMap, uv).r : 1.0;

            float metal = useMetallicMap ? texture2D(metallicMap, uv).r * metallic : metallic;

            vec3 lightColor = directionalLights[0].color;
            vec3 ambientColor = ambientLightColor;
            vec3 envColor = getEnvColor();

            vec3 ambient = ambientColor * albedo * ao;

            vec3 N = normal;
            vec3 L = directionalLights[0].direction;
            vec3 V = normalize(vViewPosition);
            vec3 H = normalize(L + V);

            float NdotL = max(dot(N, L), 0.0);
            float NdotV = max(dot(N, V), 0.0);
            float NdotH = max(dot(N, H), 0.0);
            float VdotH = max(dot(V, H), 0.0);

            vec3 F0 = mix(vec3(0.04), albedo, metal);
            vec3 F = fresnelSchlick(F0, VdotH);
            float D = DGGX(NdotH, rough);
            float G = SmithGGX(NdotV, NdotL, rough);

            float denom = 4.0 * NdotV * NdotL + 0.001;
            vec3 specular = (D * F * G) / denom;

            vec3 kS = F;
            vec3 kD = (1.0 - kS) * (1.0 - metal);
            vec3 diffuse = kD * albedo / PI;

            vec3 Lo = (diffuse + specular) * lightColor * NdotL;

            vec3 reflection = envColor * F * envMapIntensity;

            vec3 finalColor = Lo + ambient + reflection * (1.0 - rough) * metal;

            gl_FragColor = vec4(finalColor, 1.0);
        }
    `}function $i(){return{Diffuse:{name:"Diffuse",create:()=>new Mo},"Blinn-Phong":{name:"Blinn-Phong",create:()=>new ni},PBR:{name:"PBR",create:()=>new So}}}class Qi{vertexShader;controlPoints;color;shadingModel;uniformSet;material;group=void 0;constructor(t,e,i,s,n={}){this.vertexShader=t,this.controlPoints=e,this.color=i.clone(),this.shadingModel=s,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet=new $s,this.uniformSet.mergeFrom(s.getUniforms()),this.material=new Kn({vertexShader:this.vertexShader,fragmentShader:this.shadingModel.getFragmentShader(),uniforms:{...this.getUniforms(),...this.getEnviromentUniforms(),...Rs.common,...Rs.lights,...n},side:2,lights:!0}),Vt.subscribe("enviromentChanged",Mt.ALL,this.updateEnviroment.bind(this)),Vt.subscribe("enviromentIntensityChanged",Mt.ALL,this.updateEnviromentIntensity.bind(this))}update(){this.updateUniforms()}updateControlPoints(){this.material.uniforms.controlPointsTexture.value=this.controlPoints.getTexture(),this.material.uniforms.controlPointsWidth.value=this.controlPoints.getWidth(),this.material.uniforms.controlPointsHeight.value=this.controlPoints.getHeight()}getMaterial(){return this.material}setColor(t){this.color.set(t),this.material.uniforms.color.value.set(t)}setShadingModel(t){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.shadingModel=t,this.shadingModel.setUpdateCallback(this.updateUniforms.bind(this)),this.uniformSet.mergeFrom(t.getUniforms()),this.material.fragmentShader=t.getFragmentShader(),this.updateUniforms(),this.updateEnviroment(),this.material.needsUpdate=!0,this.group!==void 0&&(this.group.reset(),this.shadingModel.buildUI(this.group))}getShadingModelName(){return this.shadingModel.getName()}getShadingModelJSON(){return this.shadingModel.toJSON()}buildUI(t){this.group=t,this.group.onChange(this.updateUniforms.bind(this)),this.shadingModel.buildUI(this.group)}setCustomUniform(t,e){this.material.uniforms[t]?this.material.uniforms[t].value=e:this.material.uniforms[t]={value:e}}dispose(){this.shadingModel.removeUpdateCallback(),this.shadingModel.dispose(),this.material.dispose()}updateUniforms(){const t=this.getUniforms();for(const e in t)this.material.uniforms[e]&&this.material.uniforms[e].value!==t[e].value?this.material.uniforms[e].value=t[e].value:this.material.uniforms[e]=t[e]}updateEnviroment(){this.shadingModel.enviroment&&(this.material.uniforms.envMap.value=A.getScene().environment,this.material.uniforms.envMapIntensity.value=A.getScene().environmentIntensity)}updateEnviromentIntensity(){this.shadingModel.enviroment&&(this.material.uniforms.envMapIntensity.value=A.getScene().environmentIntensity)}getUniforms(){const t=this.shadingModel.getUniforms().getTHREEUniforms();return t.controlPointsTexture={value:this.controlPoints.getTexture()},t.controlPointsWidth={value:this.controlPoints.getWidth()},t.controlPointsHeight={value:this.controlPoints.getHeight()},t.color={value:this.color},t}getEnviromentUniforms(){return{envMap:{value:null},envMapIntensity:{value:1}}}}var tn=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h[h.SHADING=2]="SHADING",h))(tn||{});class ts extends Lt{mode;controlPoints;geometry;material;collisionGeometry;collisionMesh;radius=.1;reflectivity=0;constructor(t,e,i,s,n=new z(0),o=new g(0,0,0),r=1,a=new ni){const l=new Xi(i,s);for(let f=0;f<i;f++)for(let x=0;x<s;x++){const y=f+x*i;l.setPoint(x,f,e[y])}const c=new be(0,0,100,100),u=new Qi(xo(),l,n,a),d=new O(c,u.getMaterial());super(t,d,o),this.controlPoints=l,this.geometry=c,this.material=u,this.mode=r,this.color=n,this.type="BezierPatchObject",this.export=this.exportMesh.bind(this);for(let f=0;f<i;f++)for(let x=0;x<s;x++){const y=f+x*i;this.createEditHandle(y,this.radius),this.setEditHandlePosition(y,e[y])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const m=this.controlPoints.getWidth()+1,p=this.controlPoints.getHeight()+1;this.collisionGeometry=Pt(Di(this.controlPoints,p,m),p,m),this.collisionMesh=new O(this.collisionGeometry,new J({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),color:this.color.getHex(),mode:this.mode,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(l=>new g(l.x,l.y,l.z)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(tn[n]===void 0)throw new Error("Invalid BezierPatchObjectMode mode");const r=$i()[t.shadingModel.name??"Blinn-Phong"].create();r.fromJSON(t.shadingModel.params);const a=new ts(t.name,e,t.controlPointsWidth,t.controlPointsHeight,i,s,n,r);return a.setReflectivity(t.reflectivity??0),a}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),r=new g(0,o.y,o.z),a=new g(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):this.addControlPointRowCol(s,n,o);for(let l=0;l<this.controlPoints.getWidth();l++)for(let c=0;c<this.controlPoints.getHeight();c++){const u=l+c*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(c,l))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=2||this.controlPoints.getHeight()<=2||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,s,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(Rt())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=Pt(Di(this.controlPoints,t,e),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=Di(this.controlPoints,100,100),e=Pt(t,100,100),i=new qi({color:this.color,side:2}),s=new O(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function zo(){return 15528177}function Ao(){return 3092528}function To(){return A.darkMode()?Ao():zo()}function Rt(){return 15105570}function q(){return 15158332}function je(){return A.darkMode()?11321297:3426654}function Ii(h){const t=[1752220,3066993,3447003,10181046,3426654,15844367,13849600,15158332];return t[h%t.length]}class A{static app;static scene;static pCamera;static oCamera;static renderer;static effectComposer;static orbitControls;static oOrbitControls;static transformControls;static oTransformControls;static ambientLight;static directionalLight;static grid;static plane;static tooltip;static objectManager;static creationManager;static selectionManager;static editManager;static effectManager;static ioManager;static interactionsManager;static exportManager;static inspector;static hierarchy;static toolbar;static controls;static sceneProxy;static isOrbitingBool=!1;static isDraggingBool=!1;static is2D=!1;static isDarkMode=!1;static dimension2D(){return this.is2D}static switchDimension(){this.is2D?(this.is2D=!1,this.oTransformControls.detach(),this.orbitControls.enabled=!0,this.oOrbitControls.enabled=!1,this.directionalLight.position.set(10,25,0),this.directionalLight.target.position.set(0,0,0)):(this.is2D=!0,this.transformControls.detach(),this.orbitControls.enabled=!1,this.oOrbitControls.enabled=!0,this.directionalLight.position.set(0,100,0),this.directionalLight.target.position.set(0,0,0)),A.getEffectManager().setupRenderPass(),A.getSelectionManager().doResetSelectedEditHandle(),Vt.notify("dimensionSwitched",Mt.ALL,this.is2D)}static darkMode(){return this.isDarkMode}static setMode(t=!1){t?(this.isDarkMode=!0,this.app.classList.remove("sl-theme-light"),this.app.classList.add("sl-theme-dark")):(this.isDarkMode=!1,this.app.classList.add("sl-theme-light"),this.app.classList.remove("sl-theme-dark")),A.getScene().background=new z(To()),A.getIOManager().setFlagCache("darkMode",this.isDarkMode),Vt.notify("modeSwitched",Mt.ALL,this.isDarkMode)}static getApp(){return this.app}static setApp(t){this.app=t}static getScene(){return this.scene}static getCamera(){return this.is2D?this.oCamera:this.pCamera}static getPerspectiveCamera(){return this.is2D?null:this.pCamera}static getRenderer(){return this.renderer}static getOrbitControls(){return this.is2D?this.oOrbitControls:this.orbitControls}static onOrbitControlsChange(t){this.orbitControls.addEventListener("change",()=>{this.is2D||t()}),this.oOrbitControls.addEventListener("change",()=>{this.is2D&&t()})}static onTransformControlsChange(t){this.transformControls.addEventListener("change",()=>{this.is2D||t()}),this.oTransformControls.addEventListener("change",()=>{this.is2D&&t()})}static onControlsChange(t){this.onOrbitControlsChange(t),this.onTransformControlsChange(t),Vt.subscribe("dimensionSwitched",Mt.ALL,()=>{t()})}static noScroll(){this.orbitControls.enableZoom=!1,this.oOrbitControls.enableZoom=!1}static scroll(){this.orbitControls.enableZoom=!0,this.oOrbitControls.enableZoom=!0}static getTransformControls(){return this.is2D?this.oTransformControls:this.transformControls}static getAmbientLight(){return this.ambientLight}static getDirectionalLight(){return this.directionalLight}static setupScene(t,e,i,s,n,o,r,a,l,c){this.scene=t,this.pCamera=e,this.oCamera=i,this.renderer=s,this.orbitControls=n,this.orbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.orbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.oOrbitControls=o,this.oOrbitControls.addEventListener("start",()=>this.isOrbitingBool=!0),this.oOrbitControls.addEventListener("end",()=>this.isOrbitingBool=!1),this.transformControls=r,this.transformControls.addEventListener("dragging-changed",u=>{this.orbitControls.enabled=!u.value,this.isDraggingBool=u.value}),this.scene.add(this.transformControls.getHelper()),this.oTransformControls=a,this.oTransformControls.addEventListener("dragging-changed",u=>{this.oOrbitControls.enabled=!u.value,this.isDraggingBool=u.value}),this.scene.add(this.oTransformControls.getHelper()),this.ambientLight=l,this.directionalLight=c}static getEffectComposer(){return this.effectComposer}static setEffectComposer(t){this.effectComposer=t}static getGrid(){return this.grid}static getPlane(){return this.plane}static setupGrid(t,e){this.grid=t,this.plane=e}static getTooltip(){return this.tooltip}static setTooltip(t){this.tooltip=t}static getObjectManager(){return this.objectManager}static setObjectManager(t){this.objectManager=t}static getCreationManager(){return this.creationManager}static setCreationManager(t){this.creationManager=t}static getSelectionManager(){return this.selectionManager}static setSelectionManager(t){this.selectionManager=t}static getEditManager(){return this.editManager}static setEditManager(t){this.editManager=t}static getEffectManager(){return this.effectManager}static setEffectManager(t){this.effectManager=t}static getIOManager(){return this.ioManager}static setIOManager(t){this.ioManager=t}static getInteractionsManager(){return this.interactionsManager}static setInteractionsManager(t){this.interactionsManager=t}static getExportManager(){return this.exportManager}static setExportManager(t){this.exportManager=t}static getInspector(){return this.inspector}static setInspector(t){this.inspector=t}static getHierarchy(){return this.hierarchy}static setHierarchy(t){this.hierarchy=t}static getToolbar(){return this.toolbar}static setToolbar(t){this.toolbar=t}static getControls(){return this.controls}static setControls(t){this.controls=t}static getSceneProxy(){return this.sceneProxy}static setSceneProxy(t){this.sceneProxy=t}static isOrbiting(){return this.isOrbitingBool}static isDragging(){return this.isDraggingBool}static getDefaultImage(){const t=new Image;t.width=1,t.height=1;const e=document.createElement("canvas");e.width=1,e.height=1;const i=e.getContext("2d");return i&&(i.fillStyle="#FFFFFF",i.fillRect(0,0,1,1),t.src=e.toDataURL()),t}}const vt=async(h,t)=>{const e=`textures/${h}/${t}`,i=await fetch(e);if(!i.ok)return null;const s=await i.blob();return s.size===0||s.type==="text/html"?null:s};var en=(h=>(h[h.LOW=0]="LOW",h[h.MEDIUM=1]="MEDIUM",h[h.HIGH=2]="HIGH",h))(en||{}),Bt=(h=>(h[h.NONE=0]="NONE",h[h.UVS=1]="UVS",h[h.NORMALS=2]="NORMALS",h[h.NR_STEPS=3]="NR_STEPS",h))(Bt||{}),Ze=(h=>(h[h.GRADIENT=0]="GRADIENT",h[h.BLACK=1]="BLACK",h[h.WHITE=2]="WHITE",h[h.TRANSPARENT=3]="TRANSPARENT",h))(Ze||{}),kt=(h=>(h[h.BezierPatch=0]="BezierPatch",h[h.Sphere=1]="Sphere",h[h.Cylinder=2]="Cylinder",h))(kt||{});class es{type;position;color;reflectivity;constructor(t,e,i,s=0){this.type=t,this.position=e,this.color=i,this.reflectivity=s}}class Oi extends es{controlPoints;data={};constructor(t,e,i,s=0){super(0,e,i,s),this.controlPoints=t}}function oi(h){return new g(h.x/h.w,h.y/h.w,h.z/h.w)}class Ni extends es{radius;constructor(t,e,i,s=0){super(1,t,e,s),this.radius=i}}class Is extends es{pointA;pointB;radius;constructor(t,e,i,s,n,o=0){super(2,t,n,o),this.pointA=e,this.pointB=i,this.radius=s}}class Bo{dialog;preview;previewContainer;console;consolePanel;progressBar;downloadButton;closeButton;tabGroup;constructor(){this.dialog=document.createElement("sl-dialog"),this.dialog.classList.add("raytracer-dialog"),this.dialog.noHeader=!0,this.dialog.style.setProperty("--width","80vw"),this.dialog.style.color="var(--sl-input-color)",this.dialog.style.fontFamily="var(--sl-font-sans)",this.dialog.addEventListener("sl-request-close",u=>{u.preventDefault()});const t=document.createElement("div");t.style.display="flex",t.style.flexDirection="column",t.style.width="100%",t.style.height="70vh";const e=document.createElement("sl-tab-group");e.placement="start",e.style.width="100%",e.style.flex="1 1 0",e.style.minHeight="0",e.style.overflow="hidden",t.appendChild(e),e.addEventListener("sl-tab-show",u=>{this.scrollToBottom(),requestAnimationFrame(this.renderPreview.bind(this))}),this.tabGroup=e;const i=document.createElement("sl-tab");i.slot="nav",i.panel="preview";const s=document.createElement("sl-icon");s.name="eye",s.library="lucide",s.style.fontSize="1.3em",s.style.marginRight="5px",i.appendChild(s),i.appendChild(document.createTextNode("Preview")),e.appendChild(i);const n=document.createElement("sl-tab-panel");n.name="preview",e.appendChild(n),this.previewContainer=document.createElement("div"),this.previewContainer.style.display="flex",this.previewContainer.style.width="100%",this.previewContainer.style.height="100%",this.previewContainer.style.justifyContent="center",this.previewContainer.style.alignItems="center",n.appendChild(this.previewContainer),this.preview=document.createElement("canvas"),this.preview.style.borderRadius="var(--sl-border-radius-medium)",this.previewContainer.appendChild(this.preview);const o=document.createElement("sl-tab");o.slot="nav",o.panel="console";const r=document.createElement("sl-icon");r.name="square-terminal",r.library="lucide",r.style.fontSize="1.3em",r.style.marginRight="5px",o.appendChild(r),o.appendChild(document.createTextNode("Output")),e.appendChild(o),this.consolePanel=document.createElement("sl-tab-panel"),this.consolePanel.name="console",this.consolePanel.style.height="100%",this.consolePanel.style.overflowX="auto",e.appendChild(this.consolePanel),this.console=document.createElement("div"),this.console.style.height="100%",this.console.style.padding="10px",this.console.style.backgroundColor="var(--sl-color-neutral-200)",this.console.style.color="var(--sl-color-neutral-900)",this.console.style.fontFamily="var(--sl-font-mono)",this.console.style.fontSize="var(--sl-font-size-small)",this.console.style.fontWeight="var(--sl-font-weight-bold)",this.console.style.borderRadius="var(--sl-border-radius-medium)",this.console.style.overflow="auto",this.consolePanel.appendChild(this.console);const a=document.createElement("div");a.style.display="flex",a.style.flexDirection="row",a.style.alignContent="center",a.style.justifyContent="space-around",a.style.alignItems="center",a.style.marginTop="20px",t.appendChild(a),this.progressBar=document.createElement("sl-progress-bar"),this.progressBar.textContent="0%",this.progressBar.style.flex="1 1 0",this.progressBar.style.minWidth="0",this.progressBar.style.maxWidth="100%",a.appendChild(this.progressBar),this.progressBar.indeterminate=!0,this.downloadButton=document.createElement("sl-button"),this.downloadButton.variant="primary",this.downloadButton.outline=!0,this.downloadButton.style.marginLeft="10px";const l=document.createElement("sl-icon");l.slot="prefix",l.name="download",l.library="lucide",this.downloadButton.appendChild(l),this.downloadButton.appendChild(document.createTextNode("Download")),a.appendChild(this.downloadButton),this.downloadButton.loading=!0,this.closeButton=document.createElement("sl-button"),this.closeButton.variant="danger",this.closeButton.outline=!0,this.closeButton.style.marginLeft="10px";const c=document.createElement("sl-icon");c.slot="prefix",c.name="x",c.library="lucide",this.closeButton.appendChild(c),this.closeButton.appendChild(document.createTextNode("Close")),a.appendChild(this.closeButton),this.closeButton.disabled=!0,this.dialog.appendChild(t),A.getApp().appendChild(this.dialog)}show(){this.dialog.show()}hide(){this.dialog.hide(),this.console.innerHTML="",this.downloadButton.loading=!0,this.downloadButton.onclick=()=>{},this.closeButton.disabled=!0,this.closeButton.onclick=()=>{},this.progressBar.value=0,this.progressBar.textContent="0%",this.progressBar.indeterminate=!0}setProgress(t){this.progressBar.value=t,this.progressBar.textContent=t+"%",this.progressBar.indeterminate=!1}setProgressIndeterminate(){this.progressBar.indeterminate=!0}setPreview(t,e,i){const s=new ImageData(t,e,i);this.preview.width=e,this.preview.height=i;const n=this.preview.getContext("2d");n?n.putImageData(s,0,0):this.logError("Cannot show preview: no canvas context found"),requestAnimationFrame(this.renderPreview.bind(this))}renderPreview(){const t=this.preview.width/this.preview.height,e=this.previewContainer.clientWidth/this.tabGroup.clientHeight;t<e?(this.preview.style.width="auto",this.preview.style.height=this.tabGroup.clientHeight+"px"):(this.preview.style.width=this.previewContainer.clientWidth+"px",this.preview.style.height="auto")}allowDownload(t=()=>{}){this.downloadButton.onclick=t,this.downloadButton.loading=!1}allowClose(t=()=>{}){this.closeButton.onclick=t,this.closeButton.disabled=!1}log(t){this.addLog(t,"neutral-900")}logInfo(t){this.addLog(t,"primary-600")}logSuccess(t){this.addLog(t,"success-600")}logWarning(t){this.addLog(t,"warning-600")}logError(t){this.addLog(t,"danger-600")}addLog(t,e){const i=document.createElement("div"),s=document.createElement("span"),n=new Date().toLocaleTimeString();s.appendChild(document.createTextNode("["+n+"] ")),s.style.color="var(--sl-color-neutral-500)",s.style.fontWeight="var(--sl-font-weight-light)",i.appendChild(s),i.appendChild(document.createTextNode(t)),i.style.color="var(--sl-color-"+e+")",i.style.marginBottom="5px",i.style.whiteSpace="pre-wrap";const o=this.consolePanel.scrollTop+this.consolePanel.clientHeight>=this.consolePanel.scrollHeight-20;this.console.appendChild(i),o&&this.scrollToBottom()}scrollToBottom(){setTimeout(()=>{this.consolePanel.scrollTop=this.consolePanel.scrollHeight},0)}}function _o(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec3 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord).xyz;
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 basisPoint = vec3(0.0);
        vec3 tangentU = vec3(0.0);
        vec3 tangentV = vec3(0.0);

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);
            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec3 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);
                basisPoint += controlPoint * basisU * basisV;
                tangentU += controlPoint * basisUDerivative * basisV;
                tangentV += controlPoint * basisU * basisVDerivative;
            }
        }

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}function Ft(h,t,e,i){if((e<i[0]||e>i[i.length-1])&&console.log("basis: Invalid arguments for t: ",e),h===0)return i[t]<=e&&e<i[t+1]?1:0;let s=i[t+h]-i[t],n=i[t+h+1]-i[t+1],o=s===0?0:(e-i[t])/s*Ft(h-1,t,e,i),r=n===0?0:(i[t+h+1]-e)/n*Ft(h-1,t+1,e,i);return o+r}function X(h,t){let e=[];for(let i=0;i<=t+h+1;i++)e.push(i);return e}function Hi(h,t,e,i,s=!1,n=!1){const o=[],r=s?i:0,a=n?i:0,l=X(i,h.getWidth()-1+r),c=X(i,h.getHeight()-1+a);for(let u=0;u<e;u++){const d=u/(e-1);for(let m=0;m<t;m++){const p=m/(t-1);o.push(Vo(h,p,d,i,l,c,s,n))}}return o}function Vo(h,t,e,i,s,n,o=!1,r=!1){const a=new g(0,0,0),l=o?i:0,c=r?i:0;for(let u=0;u<h.getWidth()+l;u++){const d=s[i]+t*(s[s.length-i-1]-s[i]),m=Ft(i,u,d,s);for(let p=0;p<h.getHeight()+c;p++){const f=h.getPoint(p%h.getHeight(),u%h.getWidth()),x=n[i]+e*(n[n.length-i-1]-n[i]),y=Ft(i,p,x,n);a.add(f.clone().multiplyScalar(m*y))}}return a}function ki(h,t,e,i,s=!1,n=!1){const o=[],r=s?i:0,a=n?i:0,l=X(i,h.getWidth()-1+r),c=X(i,h.getHeight()-1+a);for(let u=0;u<e;u++){const d=u/(e-1);for(let m=0;m<t;m++){const p=m/(t-1);o.push(Fo(h,p,d,i,l,c,s,n))}}return o}function Fo(h,t,e,i,s,n,o=!1,r=!1){const a=new g(0,0,0);var l=0;const c=o?i:0,u=r?i:0;for(let d=0;d<h.getWidth()+c;d++){const m=s[i]+t*(s[s.length-i-1]-s[i]),p=Ft(i,d,m,s);for(let f=0;f<h.getHeight()+u;f++){const x=h.getPoint(f%h.getHeight(),d%h.getWidth()),y=h.getPoint4(f%h.getHeight(),d%h.getWidth()).w,b=n[i]+e*(n[n.length-i-1]-n[i]),v=Ft(i,f,b,n),w=y*p*v;a.add(x.clone().multiplyScalar(w)),l+=w}}return a.divideScalar(l)}var sn=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h[h.SHADING=2]="SHADING",h))(sn||{});class is extends Lt{mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;closedU;closedV;reflectivity=0;constructor(t,e,i,s,n=2,o=new z(0),r=new g(0,0,0),a=1,l=new ni,c=!1,u=!1){if(c&&u)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const d=new Xi(i,s);for(let b=0;b<i;b++)for(let v=0;v<s;v++){const w=b+v*i;d.setPoint(v,b,e[w])}const m=new be(0,0,100,100),p=new Qi(_o(),d,o,l,{degree:{value:n},closedU:{value:c},closedV:{value:u}}),f=new O(m,p.getMaterial());super(t,f,r),this.controlPoints=d,this.geometry=m,this.material=p,this.mode=a,this.color=o,this.degree=n,this.closedU=c,this.closedV=u,this.type="UniformBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let b=0;b<i;b++)for(let v=0;v<s;v++){const w=b+v*i;this.createEditHandle(w,this.radius),this.setEditHandlePosition(w,e[w])}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const x=this.controlPoints.getWidth()+3,y=this.controlPoints.getHeight()+3;this.collisionGeometry=Pt(Hi(this.controlPoints,x,y,this.degree,this.closedU,this.closedV),x,y),this.collisionMesh=new O(this.collisionGeometry,new J({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints().map(t=>({x:t.x,y:t.y,z:t.z})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(l=>new g(l.x,l.y,l.z)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(sn[n]===void 0)throw new Error("Invalid UniformBSplineSurfaceObjectMode mode");const r=$i()[t.shadingModel.name??"Blinn-Phong"].create();r.fromJSON(t.shadingModel.params);const a=new is(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree??2,i,s,n,r,t.closedU??!1,t.closedV??!1);return a.setReflectivity(t.reflectivity??0),a}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.collisionMesh.userData.collision=!0}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),r=new g(0,o.y,o.z),a=new g(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):this.addControlPointRowCol(s,n,o);for(let l=0;l<this.controlPoints.getWidth();l++)for(let c=0;c<this.controlPoints.getHeight();c++){const u=l+c*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(c,l))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();this.controlPoints.setPoint(i,s,e),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e),this.updateCollisionGeometry()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint(e,i)}highlight(){this.material.setColor(Rt())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+3,e=this.controlPoints.getHeight()+3;this.collisionGeometry=Pt(Hi(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=Hi(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=Pt(t,100,100),i=new qi({color:this.color,side:2}),s=new O(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function Os(h,t){const{newPoints:e,uKnots:i,vKnots:s}=Ro(h,t),n=[];for(let o=t;o<i.length-t-1;o++)if(i[o]!==i[o+1])for(let r=t;r<s.length-t-1;r++){if(s[r]===s[r+1])continue;const a=[];for(let l=0;l<=t;l++){const c=[];for(let u=0;u<=t;u++)c.push(e[o-t+l][r-t+u]);a.push(c)}n.push(a)}return n}function Ro(h,t){let e=X(t,h.length-1),i=X(t,h[0].length-1),s=[],n=[],o=[];for(const a of h){const{newPoints:l,newKnots:c}=Ns(a,t,i);s.push(l),o=c}const r=s[0].map((a,l)=>s.map(c=>c[l]));s=[];for(const a of r){const{newPoints:l,newKnots:c}=Ns(a,t,e);s.push(l),n=c}return s=s[0].map((a,l)=>s.map(c=>c[l])),{newPoints:s,uKnots:n,vKnots:o}}function Ns(h,t,e){let i=h.slice(),s=e.slice();for(let n=t;n<=e.length-t-1;n++){const o=e[n];for(let r=0;r<t-1;r++)({newPoints:i,newKnots:s}=Do(i,t,s,o))}return{newPoints:i,newKnots:s}}function Do(h,t,e,i){const s=e[t],n=e[e.length-t-1];if(i<s||i>n)return console.error("knotInsertion1D: t is out of bounds",i,"not in range [",s,",",n,"]"),{newPoints:[],newKnots:[]};let o=0,r=!1,a=[];for(let c=0;c<e.length;c++)a.push(e[c]),e[c]<=i&&i<e[c+1]&&!r&&(o=c,a.push(i),r=!0);let l=[];for(let c=0;c<=o-t;c++)l.push(h[c]);for(let c=o-t+1;c<=o;c++){const u=(i-e[c])/(e[c+t]-e[c]);if(u===0)l.push(h[c-1]);else if(u===1)l.push(h[c]);else{const d=h[c-1].clone().lerp(h[c],u);l.push(d)}}for(let c=o;c<h.length;c++)l.push(h[c]);return{newPoints:l,newKnots:a}}function Io(){return`
    uniform sampler2D controlPointsTexture;
    uniform int controlPointsWidth;
    uniform int controlPointsHeight;
    uniform vec3 color;
    uniform int degree;
    uniform bool closedU;
    uniform bool closedV;

    varying vec3 vColor;
    varying vec3 vNormal;
    varying vec3 vPosition;
    varying vec2 vUV;
    varying vec3 vViewPosition;
    varying mat3 vTBN;
    varying vec3 vWorldNormal;

    float delta = 0.0001;

    float getUniformKnotValue(int index){
        return float(index);
    }

    float basis(int p, int i, float t) {
        float B[10]; //max degree 10
        
        for (int j = 0; j <= p; j++) {
            if (t >= getUniformKnotValue(i + j) && t < getUniformKnotValue(i + j + 1))
                B[j] = 1.0;
            else
                B[j] = 0.0;
        }
    
        for (int k = 1; k <= p; k++) {
            for (int j = 0; j <= p - k; j++) {
                float left = 0.0;
                float right = 0.0;
    
                float denomLeft = getUniformKnotValue(i + j + k) - getUniformKnotValue(i + j);
                if (denomLeft > delta)
                    left = ((t - getUniformKnotValue(i + j)) / denomLeft) * B[j];
    
                float denomRight = getUniformKnotValue(i + j + k + 1) - getUniformKnotValue(i + j + 1);
                if (denomRight > delta)
                    right = ((getUniformKnotValue(i + j + k + 1) - t) / denomRight) * B[j + 1];
    
                B[j] = left + right;
            }
        }
    
        return B[0];
    }

    float basisDerivative(int p, int i, float t) {
        if(p == 0) return 0.0;

        float left = 0.0;
        float right = 0.0;

        float denomLeft = getUniformKnotValue(i + p) - getUniformKnotValue(i);
        if(denomLeft > delta)
            left = (float(p) / denomLeft) * basis(p - 1, i, t);

        float denomRight = getUniformKnotValue(i + p + 1) - getUniformKnotValue(i + 1);
        if(denomRight > delta)
            right = (float(p) / denomRight) * basis(p - 1, i + 1, t);

        return left - right;
    }

    vec4 getControlPoint(int i, int j){
        int modI = i % controlPointsWidth;
        int modJ = j % controlPointsHeight;
        vec2 texCoord = vec2(float(modI) / float(controlPointsWidth - 1), float(modJ) / float(controlPointsHeight - 1));
        return texture2D(controlPointsTexture, texCoord);
    }

    void main(){
        vec2 uvClamped = clamp(uv, 0.0, 1.0);
        float u = uvClamped.x;
        float v = uvClamped.y;

        vec3 numerator = vec3(0.0);
        float denominator = 0.0;
        vec3 numeratorU = vec3(0.0);
        float denominatorU = 0.0;
        vec3 numeratorV = vec3(0.0);
        float denominatorV = 0.0;

        int closedAddU = closedU ? degree : 0;
        int closedAddV = closedV ? degree : 0;

        int knotsULength = controlPointsWidth - 1 + degree + 2 + closedAddU;
        int knotsVLength = controlPointsHeight - 1 + degree + 2 + closedAddV;

        for(int i = 0; i < controlPointsWidth + closedAddU; i++){
            float modU = getUniformKnotValue(degree) + u * (getUniformKnotValue(knotsULength - degree - 1) - getUniformKnotValue(degree));
            float basisU = basis(degree, i, modU);
            float basisUDerivative = basisDerivative(degree, i, modU);

            for(int j = 0; j < controlPointsHeight + closedAddV; j++){
                vec4 controlPoint = getControlPoint(i, j);
                float modV = getUniformKnotValue(degree) + v * (getUniformKnotValue(knotsVLength - degree - 1) - getUniformKnotValue(degree));
                float basisV = basis(degree, j, modV);
                float basisVDerivative = basisDerivative(degree, j, modV);

                float weightedBasis = controlPoint.w * basisU * basisV;
                float weightedBasisU = controlPoint.w * basisUDerivative * basisV;
                float weightedBasisV = controlPoint.w * basisU * basisVDerivative;

                numerator += controlPoint.xyz * weightedBasis;
                denominator += weightedBasis;

                numeratorU += controlPoint.xyz * weightedBasisU;
                denominatorU += weightedBasisU;

                numeratorV += controlPoint.xyz * weightedBasisV;
                denominatorV += weightedBasisV;
            }
        }

        vec3 basisPoint = numerator / denominator;
        vec3 tangentU = (numeratorU / denominator) - (numerator * denominatorU / (denominator * denominator));
        vec3 tangentV = (numeratorV / denominator) - (numerator * denominatorV / (denominator * denominator));

        vColor = color;
        vec3 normal = normalize(cross(tangentU, tangentV));
        vNormal = - normalize(normalMatrix * normal);
        vWorldNormal = normalize(mat3(modelMatrix) * normal);
        vPosition = (modelMatrix * vec4(basisPoint, 1.0)).xyz;
        vUV = uvClamped;
        vec4 mvPosition = modelViewMatrix * vec4(basisPoint, 1.0);
        vViewPosition = -mvPosition.xyz;
        gl_Position = projectionMatrix * mvPosition;

        mat3 TBN = mat3(
            normalize(normalMatrix * tangentU),
            normalize(normalMatrix * tangentV),
            vNormal
        );
        
        vTBN = TBN;
    }
`}var nn=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h[h.SHADING=2]="SHADING",h))(nn||{});class ss extends Lt{mode;controlPoints;degree;geometry;material;collisionGeometry;collisionMesh;radius=.1;weightEditIndex=-1;weightEditRing;closedU;closedV;reflectivity=0;constructor(t,e,i,s,n=2,o=new z(0),r=new g(0,0,0),a=1,l=new ni,c=!1,u=!1){if(c&&u)throw new Error("Cannot have both closedU and closedV set to true. Please set one of them to false.");const d=new Xi(i,s);for(let w=0;w<i;w++)for(let M=0;M<s;M++){const P=w+M*i;d.setPoint4(M,w,e[P])}const m=new be(0,0,100,100),p=new Qi(Io(),d,o,l,{degree:{value:n},closedU:{value:c},closedV:{value:u}}),f=new O(m,p.getMaterial());super(t,f,r),this.controlPoints=d,this.geometry=m,this.material=p,this.mode=a,this.color=o,this.degree=n,this.closedU=c,this.closedV=u,this.type="UniformRationalBSplineSurfaceObject",this.export=this.exportMesh.bind(this);for(let w=0;w<i;w++)for(let M=0;M<s;M++){const P=w+M*i;this.createEditHandle(P,this.radius),this.setEditHandlePosition(P,this.controlPoints.getPoint(M,w))}this.hideEditHandles(),this.controlPoints.addVisuals(this.mesh);const x=this.controlPoints.getWidth()+1,y=this.controlPoints.getHeight()+1;this.collisionGeometry=Pt(ki(this.controlPoints,x,y,this.degree,this.closedU,this.closedV),x,y),this.collisionMesh=new O(this.collisionGeometry,new J({transparent:!0,opacity:0,visible:!1,side:2})),this.collisionMesh.userData.collision=!0,this.collisionMesh.userData.object=this,this.mesh.add(this.collisionMesh);const b=new ei(.05,.06,32),v=new J({color:q(),depthTest:!1,side:2});this.weightEditRing=new O(b,v),f.add(this.weightEditRing),this.weightEditRing.visible=!1,A.onOrbitControlsChange(()=>{this.weightEditIndex!==-1&&this.weightEditRing.lookAt(A.getCamera().position)}),window.addEventListener("wheel",w=>{if(this.weightEditIndex!==-1){const M=this.getControlPoint(this.weightEditIndex);M.w+=w.deltaY*.01,M.w<1&&(M.w=1),M.w>10&&(M.w=10),this.updateControlPoint(this.weightEditIndex,M),Vt.notify("objectChanged",Mt.VIEWPORT,this)}})}getMode(){return this.mode}setMode(t){this.mode=t,this.mode===0?(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing()):this.mode===1?(this.showEditHandles(),this.controlPoints.showVisuals()):this.mode===2&&(this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.getPoints4().map(t=>({x:t.x,y:t.y,z:t.z,w:t.w})),controlPointsWidth:this.controlPoints.getWidth(),controlPointsHeight:this.controlPoints.getHeight(),degree:this.degree,color:this.color.getHex(),mode:this.mode,closedU:this.closedU,closedV:this.closedV,shadingModel:{name:this.material.getShadingModelName(),params:this.material.getShadingModelJSON()},reflectivity:this.reflectivity}}static fromJSON(t){const e=t.controlPoints.map(l=>new R(l.x,l.y,l.z,l.w)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(nn[n]===void 0)throw new Error("Invalid UniformRationalBSplineSurfaceObjectMode mode");const r=$i()[t.shadingModel.name??"Blinn-Phong"].create();r.fromJSON(t.shadingModel.params);const a=new ss(t.name,e,t.controlPointsWidth,t.controlPointsHeight,t.degree??2,i,s,n,r,t.closedU??!1,t.closedV??!1);return a.setReflectivity(t.reflectivity??0),a}edit(){return this.collisionMesh.userData.collision=!1,this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint3(t,e)}}unedit(){this.hideEditHandles(),this.controlPoints.hideVisuals(),this.hideWeightEditRing(),this.collisionMesh.userData.collision=!0}showWeightEditRing(t){this.weightEditIndex=t,this.updateWeightEditRing(),this.weightEditRing.visible=!0,A.noScroll()}hideWeightEditRing(){this.weightEditIndex=-1,this.weightEditRing.visible=!1,A.scroll()}updateWeightEditRing(){if(this.weightEditIndex===-1)return;const t=this.getControlPoint(this.weightEditIndex);this.weightEditRing.position.set(t.x,t.y,t.z);const e=Ks(t.w,1,10,8,20);this.weightEditRing.scale.set(e,e,e),this.weightEditRing.lookAt(A.getCamera().position)}updateColor(t){super.setColor(t),this.material.setColor(t)}getMaterial(){return this.material}dispose(){this.material.dispose()}addControlPoint(t,e){if(!this.hasEditHandle(t))return;const i=this.getEditHandlePosition(t);if(i===null)return;const s=Math.floor(t/this.controlPoints.getWidth()),n=t%this.controlPoints.getWidth(),o=i.clone().sub(e),r=new g(0,o.y,o.z),a=new g(o.x,o.y,0);s===0&&n===0?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===0&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(s,-1,r),this.addControlPointRowCol(-1,n,a)):s===this.controlPoints.getHeight()-1&&n===0?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):s===this.controlPoints.getHeight()-1&&n===this.controlPoints.getWidth()-1?(this.addControlPointRowCol(-1,n,a),this.addControlPointRowCol(s,-1,r)):this.addControlPointRowCol(s,n,o);for(let l=0;l<this.controlPoints.getWidth();l++)for(let c=0;c<this.controlPoints.getHeight();c++){const u=l+c*this.controlPoints.getWidth();this.setEditHandlePosition(u,this.controlPoints.getPoint(c,l))}this.material.updateControlPoints(),this.updateCollisionGeometry()}addControlPointRowCol(t,e,i){var s=0,n=0;t===0?(this.controlPoints.addRow(i,!0),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):t===this.controlPoints.getHeight()-1?(this.controlPoints.addRow(i,!1),s=this.controlPoints.getWidth(),n=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1)):e===0?(this.controlPoints.addColumn(i,!0),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight()):e===this.controlPoints.getWidth()-1&&(console.log("Adding column to the right"),this.controlPoints.addColumn(i,!1),s=this.controlPoints.getHeight(),n=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight());for(let o=0;o<s;o++)this.createEditHandle(n+o,this.radius)}removeControlPoint(t){if(this.controlPoints.getWidth()<=3||this.controlPoints.getHeight()<=3||!this.hasEditHandle(t))return;const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();e===0||i===0||e===this.controlPoints.getHeight()-1||i===this.controlPoints.getWidth()-1?(this.removeControlPointRowCol(e,-1),this.removeControlPointRowCol(-1,i)):this.removeControlPointRowCol(e,i);for(let s=0;s<this.controlPoints.getWidth();s++)for(let n=0;n<this.controlPoints.getHeight();n++){const o=s+n*this.controlPoints.getWidth();this.setEditHandlePosition(o,this.controlPoints.getPoint(n,s))}this.getMaxDegree()<this.degree&&(this.degree=this.getMaxDegree()),this.material.updateControlPoints(),this.updateCollisionGeometry()}removeControlPointRowCol(t,e){var i=0,s=0;t===0?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!0)):t===this.controlPoints.getHeight()-1?(i=this.controlPoints.getWidth(),s=this.controlPoints.getWidth()*(this.controlPoints.getHeight()-1),this.controlPoints.removeRow(!1)):e===0?(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!0)):e===this.controlPoints.getWidth()-1&&(i=this.controlPoints.getHeight(),s=(this.controlPoints.getWidth()-1)*this.controlPoints.getHeight(),this.controlPoints.removeColumn(!1));for(let n=0;n<i;n++)this.removeEditHandle(s+n)}updateControlPoint3(t,e){this.updateControlPoint(t,new R(e.x,e.y,e.z,this.getControlPoint(t).w))}updateControlPoint(t,e){const i=Math.floor(t/this.controlPoints.getWidth()),s=t%this.controlPoints.getWidth();if(this.controlPoints.setPoint4(i,s,e),this.hasEditHandle(t)){const n=new g(e.x,e.y,e.z);this.setEditHandlePosition(t,n)}this.updateCollisionGeometry(),this.weightEditIndex===t&&this.updateWeightEditRing()}getControlPoint(t){const e=Math.floor(t/this.controlPoints.getWidth()),i=t%this.controlPoints.getWidth();return this.controlPoints.getPoint4(e,i)}highlight(){this.material.setColor(Rt())}resetHighlight(){this.resetColor()}select(){this.resetColor()}resetSelect(){this.resetColor()}resetColor(){this.material.setColor(this.color)}setDegree(t){this.degree=t,this.material.setCustomUniform("degree",this.degree),this.updateCollisionGeometry()}getDegree(){return this.degree}getMaxDegree(){return Math.min(this.controlPoints.getWidth(),this.controlPoints.getHeight())-1}setClosedU(t){this.closedU=t,this.closedV=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}setClosedV(t){this.closedV=t,this.closedU=!1,this.material.setCustomUniform("closedU",this.closedU),this.material.setCustomUniform("closedV",this.closedV),this.updateCollisionGeometry()}getClosedU(){return this.closedU}getClosedV(){return this.closedV}updateCollisionGeometry(){this.collisionGeometry.dispose();const t=this.controlPoints.getWidth()+1,e=this.controlPoints.getHeight()+1;this.collisionGeometry=Pt(ki(this.controlPoints,t,e,this.degree,this.closedU,this.closedV),t,e),this.collisionMesh.geometry=this.collisionGeometry}exportMesh(){const t=ki(this.controlPoints,100,100,this.degree,this.closedU,this.closedV),e=Pt(t,100,100),i=new qi({color:this.color,side:2}),s=new O(e,i);return s.position.copy(this.mesh.position),s.rotation.copy(this.mesh.rotation),s.scale.copy(this.mesh.scale),s}getReflectivity(){return this.reflectivity}setReflectivity(t){this.reflectivity=t}}function Oo(h,t){if(!h||!Array.isArray(h)||h.length<2)return console.error("bezier: Invalid points array!"),null;if(t<0||t>1)return console.error("bezier: Invalid t value!"),null;const e=h.length-1;let i=new g(0,0,0);for(let s=0;s<=e;s++){const n=at(e,s,t);i.addScaledVector(h[s],n)}return i}function No(h,t,e,i,s){if(s<0||s>1+.05)return console.error("cubicBezier: Invalid t value!",s),null;const n=1-s,o=n*n,r=o*n,a=s*s,l=a*s,c=new g(0,0,0);return c.addScaledVector(h,r),c.addScaledVector(t,3*o*s),c.addScaledVector(e,3*n*a),c.addScaledVector(i,l),c}class ri extends K{controlPoints;constructor(t=[]){super(),this.controlPoints=t}getPoint(t,e=new g){const i=e;if(this.controlPoints.length<2)return console.log("BezierCurve: Not enough control points!"),i;const s=Oo(this.controlPoints,t);return s===null?(console.log("BezierCurve:getPoint: Bezier calculation failed!"),i):(i.copy(s),i)}setPoints(t){this.controlPoints=t}copy(t){return t instanceof ri?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this):(console.log("BezierCurve:copy: Source is not an instance of BezierCurve!"),this)}}var on=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h[h.DE_CASTELJAU=2]="DE_CASTELJAU",h[h.INFO=3]="INFO",h))(on||{});class ns extends Lt{mode;controlPoints;segments;radius;radialSegments;geometry;material;curve;connectionVisual;deCasteljauT;deCasteljauVisuals;deCasteljauCollisionMesh;constructor(t,e=[new g(-5,0,0),new g(0,5,0),new g(5,0,0)],i=new z(0),s=100,n=new g(0,0,0),o=1){const r=new ri(e),a=.05,l=8,c=new tt(r,s,a,l,!1),u=new J({color:i});u.side=2;const d=new O(c,u);super(t,d,n),this.curve=r,this.geometry=c,this.material=u,this.controlPoints=e,this.color=i,this.segments=s,this.mode=o,this.radius=a,this.radialSegments=l,this.type="BezierCurveObject";for(let y=0;y<this.controlPoints.length;y++)this.createEditHandle(y),this.setEditHandlePosition(y,this.controlPoints[y]);const m=new B().setFromPoints(this.controlPoints),p=new pt({color:q()});this.connectionVisual=new G(m,p),this.connectionVisual.castShadow=!0,d.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles(),this.deCasteljauT=.5,this.deCasteljauVisuals=[];const f=new tt(this.curve,s,this.radius*10,this.radialSegments,!1),x=new J({transparent:!0,opacity:0,visible:!1});this.deCasteljauCollisionMesh=new O(f,x),d.add(this.deCasteljauCollisionMesh)}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideEditHandles(),this.disableDeCasteljau()):t===1?(this.connectionVisual.visible=!0,this.showEditHandles(),this.disableDeCasteljau()):t===2?(this.connectionVisual.visible=!1,this.hideEditHandles(),this.enableDeCasteljau()):t===3&&(this.connectionVisual.visible=!1,this.hideEditHandles(),this.disableDeCasteljau())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),color:this.color.getHex(),segments:this.segments,mode:this.mode,deCasteljauT:this.deCasteljauT}}static fromJSON(t){const e=t.controlPoints.map(r=>new g(r.x,r.y,r.z)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(on[n]===void 0)throw new Error("Invalid BezierCurveObject mode");const o=new ns(t.name,e,i,t.segments,s,n);return n===2&&(o.enableDeCasteljau(),o.updateDeCasteljauT(t.deCasteljauT!==void 0?t.deCasteljauT:.5)),o}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideEditHandles()}enableDeCasteljau(){if(this.deCasteljauVisuals.length>0)return;const t=this.controlPoints.length;var e=[];const i=[],s=[];for(let a=0;a<t;a++){const l=new xe(.1),c=new J({color:Ii(0)}),u=new O(l,c);u.position.set(this.controlPoints[a].x,this.controlPoints[a].y,this.controlPoints[a].z),this.mesh.add(u),e.push(this.controlPoints[a]),i.push(u),s.push(this.controlPoints[a])}const n=new B().setFromPoints(s),o=new pt({color:Ii(0)}),r=new G(n,o);this.mesh.add(r),this.deCasteljauVisuals[0]={points:i,line:r};for(let a=0;a<t-1;a++){const l=[],c=[],u=a===t-2?.25:.1,d=a===t-2?this.getColor():Ii(a+1);for(let x=0;x<t-a-1;x++){const y=Zs(e[x],e[x+1],this.deCasteljauT),b=new xe(u),v=new J({color:d}),w=new O(b,v);w.position.set(y.x,y.y,y.z),l.push(y),c.push(w),this.mesh.add(w)}e=l.slice();const m=new B().setFromPoints(l),p=new pt({color:d}),f=new G(m,p);this.deCasteljauVisuals[a+1]={points:c,line:f},this.mesh.add(f)}}disableDeCasteljau(){this.deCasteljauVisuals.forEach(t=>{t.points.forEach(e=>{this.mesh.remove(e)}),this.mesh.remove(t.line)}),this.deCasteljauVisuals=[]}getDeCasteljauT(){return this.deCasteljauT}updateDeCasteljauT(t){this.deCasteljauT=t,this.recomputeDeCasteljau()}getCollisionMesh(){return this.deCasteljauCollisionMesh}updateDeCasteljauFromNearestPoint(t,e=500){const i=this.curve.getPoints(e);let s=Number.MAX_VALUE,n=0;for(let o=0;o<i.length;o++){const r=i[o].distanceToSquared(t);r<s&&(s=r,n=o)}this.updateDeCasteljauT(n/500)}recomputeDeCasteljau(){if(this.mode===2){for(let t=0;t<this.deCasteljauVisuals[0].points.length;t++)this.deCasteljauVisuals[0].points[t].position.set(this.controlPoints[t].x,this.controlPoints[t].y,this.controlPoints[t].z);this.deCasteljauVisuals[0].line.geometry.setFromPoints(this.controlPoints);for(let t=0;t<this.deCasteljauVisuals.length-1;t++){const e=this.deCasteljauVisuals[t].points,i=this.deCasteljauVisuals[t+1].points;for(let s=0;s<e.length-1;s++){const n=vo(e[s],e[s+1],this.deCasteljauT);i[s].position.set(n.x,n.y,n.z)}this.deCasteljauVisuals[t+1].line.geometry.setFromPoints(i.map(s=>s.position))}}}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i])}else this.createEditHandle(this.controlPoints.length-1),this.setEditHandlePosition(this.controlPoints.length-1,t);this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>40&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=2)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++)this.setEditHandlePosition(e,this.controlPoints[e])}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<40?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){this.controlPoints[t].set(e.x,e.y,e.z),this.recompute(),this.updateConnectionVisual(),this.mode===2&&this.recomputeDeCasteljau(),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e)}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}highlight(){this.material.color.set(Rt())}resetHighlight(){this.resetColor()}select(){this.material.color.set(q())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new B().setFromPoints(this.controlPoints))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new tt(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry,this.deCasteljauCollisionMesh.geometry.dispose(),this.deCasteljauCollisionMesh.geometry=new tt(this.curve,this.segments,this.radius*10,this.radialSegments,!1)}}class ai extends K{controlPoints;constructor(t=[]){super(),this.controlPoints=t}getPoint(t,e=new g){const i=e;if((this.controlPoints.length-1)%3!==0)return console.log("BezierSplineCurve: Not 3p+1 control points!"),i;const s=(this.controlPoints.length-1)/3,n=Math.min(Math.floor(t*s),s-1),o=(t-n/s)*s,r=n*3,a=No(this.controlPoints[r],this.controlPoints[r+1],this.controlPoints[r+2],this.controlPoints[r+3],o);return a===null?(console.log("BezierSplineCurve:getPoint: Bezier calculation failed!"),i):(i.copy(a),i)}setPoints(t){this.controlPoints=t}copy(t){return t instanceof ai?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this):(console.log("BezierSplineCurve:copy: Source is not an instance of BezierCurve!"),this)}}var rn=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h))(rn||{});class os extends Lt{mode;controlPoints;segments;radius;radialSegments;geometry;material;curve;connectionVisuals;constructor(t,e=[new g(-5,0,0),new g(0,5,0),new g(5,0,0)],i=new z(0),s=100,n=new g(0,0,0),o=1){const r=new ai(e),a=.05,l=8,c=new tt(r,s,a,l,!1),u=new J({color:i});u.side=2;const d=new O(c,u);super(t,d,n),this.curve=r,this.geometry=c,this.material=u,this.controlPoints=e,this.color=i,this.segments=s,this.mode=o,this.radius=a,this.radialSegments=l,this.type="BezierSplineObject";for(let f=0;f<this.controlPoints.length;f++)f%3===0?this.createEditHandle(f,.3):this.createEditHandle(f,.15),this.setEditHandlePosition(f,this.controlPoints[f]);this.connectionVisuals=[];const m=new pt({color:q()});this.connectionVisuals.push(new G(new B().setFromPoints([this.controlPoints[0],this.controlPoints[1]]),m));const p=Math.floor((this.controlPoints.length-1)/3)+1;for(let f=1;f<p-1;f++){const x=2+(f-1)*3,y=[this.controlPoints[x],this.controlPoints[x+1],this.controlPoints[x+2]];this.connectionVisuals.push(new G(new B().setFromPoints(y),m))}this.connectionVisuals.push(new G(new B().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]]),m)),this.connectionVisuals.forEach(f=>this.mesh.add(f)),this.hideConnectionVisuals(),this.hideEditHandles()}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.hideConnectionVisuals(),this.hideEditHandles()):t===1&&(this.showConnectionVisuals(),this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),color:this.color.getHex(),segments:this.segments,mode:this.mode}}static fromJSON(t){const e=t.controlPoints.map(o=>new g(o.x,o.y,o.z)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(rn[n]===void 0)throw new Error("Invalid BezierCurveObject mode");return new os(t.name,e,i,t.segments,s,n)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e)}}unedit(){this.hideConnectionVisuals(),this.hideEditHandles()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}addControlPoint(t,e=!1){if(e){const i=this.controlPoints.length-1;this.controlPoints.unshift(new g(0,0,0)),this.createEditHandle(i+1,.15);const s=t.clone().add(this.controlPoints[1].clone().sub(t).setLength(3));this.controlPoints.unshift(s),this.createEditHandle(i+2,.15),this.controlPoints.unshift(t.clone()),this.createEditHandle(i+3,.3);for(let o=0;o<this.controlPoints.length;o++)this.setEditHandlePosition(o,this.controlPoints[o]);this.updateControlPoint(4,this.controlPoints[4]),this.updateControlPoint(0,this.controlPoints[0]);const n=new G(new B().setFromPoints([this.controlPoints[0],this.controlPoints[1]]),new pt({color:q()}));this.connectionVisuals.unshift(n),this.mesh.add(n)}else{const i=this.controlPoints.length-1;this.controlPoints.push(new g(0,0,0)),this.createEditHandle(i+1,.15);const s=t.clone().add(this.controlPoints[i].clone().sub(t).setLength(3));this.controlPoints.push(s),this.createEditHandle(i+2,.15),this.controlPoints.push(t.clone()),this.createEditHandle(i+3,.3),this.updateControlPoint(i-1,this.controlPoints[i-1]),this.updateControlPoint(i+3,this.controlPoints[i+3]);const n=new G(new B().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]]),new pt({color:q()}));this.connectionVisuals.push(n),this.mesh.add(n)}this.recompute(),this.updateConnectionVisuals(),this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>40&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=6)){if(t){this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.shift(),this.removeEditHandle(this.controlPoints.length);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i]);const e=this.connectionVisuals.shift();e&&this.mesh.remove(e)}else{this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length),this.controlPoints.pop(),this.removeEditHandle(this.controlPoints.length);const e=this.connectionVisuals.pop();e&&this.mesh.remove(e)}this.recompute(),this.updateConnectionVisuals(),this.controlPoints.length<40?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){if(t===0){const i=e.clone().sub(this.controlPoints[0]);this.controlPoints[0].set(e.x,e.y,e.z),this.setEditHandle(0),this.controlPoints[1].add(i),this.setEditHandle(1)}else if(t===1)this.controlPoints[1].set(e.x,e.y,e.z),this.setEditHandle(1);else if(t===this.controlPoints.length-1){const i=e.clone().sub(this.controlPoints[this.controlPoints.length-1]);this.controlPoints[this.controlPoints.length-1].set(e.x,e.y,e.z),this.setEditHandle(this.controlPoints.length-1),this.controlPoints[this.controlPoints.length-2].add(i),this.setEditHandle(this.controlPoints.length-2)}else if(t===this.controlPoints.length-2)this.controlPoints[this.controlPoints.length-2].set(e.x,e.y,e.z),this.setEditHandle(this.controlPoints.length-2);else if(t%3===0){const i=e.clone().sub(this.controlPoints[t]);this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t),this.controlPoints[t-1].add(i),this.setEditHandle(t-1),this.controlPoints[t+1].add(i),this.setEditHandle(t+1)}else if(t%3===1){this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t);const s=this.controlPoints[t-1].clone().multiplyScalar(2).sub(e);this.controlPoints[t-2].set(s.x,s.y,s.z),this.setEditHandle(t-2)}else if(t%3===2){this.controlPoints[t].set(e.x,e.y,e.z),this.setEditHandle(t);const s=this.controlPoints[t+1].clone().multiplyScalar(2).sub(e);this.controlPoints[t+2].set(s.x,s.y,s.z),this.setEditHandle(t+2)}this.recompute(),this.updateConnectionVisuals()}setEditHandle(t){this.hasEditHandle(t)&&this.setEditHandlePosition(t,this.controlPoints[t])}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}highlight(){this.material.color.set(Rt())}resetHighlight(){this.resetColor()}select(){this.material.color.set(q())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}hideConnectionVisuals(){this.connectionVisuals!==null&&this.connectionVisuals.forEach(t=>t.visible=!1)}showConnectionVisuals(){this.connectionVisuals!==null&&this.connectionVisuals.forEach(t=>t.visible=!0)}updateConnectionVisuals(){if(this.connectionVisuals===null)return;this.connectionVisuals[0].geometry.dispose(),this.connectionVisuals[0].geometry=new B().setFromPoints([this.controlPoints[0],this.controlPoints[1]]);const t=Math.floor((this.controlPoints.length-1)/3)+1;for(let e=1;e<t-1;e++){const i=2+(e-1)*3,s=[this.controlPoints[i],this.controlPoints[i+1],this.controlPoints[i+2]];this.connectionVisuals[e].geometry.dispose(),this.connectionVisuals[e].geometry=new B().setFromPoints(s)}this.connectionVisuals[this.connectionVisuals.length-1].geometry.dispose(),this.connectionVisuals[this.connectionVisuals.length-1].geometry=new B().setFromPoints([this.controlPoints[this.controlPoints.length-2],this.controlPoints[this.controlPoints.length-1]])}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new tt(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}function Ho(h,t,e,i,s=!1){if(!h||!Array.isArray(h)||h.length<2)return console.error("bspline: Invalid points array!"),null;if(t<i[0]||t>i[i.length-1])return console.error("bspline: Invalid t value!"),null;let n=h.length-1+(s?e:0);if(i.length!==n+e+2)return console.error("bspline: Invalid knots array!"),null;let o=new g(0,0,0);for(let r=0;r<=n;r++){const a=Ft(e,r,t,i);o.addScaledVector(h[r%h.length],a)}return o}class hi extends K{controlPoints;degree;knots;closed=!1;constructor(t=[],e=2,i=!1){super(),this.controlPoints=t,this.degree=e,this.closed=i;const s=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+s)}getPoint(t,e=new g){const i=e;if(this.controlPoints.length<2)return console.log("UniformBSplineCurve: Not enough control points!"),i;if(this.degree<2||this.degree>this.controlPoints.length-1)return console.log("UniformBSplineCurve: Degree is out of range!"),i;t=ko(t,this.degree,this.knots);const s=Ho(this.controlPoints,t,this.degree,this.knots,this.closed);return s===null?(console.log("UniformBSplineCurve:getPoint: BSpline calculation failed!"),i):(i.copy(s),i)}setPoints(t){this.controlPoints=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}setDegree(t){if(this.degree===t)return;this.degree=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}setClosed(t){if(this.closed===t)return;this.closed=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}copy(t){return t instanceof hi?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this.degree=t.degree,this.knots=t.knots.slice(),this.closed=t.closed,this):(console.log("UniformBSplineCurve:copy: Source is not an instance of UniformBSplineCurve!"),this)}}function ko(h,t,e){return e[t]+h*(e[e.length-t-1]-e[t])}var an=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h))(an||{});class rs extends Lt{mode;controlPoints;degree;segments;radius;radialSegments;geometry;material;curve;connectionVisual;closed=!1;constructor(t,e=[new g(-5,0,0),new g(0,5,0),new g(5,0,0)],i=2,s=new z(0),n=100,o=new g(0,0,0),r=1,a=!1){const l=new hi(e,i,a),c=.05,u=8,d=new tt(l,n,c,u,!1),m=new J({color:s});m.side=2;const p=new O(d,m);super(t,p,o),this.curve=l,this.geometry=d,this.material=m,this.controlPoints=e,this.degree=i,this.color=s,this.segments=n,this.mode=r,this.closed=a,this.radius=c,this.radialSegments=u,this.type="UniformBSplineObject";for(let y=0;y<this.controlPoints.length;y++)this.createEditHandle(y),this.setEditHandlePosition(y,this.controlPoints[y]);const f=new B().setFromPoints(this.controlPoints),x=new pt({color:q()});this.connectionVisual=new G(f,x),this.connectionVisual.castShadow=!0,p.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles()}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideEditHandles()):t===1&&(this.connectionVisual.visible=!0,this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z})),degree:this.degree,color:this.color.getHex(),segments:this.segments,mode:this.mode,closed:this.closed}}static fromJSON(t){const e=t.controlPoints.map(o=>new g(o.x,o.y,o.z)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(an[n]===void 0)throw new Error("Invalid UniformBSplineObject mode");return new rs(t.name,e,t.degree??2,i,t.segments??100,s,n,t.closed??!1)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideEditHandles()}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++)this.setEditHandlePosition(i,this.controlPoints[i])}else this.createEditHandle(this.controlPoints.length-1),this.setEditHandlePosition(this.controlPoints.length-1,t);this.controlPoints.length>100?this.updateSegments(1e3):this.controlPoints.length>30&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=3)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.controlPoints.length-1<this.degree&&(this.degree=this.controlPoints.length-1,this.curve.setDegree(this.degree)),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++)this.setEditHandlePosition(e,this.controlPoints[e])}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<30?this.updateSegments(100):this.controlPoints.length<100&&this.updateSegments(500)}}updateControlPoint(t,e){this.controlPoints[t].set(e.x,e.y,e.z),this.recompute(),this.updateConnectionVisual(),this.hasEditHandle(t)&&this.setEditHandlePosition(t,e)}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}getDegree(){return this.degree}setDegree(t){this.degree=t,this.curve.setDegree(t),this.recompute()}isClosed(){return this.closed}setClosed(t){this.closed=t,this.curve.setClosed(t),this.recompute()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}highlight(){this.material.color.set(Rt())}resetHighlight(){this.resetColor()}select(){this.material.color.set(q())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new B().setFromPoints(this.controlPoints))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new tt(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}function Uo(h,t,e,i,s=!1){if(!h||!Array.isArray(h)||h.length<2)return console.error("bspline: Invalid points array!"),null;if(t<i[0]||t>i[i.length-1])return console.error("bspline: Invalid t value!"),null;let n=h.length-1+(s?e:0);if(i.length!==n+e+2)return console.error("bspline: Invalid knots array!"),null;let o=new g(0,0,0),r=0;for(let a=0;a<=n;a++){const l=Ft(e,a,t,i),c=a%h.length,u=new g(h[c].x,h[c].y,h[c].z),d=h[c].w*l;o.addScaledVector(u,d),r+=d}return r===0?null:o.divideScalar(r)}class li extends K{controlPoints;degree;knots;closed;constructor(t=[],e=2,i=!1){super(),this.controlPoints=t,this.degree=e,this.closed=i;const s=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+s)}getPoint(t,e=new g){const i=e;if(this.controlPoints.length<3)return console.log("UniformRationalBSplineCurve: Not enough control points!"),i;if(this.degree<2||this.degree>this.controlPoints.length-1)return console.log("UniformRationalBSplineCurve: Degree is out of range!"),i;t=this.knots[this.degree]+t*(this.knots[this.knots.length-this.degree-1]-this.knots[this.degree]);const s=Uo(this.controlPoints,t,this.degree,this.knots,this.closed);return s===null?(console.log("UniformRationalBSplineCurve:getPoint: BSpline calculation failed!"),i):(i.copy(s),i)}setPoints(t){this.controlPoints=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}setDegree(t){if(this.degree===t)return;this.degree=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}setClosed(t){if(this.closed===t)return;this.closed=t;const e=this.closed?this.degree:0;this.knots=X(this.degree,this.controlPoints.length-1+e)}copy(t){return t instanceof li?(super.copy(t),this.controlPoints=t.controlPoints.map(e=>e.clone()),this.degree=t.degree,this.knots=t.knots.slice(),this.closed=t.closed,this):(console.log("UniformRationalBSplineCurve:copy: Source is not an instance of UniformBSplineCurve!"),this)}}var hn=(h=>(h[h.OBJECT=0]="OBJECT",h[h.CONTROL_POINTS=1]="CONTROL_POINTS",h))(hn||{});class as extends Lt{mode;controlPoints;degree;segments;radius;radialSegments;geometry;material;curve;connectionVisual;weightEditIndex=-1;weightEditRing;closed=!1;constructor(t,e=[new R(-5,0,0,1),new R(0,5,0,1),new R(5,0,0,1)],i=2,s=new z(0),n=100,o=new g(0,0,0),r=1,a=!1){const l=new li(e,i,a),c=.05,u=8,d=new tt(l,n,c,u,!1),m=new J({color:s});m.side=2;const p=new O(d,m);super(t,p,o),this.curve=l,this.geometry=d,this.material=m,this.controlPoints=e,this.degree=i,this.color=s,this.segments=n,this.mode=r,this.closed=a,this.radius=c,this.radialSegments=u,this.type="UniformRationBSplineObject";for(let v=0;v<this.controlPoints.length;v++){this.createEditHandle(v);const w=new g(this.controlPoints[v].x,this.controlPoints[v].y,this.controlPoints[v].z);this.setEditHandlePosition(v,w)}const f=new B().setFromPoints(this.controlPoints.map(v=>new g(v.x,v.y,v.z))),x=new pt({color:q()});this.connectionVisual=new G(f,x),this.connectionVisual.castShadow=!0,p.add(this.connectionVisual),this.connectionVisual.visible=!1,this.hideEditHandles();const y=new ei(.05,.06,32),b=new J({color:q()});this.weightEditRing=new O(y,b),p.add(this.weightEditRing),this.weightEditRing.visible=!1,A.onOrbitControlsChange(()=>{this.weightEditIndex!==-1&&this.weightEditRing.lookAt(A.getCamera().position)}),window.addEventListener("wheel",v=>{if(this.weightEditIndex!==-1){const w=this.controlPoints[this.weightEditIndex];w.w+=v.deltaY*.01,w.w<1&&(w.w=1),w.w>10&&(w.w=10),this.updateControlPoint(this.weightEditIndex,w),Vt.notify("objectChanged",Mt.VIEWPORT,this)}})}getMode(){return this.mode}setMode(t){this.mode=t,t===0?(this.connectionVisual.visible=!1,this.hideWeightEditRing(),this.hideEditHandles()):t===1&&(this.connectionVisual.visible=!0,this.showEditHandles())}toJSON(){return{name:this.name,type:this.type,position:{x:this.mesh.position.x,y:this.mesh.position.y,z:this.mesh.position.z},controlPoints:this.controlPoints.map(t=>({x:t.x,y:t.y,z:t.z,w:t.w})),degree:this.degree,color:this.color.getHex(),segments:this.segments,mode:this.mode,closed:this.closed}}static fromJSON(t){const e=t.controlPoints.map(o=>new R(o.x,o.y,o.z,o.w)),i=new z(t.color),s=new g(t.position.x,t.position.y,t.position.z),n=t.mode??1;if(hn[n]===void 0)throw new Error("Invalid UniformBSplineObject mode");return new as(t.name,e,t.degree??2,i,t.segments??100,s,n,t.closed??!1)}edit(){return this.editUpdate.bind(this)}editUpdate(){if(this.mode===1){const t=A.getSelectionManager().getSelectedEditHandleIndex();if(t===null)return;const e=this.getEditHandlePosition(t);if(e===null)return;this.updateControlPoint3(t,e),this.updateConnectionVisual()}}unedit(){this.connectionVisual.visible=!1,this.hideWeightEditRing(),this.hideEditHandles()}showWeightEditRing(t){this.weightEditIndex=t,this.updateWeightEditRing(),this.weightEditRing.visible=!0,A.noScroll()}hideWeightEditRing(){this.weightEditIndex=-1,this.weightEditRing.visible=!1,A.scroll()}updateWeightEditRing(){if(this.weightEditIndex===-1)return;const t=this.controlPoints[this.weightEditIndex];this.weightEditRing.position.set(t.x,t.y,t.z);const e=Ks(t.w,1,10,8,20);this.weightEditRing.scale.set(e,e,e),this.weightEditRing.lookAt(A.getCamera().position)}addControlPoint(t,e=!1){if(e?this.controlPoints.unshift(t):this.controlPoints.push(t),this.recompute(),this.updateConnectionVisual(),e){this.createEditHandle(this.controlPoints.length-1);for(let i=0;i<this.controlPoints.length;i++){const s=new g(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z);this.setEditHandlePosition(i,s)}}else{this.createEditHandle(this.controlPoints.length-1);const i=this.controlPoints.length-1,s=new g(this.controlPoints[i].x,this.controlPoints[i].y,this.controlPoints[i].z);this.setEditHandlePosition(this.controlPoints.length-1,s)}this.controlPoints.length>60?this.updateSegments(1e3):this.controlPoints.length>30&&this.updateSegments(500)}removeControlPoint(t=!1){if(!(this.controlPoints.length<=3)){if(t?this.controlPoints.shift():this.controlPoints.pop(),this.controlPoints.length-1<this.degree&&(this.degree=this.controlPoints.length-1,this.curve.setDegree(this.degree)),this.recompute(),this.updateConnectionVisual(),t){this.removeEditHandle(this.controlPoints.length);for(let e=0;e<this.controlPoints.length;e++){const i=new g(this.controlPoints[e].x,this.controlPoints[e].y,this.controlPoints[e].z);this.setEditHandlePosition(e,i)}}else this.removeEditHandle(this.controlPoints.length);this.controlPoints.length<30?this.updateSegments(100):this.controlPoints.length<60&&this.updateSegments(500)}}updateControlPoint3(t,e){this.updateControlPoint(t,new R(e.x,e.y,e.z,this.getControlPoint(t).w))}updateControlPoint(t,e){if(this.controlPoints[t].set(e.x,e.y,e.z,e.w),this.recompute(),this.updateConnectionVisual(),this.hasEditHandle(t)){const i=new g(this.controlPoints[t].x,this.controlPoints[t].y,this.controlPoints[t].z);this.setEditHandlePosition(t,i)}this.weightEditIndex===t&&this.updateWeightEditRing()}getControlPoint(t){return this.controlPoints[t]}getControlPoints(){return this.controlPoints.slice()}getDegree(){return this.degree}setDegree(t){this.degree=t,this.curve.setDegree(t),this.recompute()}isClosed(){return this.closed}setClosed(t){this.closed=t,this.curve.setClosed(t),this.recompute()}updateSegments(t){this.segments=t,this.recompute()}updateColor(t){super.setColor(t),this.material.color.set(t)}dispose(){this.material.dispose()}highlight(){this.material.color.set(Rt())}resetHighlight(){this.resetColor()}select(){this.material.color.set(q())}resetSelect(){this.resetColor()}resetColor(){this.material.color.set(this.color)}updateConnectionVisual(){this.connectionVisual!==null&&(this.connectionVisual.geometry.dispose(),this.connectionVisual.geometry=new B().setFromPoints(this.controlPoints.map(t=>new g(t.x,t.y,t.z))))}recompute(){this.curve.setPoints(this.controlPoints),this.geometry&&this.geometry.dispose(),this.geometry=new tt(this.curve,this.segments,this.radius,this.radialSegments,!1),this.mesh.geometry=this.geometry}}function Lo(){const h=[],t=A.getObjectManager().getObjects();for(const e of t)if(e instanceof ts){const i=e.toJSON(),s=i.controlPointsWidth,n=i.controlPointsHeight,o=[];for(let a=0;a<n;a++){o[a]=[];for(let l=0;l<s;l++){const c=i.controlPoints[a*s+l];o[a][l]=new R(c.x,c.y,c.z,1)}}const r=new Oi(o,e.getPosition(),new z(i.color),e.getReflectivity());h.push(r)}else if(e instanceof is){const i=e.toJSON(),s=i.controlPointsWidth+(i.closedU?i.degree:0),n=i.controlPointsHeight+(i.closedV?i.degree:0),o=[];for(let a=0;a<n;a++){o[a]=[];for(let l=0;l<s;l++){const c=a%i.controlPointsHeight,u=l%i.controlPointsWidth,d=i.controlPoints[c*i.controlPointsWidth+u];o[a][l]=new R(d.x,d.y,d.z,1)}}const r=Os(o,i.degree);for(const a of r){const l=new Oi(a,e.getPosition(),new z(i.color),i.reflectivity);h.push(l)}}else if(e instanceof ss){const i=e.toJSON(),s=i.controlPointsWidth+(i.closedU?i.degree:0),n=i.controlPointsHeight+(i.closedV?i.degree:0),o=[];for(let a=0;a<n;a++){o[a]=[];for(let l=0;l<s;l++){const c=a%i.controlPointsHeight,u=l%i.controlPointsWidth,d=i.controlPoints[c*i.controlPointsWidth+u];o[a][l]=new R(d.x*d.w,d.y*d.w,d.z*d.w,d.w)}}const r=Os(o,i.degree);for(const a of r){const l=new Oi(a,e.getPosition(),new z(i.color),i.reflectivity);h.push(l)}}else if(e instanceof ns){const i=e.getControlPoints(),s=new ri(i),n=e.toJSON(),o=s.getPoints(100),r=e.getPosition(),a=new z(n.color),l=Ge(i,o,r,a);h.push(...l)}else if(e instanceof os){const i=e.getControlPoints(),s=new ai(i),n=e.toJSON(),o=s.getPoints(100),r=e.getPosition(),a=new z(n.color),l=Ge(i,o,r,a);h.push(...l)}else if(e instanceof rs){const i=e.getControlPoints(),s=e.toJSON(),o=new hi(i,s.degree,s.closed).getPoints(100),r=e.getPosition(),a=new z(s.color),l=Ge(i,o,r,a);h.push(...l)}else if(e instanceof as){const i=e.getControlPoints(),s=e.toJSON(),o=new li(i,s.degree,s.closed).getPoints(100),r=e.getPosition(),a=new z(s.color),l=i.map(u=>new g(u.x,u.y,u.z)),c=Ge(l,o,r,a);h.push(...c)}return h}function Ge(h,t,e,i){const s=[];for(let r=0;r<t.length-1;r++){let a=t[r].clone(),l=t[r+1].clone();const c=new g().subVectors(l,a).normalize(),u=.05*.8;a.addScaledVector(c,-.04000000000000001),l.addScaledVector(c,u),s.push(new Is(e,a,l,.05,i,0))}s.push(new Ni(t[0],i,.05,0)),s.push(new Ni(t[t.length-1],i,.05,0));var o=null;for(const r of h)s.push(new Ni(r.clone().add(e),new z(.8,.8,.8),.05*5,0)),o&&s.push(new Is(e,o,r,.05*.5,new z(.8,.2,.2),0)),o=r.clone();return s}var Wi=(h=>(h.INFO="INFO",h.SUCCESS="SUCCESS",h))(Wi||{});const Ui=128;var _t=[],Je=0,ln=[],ne=new Uint8ClampedArray(0);function Wo(h,t,e,i){const s=[],{width:n,height:o}=h;for(let r=0;r<o;r+=t)for(let a=0;a<n;a+=t){const l=Math.min(t,n-a),c=Math.min(t,o-r);s.push({started:!1,batch:{workerId:-1,task:h,xStart:a,yStart:r,width:l,height:c,supersamplingFactor:e,suppixelOffsets:i}})}return s}function jo(h){const t=[],e=1/h;for(let i=0;i<h;i++)for(let s=0;s<h;s++)t.push({dx:(i+.5)*e-.5,dy:(s+.5)*e-.5});return t}function Go(h,t,e,i,s,n,o,r){for(let l=0;l<n;l++)for(let c=0;c<s;c++){const u=(l*s+c)*4,d=e+c,m=i+l;if(d>=o||m>=r)continue;const p=(m*o+d)*4;for(let f=0;f<4;f++)h[p+f]=t[u+f]}}self.onmessage=async h=>{const t=h.data,e=t.ambientLight,i=t.directionalLight,s=t.camera,n=new qs(s.fov,t.width/t.height,.1,1e3);n.position.copy(s.position),n.rotation.copy(s.rotation),n.up.copy(s.up),n.updateProjectionMatrix(),n.updateMatrixWorld(),e.color=new z(e.color.r,e.color.g,e.color.b),i.direction=new g(i.direction.x,i.direction.y,i.direction.z).normalize(),i.color=new z(i.color.r,i.color.g,i.color.b),ne=new Uint8ClampedArray(t.width*t.height*4);const o=jo(t.supersamplingFactor),r={type:"INFO",messages:["Dimensions: "+t.width+"x"+t.height,"Found "+t.objects.length+" objects","Bounces: "+t.bounces,"Supersampling: "+t.supersamplingFactor*t.supersamplingFactor+"x","Starting to raytrace..."],progress:0,data:ne,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(r);var a=[];_t=Wo(t,Ui,t.supersamplingFactor,o),a.push("Created "+_t.length+" batches with size "+Ui+"x"+Ui+"!");const l=Math.min(Math.max(4,navigator.hardwareConcurrency-6),_t.length);a.push("Using "+l+" workers!");try{for(let u=0;u<l;u++){a.push("Creating Worker-"+u+" ...");const d=new Worker(t.workerURL,{type:"module"});ln.push(d),d.onmessage=Jo,a.push("Starting Worker-"+u+" ...");const m=_t[u];m.started=!0,m.batch.workerId=u,d.postMessage(m.batch)}}catch(u){a.push("Error creating workers: "+u)}const c={type:"INFO",messages:a,progress:0,data:ne,width:t.width,height:t.height,startTime:t.startTime};self.postMessage(c)};function Jo(h){const t=h.data;Go(ne,t.data,t.xStart,t.yStart,t.width,t.height,t.task.width,t.task.height),Je++;const e=Math.round(Je/_t.length*100),i={type:"INFO",messages:["Batch "+Je+" of "+_t.length+" finished!"],progress:e,data:ne,width:t.task.width,height:t.task.height,startTime:t.startTime};if(self.postMessage(i),Je<_t.length){const n=_t.filter(r=>!r.started)[0],o=ln[t.workerId];n&&(n.started=!0,n.batch.workerId=t.workerId,o.postMessage(n.batch));return}const s={type:"SUCCESS",messages:["All batches finished!","Raytracing finished!"],progress:100,data:ne,width:t.task.width,height:t.task.height,startTime:t.startTime,objects:t.task.objects};self.postMessage(s)}var qo=self.location.href;function Xo(h,t,e,i){const s=t.clone().sub(h.position),n=new Qe(s,e.clone().normalize()),o=Ko(n),r=er(h),a=cn(r,o,7);if(a.length===0)return Hs();a[0];let l=[];for(const y of a){const v=ir(y).distanceToSquared(s);l.push({patch:y,distance:v})}l.sort((y,b)=>y.distance-b.distance);var c={u:0,v:0},u=!1,d=0;const m=10;for(const y of l){const b=y.patch,v=new E((b.u.x+b.u.y)/2,(b.v.x+b.v.y)/2),w=or(s,e,h.controlPoints,{u:v.x,v:v.y},m,Ke.EPSILON);if(w.converged){y.patch,c=w,u=!0,d=w.steps;break}}if(!u)return Hs();const p=un(h.controlPoints,c.u,c.v),f=nr(p.du,p.dv),x=p.point.distanceTo(s);return Zo(x,c.u,c.v,f,d/m,i)}function Yo(h,t,e,i,s,n,o){if(!t.hit)return{color:new z(0,0,0),normal:new g(0,0,0)};const r=e.clone().add(i.clone().normalize().multiplyScalar(t.distance)),a=t.normal.clone().normalize(),l=n.direction.clone().normalize(),c=e.clone().sub(r).normalize(),u=l.clone().add(c).normalize(),d=o?0:Math.max(0,a.dot(l))*n.intensity,p=o?0:Math.pow(Math.max(0,a.dot(u)),32)*n.intensity,f=n.color.clone().multiplyScalar(d),x=n.color.clone().multiplyScalar(p),b=s.color.clone().multiplyScalar(s.intensity).add(f).add(x),w=new z(h.color.r,h.color.g,h.color.b).multiply(b);return t.visColor&&w.copy(t.visColor),{color:w,normal:a}}function Hs(h){return{hit:!1,distance:1e6,u:0,v:0,normal:new g}}function Zo(h,t,e,i,s,n){const o={hit:!0,distance:h,u:t,v:e,normal:i};if(n==Bt.UVS)o.visColor=new z(t,e,0);else if(n==Bt.NORMALS)o.visColor=new z(i.x*.5+.5,i.y*.5+.5,i.z*.5+.5);else if(n==Bt.NR_STEPS){const r=new z(s,0,0);o.visColor=r}return o}function Ko(h){const t=h.origin,e=h.direction.clone().normalize(),i=new g;Math.abs(e.y)<.99?i.set(0,1,0):i.set(1,0,0);const s=new g().crossVectors(e,i).normalize(),n=new g().crossVectors(e,s).normalize(),o=new lt;return o.set(s.x,n.x,e.x,s.y,n.y,e.y,s.z,n.z,e.z),o.transpose(),{origin:t,direction:e,projectionMatrix:o}}function $o(h,t){const i=oi(h.position).clone().sub(t.origin);return i.applyMatrix3(t.projectionMatrix),new E(i.x,i.y)}function Qo(h){const t=new E(1/0,1/0),e=new E(-1/0,-1/0);for(const i of h)t.min(i),e.max(i);return t.x<=0&&e.x>=0&&t.y<=0&&e.y>=0}function ks(h,t=.5){const e=[h.map(n=>({position:n.position.clone(),uv:n.uv.clone()}))];for(let n=1;n<h.length;n++){const o=e[n-1],r=[];for(let a=0;a<o.length-1;a++){const l=o[a],c=o[a+1],u=l.position.clone().lerp(c.position,t),d=l.uv.clone().lerp(c.uv,t);r.push({position:u,uv:d})}e.push(r)}const i=e.map(n=>n[0]),s=e.map(n=>n[n.length-1]).reverse();return{left:i,right:s}}function tr(h,t=.5){const{controlPoints:e,u:i,v:s}=h,n=e.length,o=e[0].length,r=[],a=[];for(let P=0;P<o;P++){const C=e.map(V=>V[P]),{left:S,right:_}=ks(C,t);r.push(S),a.push(_)}const l=Us(r),c=Us(a),u=P=>{const C=[],S=[];for(let _=0;_<n;_++){const V=P[_],{left:F,right:j}=ks(V,t);C.push(F),S.push(j)}return[C,S]},[d,m]=u(l),[p,f]=u(c),x=i.x+(i.y-i.x)*t,y=s.x+(s.y-s.x)*t,b={controlPoints:d,u:new E(i.x,x),v:new E(s.x,y),level:h.level+1},v={controlPoints:p,u:new E(x,i.y),v:new E(s.x,y),level:h.level+1},w={controlPoints:m,u:new E(i.x,x),v:new E(y,s.y),level:h.level+1},M={controlPoints:f,u:new E(x,i.y),v:new E(y,s.y),level:h.level+1};return[b,v,w,M]}function Us(h){return h[0].map((t,e)=>h.map(i=>i[e]))}function er(h){if(h.data.patch)return h.data.patch;const t=[];for(let i=0;i<h.controlPoints.length;i++){const s=[];for(let n=0;n<h.controlPoints[i].length;n++){const o=h.controlPoints[i][n],r=new R(o.x,o.y,o.z,o.w);s.push({position:r,uv:new E(i/(h.controlPoints.length-1),n/(h.controlPoints[i].length-1))})}t.push(s)}const e={controlPoints:t,u:new E(0,1),v:new E(0,1),level:0};return h.data.patch=e,e}function cn(h,t,e){if(sr(h,t))return[];const i=h.controlPoints.map(r=>r.map(a=>$o(a,t)));if(!Qo(i.flat()))return[];if(e<=0)return[h];const n=h.subdivisions?h.subdivisions:tr(h,.5);h.level<5&&(h.subdivisions=n);const o=[];for(const r of n){const a=cn(r,t,e-1);o.push(...a)}return o}function ir(h){const t=h.controlPoints.length-1,e=h.controlPoints[0].length-1,i=new g(0,0,0);var s=0;for(let n=0;n<=t;n++){const o=at(t,n,.5);for(let r=0;r<=e;r++){const a=oi(h.controlPoints[n][r].position),l=h.controlPoints[n][r].position.w,c=at(e,r,.5),u=l*o*c;i.add(a.multiplyScalar(u)),s+=u}}return i.divideScalar(s)}function sr(h,t){for(const e of h.controlPoints.flat())if(oi(e.position).sub(t.origin).dot(t.direction)>0)return!1;return!0}function un(h,t,e){const i=h.length-1,s=h[0].length-1,n=new g(0,0,0);var o=0;const r=new g(0,0,0);var a=0;const l=new g(0,0,0);var c=0;for(let p=0;p<=i;p++){const f=at(i,p,t),x=Ds(i,p,t);for(let y=0;y<=s;y++){const b=oi(h[p][y]),v=h[p][y].w,w=at(s,y,e),M=Ds(s,y,e),P=v*f*w,C=v*x*w,S=v*f*M;n.add(b.clone().multiplyScalar(P)),o+=P,r.add(b.clone().multiplyScalar(C)),a+=C,l.add(b.clone().multiplyScalar(S)),c+=S}}const u=n.clone().divideScalar(o),d=r.clone().divideScalar(o).sub(n.clone().multiplyScalar(a/(o*o))),m=l.clone().divideScalar(o).sub(n.clone().multiplyScalar(c/(o*o)));return{point:u,du:d,dv:m}}function nr(h,t){const e=new g;return e.crossVectors(h,t),e.normalize(),e}function or(h,t,e,i,s=10,n=Ke.EPSILON){let o=i.u,r=i.v;const a=t.clone().normalize(),l=new g,c=new g;for(let u=0;u<s;u++){const{point:d,du:m,dv:p}=un(e,o,r);l.copy(d).sub(h);const f=l.dot(a);c.copy(a).multiplyScalar(f).add(h);const x=d.clone().sub(c),y=[x.dot(m),x.dot(p)],b=m.dot(a),v=p.dot(a),w=[[m.dot(m)-b*b,m.dot(p)-b*v],[p.dot(m)-v*b,p.dot(p)-v*v]],M=w[0][0]*w[1][1]-w[0][1]*w[1][0];if(!isFinite(M)||Math.abs(M)<n*n)break;const P=[[w[1][1]/M,-w[0][1]/M],[-w[1][0]/M,w[0][0]/M]],C=-(P[0][0]*y[0]+P[0][1]*y[1]),S=-(P[1][0]*y[0]+P[1][1]*y[1]);if(o+=C,r+=S,o=Math.max(0,Math.min(1,o)),r=Math.max(0,Math.min(1,r)),Math.sqrt(C*C+S*S)<n&&x.lengthSq()<n*n)return{converged:!0,u:o,v:r,steps:u+1}}return{converged:!1,u:o,v:r,steps:s}}function rr(h,t,e){const i=t.clone().sub(h.position),s=e.dot(e),n=2*i.dot(e),o=i.dot(i)-h.radius*h.radius,r=n*n-4*s*o;if(r<0)return{hit:!1,distance:1e6,u:0,v:0,normal:new g};const a=Math.sqrt(r),l=(-n-a)/(2*s),c=(-n+a)/(2*s),u=Math.min(l,c);if(u<0)return{hit:!1,distance:1e6,u:0,v:0,normal:new g};const m=t.clone().add(e.clone().multiplyScalar(u)).clone().sub(h.position).normalize(),p=.5+Math.atan2(m.z,m.x)/(2*Math.PI),f=.5-Math.asin(m.y)/Math.PI;return{hit:!0,distance:u,u:p,v:f,normal:m}}function ar(h,t,e,i,s,n,o){return{color:h.color,normal:t.normal.clone()}}function hr(h,t,e){const i=new g().copy(h.pointA),s=new g().copy(h.pointB),n=new g().subVectors(s,i),o=n.length(),r=n.clone().normalize(),l=t.clone().sub(h.position),c=e.clone().normalize(),u=c.clone().sub(r.clone().multiplyScalar(c.dot(r))),d=l.clone().sub(i),m=d.clone().sub(r.clone().multiplyScalar(d.dot(r))),p=u.dot(u),f=2*u.dot(m),x=m.dot(m)-h.radius*h.radius,y=f*f-4*p*x;if(y<0||Math.abs(p)<1e-6)return{hit:!1,distance:1e6,u:0,v:0,normal:new g};const b=Math.sqrt(y),v=(-f-b)/(2*p),w=(-f+b)/(2*p);let M=1/0,P=new g,C=0,S=0;for(const _ of[v,w]){if(_<0)continue;const V=l.clone().add(c.clone().multiplyScalar(_)),F=V.clone().sub(i).dot(r);if(!(F<0||F>o)&&_<M){M=_;const j=V.clone().sub(i),I=r.clone().multiplyScalar(j.dot(r));P=j.clone().sub(I).normalize();const $=new g(1,0,0);Math.abs(r.dot($))>.99&&$.set(0,1,0);const Dt=$.clone().cross(r).normalize(),Wt=r.clone().cross(Dt).normalize(),It=j.clone().sub(I).normalize();C=(Math.atan2(It.dot(Wt),It.dot(Dt))/(2*Math.PI)+1)%1,S=F/o}}return M===1/0?{hit:!1,distance:1e6,u:0,v:0,normal:new g}:{hit:!0,distance:M,u:C,v:S,normal:P}}function lr(h,t,e,i,s,n,o){return{color:h.color,normal:t.normal.clone()}}class Ke{static dialog=null;static EPSILON=1e-4;static prepareTask(t,e,i,s,n,o=Bt.NONE,r=null){const a=A.getPerspectiveCamera();if(a===null)throw new Error("Trying to raytrace in 2D mode!");const c=A.getDirectionalLight().position.clone().normalize(),u=Lo();var d=[];return r!==null&&r.frames>0&&r.degreesPerFrame>0&&(d=this.generateOrbitingCameraFrames(a,A.getOrbitControls().target,r.degreesPerFrame,r.frames,r.direction)),{startTime:0,width:t,height:e,bounces:i,skybox:s,supersamplingFactor:n,quality:en.HIGH,objects:u,ambientLight:{color:A.getAmbientLight().color.clone(),intensity:A.getAmbientLight().intensity},directionalLight:{direction:c,color:A.getDirectionalLight().color.clone(),intensity:A.getDirectionalLight().intensity},camera:{position:a.position.clone(),rotation:a.rotation.clone(),fov:a.fov,up:a.up.clone()},workerURL:qo,visualisation:o,videoData:d.length>0?{frames:d}:void 0}}static execute(t){this.dialog||(this.dialog=new Bo),this.dialog.show(),this.dialog.setProgress(0),this.dialog.log("Starting Raytracer..."),this.dialog.log("Creating Worker...");const e=new Worker(new URL("/assets/raytracerWorker-B8wlQnE5.js",import.meta.url),{type:"module"});e.onmessage=this.onMessage.bind(this),this.dialog.log("Starting Worker..."),t.startTime=Date.now(),e.postMessage(t)}static onMessage(t){if(!this.dialog)return;const e=t.data.type;if(e===Wi.INFO)t.data.messages.forEach(i=>{this.dialog&&this.dialog.logInfo("Worker: "+i)}),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.setProgress(t.data.progress);else if(e===Wi.SUCCESS){this.dialog.setProgress(100),this.dialog.logInfo("Worker: "+t.data.messages[0]),this.dialog.logSuccess("Worker finished!");const i=Date.now()-t.data.startTime,s=Math.floor(i/6e4),n=(i%6e4/1e3).toFixed(2);s>0?this.dialog.logSuccess(`Raytracing took ${s.toString()} minutes and ${n} seconds`):this.dialog.logSuccess(`Raytracing took ${n} seconds`),this.dialog.setPreview(t.data.data,t.data.width,t.data.height),this.dialog.allowDownload(()=>{this.dialog&&(this.dialog.logSuccess("Download started..."),this.downloadImage(t.data.data,t.data.width,t.data.height))}),this.dialog.allowClose(()=>{this.dialog&&this.dialog.hide()})}}static raytrace(t,e,i,s,n,o,r,a){if(i<0)return this.raytraceSkybox(e,new z(.5,.7,1),s);var l=void 0,c=void 0,u=Number.MAX_VALUE;for(const d of n){const m=this.rayhitObject(d,t,e,a);m.hit&&m.distance<u&&(u=m.distance,l=d,c=m)}if(l&&c){const d=t.clone().add(e.clone().multiplyScalar(u)).add(c.normal.clone().multiplyScalar(.12)),m=this.shadowRay(d,n,l,r),p=this.raytraceObject(l,c,t,e,o,r,m);if(a==Bt.NONE&&l.reflectivity>0){const f=e.clone().reflect(c.normal).normalize(),x=n,y=this.raytrace(d,f,i-1,s,x,o,r,Bt.NONE);p.color.lerp(y.color,l.reflectivity)}return{color:p.color,hit:!0}}else return this.raytraceSkybox(e,new z(.5,.7,1),s)}static raytraceObject(t,e,i,s,n,o,r){switch(t.type){case kt.BezierPatch:return Yo(t,e,i,s,n,o,r);case kt.Sphere:return ar(t,e);case kt.Cylinder:return lr(t,e)}return{color:new z(0,0,0),normal:new g(0,0,0)}}static rayhitObject(t,e,i,s,n=!1){switch(t.type){case kt.BezierPatch:return Xo(t,e,i,s);case kt.Sphere:return rr(t,e,i);case kt.Cylinder:return hr(t,e,i)}return{hit:!1,distance:0,u:0,v:0,normal:new g}}static shadowRay(t,e,i,s){const n=s.direction.clone().normalize(),o=t.clone();for(const r of e)if(this.rayhitObject(r,o,n,Bt.NONE,!0).hit)return!0;return!1}static raytraceSkybox(t,e,i){if(i==Ze.BLACK)return{color:new z(0,0,0),hit:!1};if(i==Ze.WHITE)return{color:new z(1,1,1),hit:!1};const s=t.y,n=new z(.5,.5,.5),o=new z(.2,.2,.2),r=e.clone().multiplyScalar(.5),a=e.clone(),l=.5*(s+1);return s>0?{color:a.clone().lerp(r,l),hit:!1}:{color:o.clone().lerp(n,l),hit:!1}}static setPixel(t,e,i,s,n,o=1){const r=(s*e+i)*4;t[r]=Math.floor(n.r*255),t[r+1]=Math.floor(n.g*255),t[r+2]=Math.floor(n.b*255),t[r+3]=Math.floor(o*255)}static downloadImage(t,e,i){const s=new ImageData(t,e,i),n=document.createElement("canvas");n.width=e,n.height=i;const o=n.getContext("2d");if(o){o.putImageData(s,0,0);const r=n.toDataURL("image/png"),a=document.createElement("a");a.href=r,a.download="raytrace.png",a.click()}else throw new Error("Failed to get canvas context")}static generateOrbitingCameraFrames(t,e=new g(0,0,0),i=1,s=360,n="left"){const o=[],r=new g().subVectors(t.position,e),a=r.length(),l=t.up.clone(),c=Math.atan2(r.z,r.x),u=Math.asin(r.y/a);for(let d=0;d<s;d++){const m=c+js.degToRad(i*d)*(n==="left"?1:-1),p=e.x+a*Math.cos(m)*Math.cos(u),f=e.z+a*Math.sin(m)*Math.cos(u),x=e.y+a*Math.sin(u),y=new g(p,x,f),b=new H().lookAt(y,e,l),v=new Ut().setFromRotationMatrix(b);o.push({position:y.clone(),rotation:v.clone()})}return o}}self.onmessage=async h=>{const t=h.data,e=t.task,i=e.ambientLight,s=e.directionalLight,n=e.camera,o=new qs(n.fov,e.width/e.height,.1,1e3);o.position.copy(n.position),o.rotation.copy(n.rotation),o.up.copy(n.up),o.updateProjectionMatrix(),o.updateMatrixWorld(),i.color=new z(i.color.r,i.color.g,i.color.b),s.direction=new g(s.direction.x,s.direction.y,s.direction.z).normalize(),s.color=new z(s.color.r,s.color.g,s.color.b);const r=new Uint8ClampedArray(t.width*t.height*4),a=o.position.clone();for(let c=t.xStart;c<t.xStart+t.width;c++)for(let u=t.yStart;u<t.yStart+t.height;u++){const d=c-t.xStart,m=u-t.yStart,p=new z(0,0,0);let f=!1;for(const y of t.suppixelOffsets){const b=(c+y.dx)/e.width*2-1,v=1-(u+y.dy)/e.height*2,w=new fo;w.setFromCamera(new E(b,v),o);const M=w.ray.direction.clone().normalize(),P=Ke.raytrace(a,M,e.bounces,e.skybox,e.objects,i,s,e.visualisation);p.add(P.color),f||=P.hit}p.multiplyScalar(1/(t.supersamplingFactor*t.supersamplingFactor));const x=e.skybox==Ze.TRANSPARENT?0:1;Ke.setPixel(r,t.width,d,m,p,f?1:x)}const l={workerId:t.workerId,progress:100,data:r,xStart:t.xStart,yStart:t.yStart,width:t.width,height:t.height,startTime:e.startTime,task:e};self.postMessage(l)};
